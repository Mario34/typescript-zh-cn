import{r as t,o,c,a as s,b as e,F as l,e as a,d as n}from"./app.fed89489.js";import{_ as r}from"./plugin-vue_export-helper.21dcd24c.js";const u={},i=a(`<h1 id="typescript-2-7" tabindex="-1"><a class="header-anchor" href="#typescript-2-7" aria-hidden="true">#</a> TypeScript 2.7</h1><h2 id="typescript-2-7-1" tabindex="-1"><a class="header-anchor" href="#typescript-2-7-1" aria-hidden="true">#</a> TypeScript 2.7</h2><h3 id="\u5E38\u91CF\u540D\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#\u5E38\u91CF\u540D\u5C5E\u6027" aria-hidden="true">#</a> \u5E38\u91CF\u540D\u5C5E\u6027</h3><p>TypeScript 2.7 \u65B0\u589E\u4E86\u4EE5\u5E38\u91CF\uFF08\u5305\u62ECECMAScript symbols\uFF09\u4F5C\u4E3A\u7C7B\u5C5E\u6027\u540D\u7684\u7C7B\u578B\u63A8\u65AD\u652F\u6301\u3002</p><h4 id="\u4F8B\u5B50" tabindex="-1"><a class="header-anchor" href="#\u4F8B\u5B50" aria-hidden="true">#</a> \u4F8B\u5B50</h4><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// Lib</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">SERIALIZE</span> <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;serialize-method-key&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token constant">SERIALIZE</span><span class="token punctuation">]</span><span class="token punctuation">(</span>obj<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// consumer</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> <span class="token constant">SERIALIZE</span><span class="token punctuation">,</span> Serializable <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;lib&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">JSONSerializableItem</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token constant">SERIALIZE</span><span class="token punctuation">]</span><span class="token punctuation">(</span>obj<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u8FD9\u540C\u6837\u9002\u7528\u4E8E\u6570\u5B57\u548C\u5B57\u7B26\u4E32\u7684\u5B57\u9762\u91CF</p><h4 id="\u4F8B\u5B50-1" tabindex="-1"><a class="header-anchor" href="#\u4F8B\u5B50-1" aria-hidden="true">#</a> \u4F8B\u5B50</h4><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> Foo <span class="token operator">=</span> <span class="token string">&quot;Foo&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> Bar <span class="token operator">=</span> <span class="token string">&quot;Bar&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span>Foo<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span>Bar<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> a <span class="token operator">=</span> x<span class="token punctuation">[</span>Foo<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// a\u7C7B\u578B\u4E3A&#39;number&#39;; \u5728\u4E4B\u524D\u7248\u672C\uFF0C\u7C7B\u578B\u4E3A&#39;number | string&#39;\uFF0C\u73B0\u5728\u53EF\u4EE5\u8FFD\u8E2A\u5230\u7C7B\u578B</span>
<span class="token keyword">let</span> b <span class="token operator">=</span> x<span class="token punctuation">[</span>Bar<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// b\u7C7B\u578B\u4E3A&#39;string&#39;;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="unique-symbol\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#unique-symbol\u7C7B\u578B" aria-hidden="true">#</a> <code>unique symbol</code>\u7C7B\u578B</h3><p>\u4E3A\u4E86\u5C06symbol\u53D8\u91CF\u89C6\u4F5C\u6709\u552F\u4E00\u503C\u7684\u5B57\u9762\u91CF\uFF0C\u6211\u4EEC\u65B0\u589E\u4E86\u7C7B\u578B<code>unique symbol</code>\u3002 <code>unique symbol</code>\u662F<code>symbol</code>\u7684\u5B50\u7C7B\u578B\uFF0C\u4EC5\u7531\u8C03\u7528<code>Symbol()</code>\u6216<code>Symbol.for()</code>\u6216\u660E\u786E\u7684\u7C7B\u578B\u6CE8\u91CA\u751F\u6210\u3002 \u8BE5\u7C7B\u578B\u53EA\u5141\u8BB8\u5728<code>const</code>\u58F0\u660E\u6216\u8005 <code>readonly static</code> \u5C5E\u6027\u58F0\u660E\u4E2D\u4F7F\u7528\u3002\u5982\u679C\u8981\u5F15\u7528\u67D0\u4E2A\u7279\u5B9A\u7684<code>unique symbol</code>\u53D8\u91CF\uFF0C\u4F60\u5FC5\u987B\u4F7F\u7528<code>typeof</code>\u64CD\u4F5C\u7B26\u3002 \u6BCF\u4E2A\u5BF9<code>unique symbols</code>\u7684\u5F15\u7528\u90FD\u610F\u5473\u7740\u4E00\u4E2A\u5B8C\u5168\u552F\u4E00\u7684\u58F0\u660E\u8EAB\u4EFD\uFF0C\u4E0E\u88AB\u5F15\u7528\u7684\u53D8\u91CF\u58F0\u660E\u7ED1\u5B9A\u3002</p><h4 id="\u4F8B\u5B50-2" tabindex="-1"><a class="header-anchor" href="#\u4F8B\u5B50-2" aria-hidden="true">#</a> \u4F8B\u5B50</h4><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// Works</span>
<span class="token keyword">declare</span> <span class="token keyword">const</span> Foo<span class="token operator">:</span> unique <span class="token builtin">symbol</span><span class="token punctuation">;</span>

<span class="token comment">// Error! &#39;Bar&#39;\u4E0D\u662Fconst\u58F0\u660E\u7684</span>
<span class="token keyword">let</span> Bar<span class="token operator">:</span> unique <span class="token builtin">symbol</span> <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Works - \u5BF9\u53D8\u91CFFoo\u7684\u5F15\u7528\uFF0C\u5B83\u7684\u58F0\u660E\u8EAB\u4EFD\u4E0EFoo\u7ED1\u5B9A</span>
<span class="token keyword">let</span> Baz<span class="token operator">:</span> <span class="token keyword">typeof</span> Foo <span class="token operator">=</span> Foo<span class="token punctuation">;</span>

<span class="token comment">// Also works.</span>
<span class="token keyword">class</span> <span class="token class-name"><span class="token constant">C</span></span> <span class="token punctuation">{</span>
    <span class="token keyword">static</span> <span class="token keyword">readonly</span> StaticSymbol<span class="token operator">:</span> unique <span class="token builtin">symbol</span> <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u56E0\u4E3A\u6BCF\u4E2A<code>unique symbols</code>\u90FD\u6709\u4E2A\u5B8C\u5168\u72EC\u7ACB\u7684\u8EAB\u4EFD\uFF0C\u56E0\u6B64\u4E24\u4E2A<code>unique symbols</code>\u7C7B\u578B\u4E4B\u95F4\u4E0D\u80FD\u8D4B\u503C\u6216\u6BD4\u8F83\u3002</p><h4 id="example" tabindex="-1"><a class="header-anchor" href="#example" aria-hidden="true">#</a> Example</h4><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> Foo <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> Bar <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Error: \u4E0D\u80FD\u6BD4\u8F83\u4E24\u4E2Aunique symbols.</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>Foo <span class="token operator">===</span> Bar<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="\u66F4\u4E25\u683C\u7684\u7C7B\u5C5E\u6027\u68C0\u67E5" tabindex="-1"><a class="header-anchor" href="#\u66F4\u4E25\u683C\u7684\u7C7B\u5C5E\u6027\u68C0\u67E5" aria-hidden="true">#</a> \u66F4\u4E25\u683C\u7684\u7C7B\u5C5E\u6027\u68C0\u67E5</h3><p>TypeScript 2.7\u5F15\u5165\u4E86\u4E00\u4E2A\u65B0\u7684\u63A7\u5236\u4E25\u683C\u6027\u7684\u6807\u8BB0<code>--strictPropertyInitialization</code>\u3002 \u4F7F\u7528\u8FD9\u4E2A\u6807\u8BB0\u540E\uFF0CTypeScript\u8981\u6C42\u7C7B\u7684\u6240\u6709\u5B9E\u4F8B\u5C5E\u6027\u5728\u6784\u9020\u51FD\u6570\u91CC\u6216\u5C5E\u6027\u521D\u59CB\u5316\u5668\u4E2D\u90FD\u5F97\u5230\u521D\u59CB\u5316\u3002\u6BD4\u5982\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name"><span class="token constant">C</span></span> <span class="token punctuation">{</span>
    foo<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
    bar <span class="token operator">=</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">;</span>
    baz<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
<span class="token comment">//  ~~~</span>
<span class="token comment">//  Error! Property &#39;baz&#39; has no initializer and is not assigned directly in the constructor.</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>foo <span class="token operator">=</span> <span class="token number">42</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u4E0A\u4F8B\u4E2D\uFF0C<code>baz</code>\u4ECE\u672A\u88AB\u8D4B\u503C\uFF0C\u56E0\u6B64TypeScript\u62A5\u9519\u4E86\u3002 \u5982\u679C\u6211\u4EEC\u7684\u672C\u610F\u5C31\u662F\u8BA9<code>baz</code>\u53EF\u4EE5\u4E3A<code>undefined</code>\uFF0C\u90A3\u4E48\u5E94\u8BE5\u58F0\u660E\u5B83\u7684\u7C7B\u578B\u4E3A<code>boolean | undefined</code>\u3002</p><p>\u5728\u67D0\u4E9B\u573A\u666F\u4E0B\uFF0C\u5C5E\u6027\u4F1A\u88AB\u95F4\u63A5\u5730\u521D\u59CB\u5316\uFF08\u4F7F\u7528\u8F85\u52A9\u65B9\u6CD5\u6216\u4F9D\u8D56\u6CE8\u5165\u5E93\uFF09\u3002 \u8FD9\u79CD\u60C5\u51B5\u4E0B\uFF0C\u4F60\u53EF\u4EE5\u5728\u5C5E\u6027\u4E0A\u4F7F\u7528_\u663E\u5F0F\u8D4B\u503C\u65AD\u8A00_\uFF08<em>definite assignment assertion modifiers</em>\uFF09\u6765\u5E2E\u52A9\u7C7B\u578B\u7CFB\u7EDF\u8BC6\u522B\u7C7B\u578B\uFF08\u4E0B\u9762\u4F1A\u8BA8\u8BBA\uFF09</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name"><span class="token constant">C</span></span> <span class="token punctuation">{</span>
    foo<span class="token operator">!</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
    <span class="token comment">// ^</span>
    <span class="token comment">// Notice this exclamation point!</span>
    <span class="token comment">// This is the &quot;definite assignment assertion&quot; modifier.</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">initialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">initialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>foo <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u6CE8\u610F\uFF0C<code>--strictPropertyInitialization</code>\u4F1A\u5728\u5176\u5B83<code>--strict</code>\u6A21\u5F0F\u6807\u8BB0\u4E0B\u88AB\u542F\u7528\uFF0C\u8FD9\u53EF\u80FD\u4F1A\u5F71\u54CD\u4F60\u7684\u5DE5\u7A0B\u3002 \u4F60\u53EF\u4EE5\u5728<code>tsconfig.json</code>\u7684<code>compilerOptions</code>\u91CC\u5C06<code>strictPropertyInitialization</code>\u8BBE\u7F6E\u4E3A<code>false</code>\uFF0C \u6216\u8005\u5728\u547D\u4EE4\u884C\u4E0A\u5C06<code>--strictPropertyInitialization</code>\u8BBE\u7F6E\u4E3A<code>false</code>\u6765\u5173\u95ED\u68C0\u67E5\u3002</p><h3 id="\u663E\u5F0F\u8D4B\u503C\u65AD\u8A00" tabindex="-1"><a class="header-anchor" href="#\u663E\u5F0F\u8D4B\u503C\u65AD\u8A00" aria-hidden="true">#</a> \u663E\u5F0F\u8D4B\u503C\u65AD\u8A00</h3><p>\u663E\u5F0F\u8D4B\u503C\u65AD\u8A00\u5141\u8BB8\u4F60\u5728\u5B9E\u4F8B\u5C5E\u6027\u548C\u53D8\u91CF\u58F0\u660E\u4E4B\u540E\u52A0\u4E00\u4E2A\u611F\u53F9\u53F7<code>!</code>\uFF0C\u6765\u544A\u8BC9TypeScript\u8FD9\u4E2A\u53D8\u91CF\u786E\u5B9E\u5DF2\u88AB\u8D4B\u503C\uFF0C\u5373\u4F7FTypeScript\u4E0D\u80FD\u5206\u6790\u51FA\u8FD9\u4E2A\u7ED3\u679C\u3002</p><h4 id="\u4F8B\u5B50-3" tabindex="-1"><a class="header-anchor" href="#\u4F8B\u5B50-3" aria-hidden="true">#</a> \u4F8B\u5B50</h4><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token function">initialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x <span class="token operator">+</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//          ~   ~</span>
<span class="token comment">// Error! Variable &#39;x&#39; is used before being assigned.</span>

<span class="token keyword">function</span> <span class="token function">initialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    x <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u4F7F\u7528\u663E\u5F0F\u7C7B\u578B\u65AD\u8A00\u5728<code>x</code>\u7684\u58F0\u660E\u540E\u52A0\u4E0A<code>!</code>\uFF0CTypescript\u53EF\u4EE5\u8BA4\u4E3A\u53D8\u91CF<code>x</code>\u786E\u5B9E\u5DF2\u88AB\u8D4B\u503C</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// Notice the &#39;!&#39;</span>
<span class="token keyword">let</span> x<span class="token operator">!</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token function">initialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// No error!</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x <span class="token operator">+</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">initialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    x <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u5728\u67D0\u79CD\u610F\u4E49\u4E0A\uFF0C\u663E\u5F0F\u7C7B\u578B\u65AD\u8A00\u8FD0\u7B97\u7B26\u662F\u975E\u7A7A\u65AD\u8A00\u8FD0\u7B97\u7B26\uFF08\u5728\u8868\u8FBE\u5F0F\u540E\u7F00\u7684<code>!</code>\uFF09\u7684\u5BF9\u5076\uFF0C\u5C31\u50CF\u4E0B\u9762\u8FD9\u4E2A\u4F8B\u5B50</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token function">initialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// No error!</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token operator">!</span> <span class="token operator">+</span> x<span class="token operator">!</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">initialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    x <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u5728\u4E0A\u9762\u7684\u4F8B\u5B50\u4E2D\uFF0C\u6211\u4EEC\u77E5\u9053<code>x</code>\u90FD\u4F1A\u88AB\u521D\u59CB\u5316\uFF0C\u56E0\u6B64\u4F7F\u7528\u663E\u5F0F\u7C7B\u578B\u65AD\u8A00\u6BD4\u4F7F\u7528\u975E\u7A7A\u65AD\u8A00\u66F4\u5408\u9002\u3002</p><h3 id="\u56FA\u5B9A\u957F\u5EA6\u5143\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u56FA\u5B9A\u957F\u5EA6\u5143\u7EC4" aria-hidden="true">#</a> \u56FA\u5B9A\u957F\u5EA6\u5143\u7EC4</h3><p>TypeScript 2.6\u4E4B\u524D\uFF0C<code>[number, string, string]</code>\u88AB\u5F53\u4F5C<code>[number, string]</code>\u7684\u5B50\u7C7B\u578B\u3002 \u8FD9\u5BF9\u4E8ETypeScript\u7684\u7ED3\u6784\u6027\u800C\u8A00\u662F\u5408\u7406\u7684\u2014\u2014<code>[number, string, string]</code>\u7684\u524D\u4E24\u4E2A\u5143\u7D20\u5404\u81EA\u662F<code>[number, string]</code>\u91CC\u524D\u4E24\u4E2A\u5143\u7D20\u7684\u5B50\u7C7B\u578B\u3002 \u4F46\u662F\uFF0C\u6211\u4EEC\u6CE8\u610F\u5230\u5728\u5728\u5B9E\u8DF5\u4E2D\u7684\u5927\u591A\u6570\u60C5\u5F62\u4E0B\uFF0C\u8FD9\u5E76\u4E0D\u662F\u5F00\u53D1\u8005\u6240\u5E0C\u671B\u7684\u3002</p>`,35),k=n("\u5728TypeScript 2.7\u4E2D\uFF0C\u5177\u6709\u4E0D\u540C\u5143\u6570\u7684\u5143\u7EC4\u4E0D\u518D\u5141\u8BB8\u76F8\u4E92\u8D4B\u503C\u3002\u611F\u8C22"),d={href:"https://github.com/tycho01",target:"_blank",rel:"noopener noreferrer"},b=n("Tycho Grouwstra"),m=n("\u63D0\u4EA4\u7684PR\uFF0C\u5143\u7EC4\u7C7B\u578B\u73B0\u5728\u4F1A\u5C06\u5B83\u4EEC\u7684\u5143\u6570\u7F16\u7801\u8FDB\u5B83\u4EEC\u5BF9\u5E94\u7684"),y=s("code",null,"length",-1),h=n("\u5C5E\u6027\u7684\u7C7B\u578B\u91CC\u3002\u539F\u7406\u662F\u5229\u7528\u6570\u5B57\u5B57\u9762\u91CF\u7C7B\u578B\u533A\u5206\u51FA\u4E0D\u540C\u957F\u5EA6\u7684\u5143\u7EC4\u3002"),f=a(`<p>\u6982\u5FF5\u4E0A\u8BB2\uFF0C\u4F60\u53EF\u4EE5\u628A<code>[number, string]</code>\u7C7B\u578B\u7B49\u540C\u4E8E\u4E0B\u9762\u7684<code>NumStrTuple</code>\u58F0\u660E\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">NumStrTuple</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token number">0</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
    <span class="token number">1</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    length<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">// \u6CE8\u610Flength\u7684\u7C7B\u578B\u662F\u5B57\u9762\u91CF&#39;2&#39;\uFF0C\u800C\u4E0D\u662F&#39;number&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u8BF7\u6CE8\u610F\uFF0C\u8FD9\u662F\u4E00\u4E2A\u7834\u574F\u6027\u6539\u52A8\u3002 \u5982\u679C\u4F60\u60F3\u8981\u548C\u4EE5\u524D\u4E00\u6837\uFF0C\u8BA9\u5143\u7EC4\u4EC5\u9650\u5236\u6700\u5C0F\u957F\u5EA6\uFF0C\u90A3\u4E48\u4F60\u53EF\u4EE5\u4F7F\u7528\u4E00\u4E2A\u7C7B\u4F3C\u7684\u58F0\u660E\u4F46\u4E0D\u663E\u5F0F\u6307\u5B9A<code>length</code>\u5C5E\u6027\uFF0C\u8FD9\u6837<code>length</code>\u5C5E\u6027\u7684\u7C7B\u578B\u5C31\u4F1A\u56DE\u9000\u4E3A<code>number</code></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">MinimumNumStrTuple</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token number">0</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
    <span class="token number">1</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u6CE8\uFF1A\u8FD9\u5E76\u4E0D\u610F\u5473\u7740\u5143\u7EC4\u662F\u4E0D\u53EF\u53D8\u957F\u7684\u6570\u7EC4\uFF0C\u800C\u4EC5\u4EC5\u662F\u4E00\u4E2A\u7EA6\u5B9A\u3002</p><h3 id="\u66F4\u4F18\u7684\u5BF9\u8C61\u5B57\u9762\u91CF\u63A8\u65AD" tabindex="-1"><a class="header-anchor" href="#\u66F4\u4F18\u7684\u5BF9\u8C61\u5B57\u9762\u91CF\u63A8\u65AD" aria-hidden="true">#</a> \u66F4\u4F18\u7684\u5BF9\u8C61\u5B57\u9762\u91CF\u63A8\u65AD</h3><p>TypeScript 2.7\u6539\u8FDB\u4E86\u5728\u540C\u4E00\u4E0A\u4E0B\u6587\u4E2D\u7684\u591A\u5BF9\u8C61\u5B57\u9762\u91CF\u7684\u7C7B\u578B\u63A8\u65AD\u3002 \u5F53\u591A\u4E2A\u5BF9\u8C61\u5B57\u9762\u91CF\u7C7B\u578B\u7EC4\u6210\u4E00\u4E2A\u8054\u5408\u7C7B\u578B\uFF0CTypeScript\u73B0\u5728\u4F1A\u5C06\u5B83\u4EEC_\u89C4\u8303\u5316_\u4E3A\u4E00\u4E2A\u5BF9\u8C61\u7C7B\u578B\uFF0C\u8BE5\u5BF9\u8C61\u7C7B\u578B\u5305\u542B\u8054\u5408\u7C7B\u578B\u4E2D\u7684\u6BCF\u4E2A\u5BF9\u8C61\u7684\u6240\u6709\u5C5E\u6027\uFF0C\u4EE5\u53CA\u5C5E\u6027\u5BF9\u5E94\u7684\u63A8\u65AD\u7C7B\u578B\u3002</p><p>\u8003\u8651\u8FD9\u6837\u7684\u60C5\u5F62:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> test <span class="token operator">?</span> <span class="token punctuation">{</span> text<span class="token operator">:</span> <span class="token string">&quot;hello&quot;</span> <span class="token punctuation">}</span> <span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token comment">// { text: string } | { text?: undefined }</span>
<span class="token keyword">const</span> s <span class="token operator">=</span> obj<span class="token punctuation">.</span>text<span class="token punctuation">;</span>  <span class="token comment">// string | undefined</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u4EE5\u524D<code>obj</code>\u4F1A\u88AB\u63A8\u65AD\u4E3A<code>{}</code>\uFF0C\u7B2C\u4E8C\u884C\u4F1A\u62A5\u9519\u56E0\u4E3A<code>obj</code>\u6CA1\u6709\u5C5E\u6027\u3002\u4F46\u8FD9\u663E\u7136\u5E76\u4E0D\u7406\u60F3\u3002</p><p><strong>\u4F8B\u5B50</strong></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// let obj: { a: number, b: number } |</span>
<span class="token comment">//     { a: string, b?: undefined } |</span>
<span class="token comment">//     { a?: undefined, b?: undefined }</span>
<span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> a<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> a<span class="token operator">:</span> <span class="token string">&quot;abc&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
obj<span class="token punctuation">.</span>a<span class="token punctuation">;</span>  <span class="token comment">// string | number | undefined</span>
obj<span class="token punctuation">.</span>b<span class="token punctuation">;</span>  <span class="token comment">// number | undefined</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u591A\u4E2A\u5BF9\u8C61\u5B57\u9762\u91CF\u4E2D\u7684\u540C\u4E00\u5C5E\u6027\u7684\u6240\u6709\u63A8\u65AD\u7C7B\u578B\uFF0C\u4F1A\u5408\u5E76\u6210\u4E00\u4E2A\u89C4\u8303\u5316\u7684\u8054\u5408\u7C7B\u578B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">f</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token operator">...</span>items<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>
<span class="token comment">// let obj: { a: number, b: number } |</span>
<span class="token comment">//     { a: string, b?: undefined } |</span>
<span class="token comment">//     { a?: undefined, b?: undefined }</span>
<span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">{</span> a<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> a<span class="token operator">:</span> <span class="token string">&quot;abc&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
obj<span class="token punctuation">.</span>a<span class="token punctuation">;</span>  <span class="token comment">// string | number | undefined</span>
obj<span class="token punctuation">.</span>b<span class="token punctuation">;</span>  <span class="token comment">// number | undefined</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="\u7ED3\u6784\u76F8\u540C\u7684\u7C7B\u548Cinstanceof\u8868\u8FBE\u5F0F\u7684\u5904\u7406\u65B9\u5F0F\u6539\u8FDB" tabindex="-1"><a class="header-anchor" href="#\u7ED3\u6784\u76F8\u540C\u7684\u7C7B\u548Cinstanceof\u8868\u8FBE\u5F0F\u7684\u5904\u7406\u65B9\u5F0F\u6539\u8FDB" aria-hidden="true">#</a> \u7ED3\u6784\u76F8\u540C\u7684\u7C7B\u548C<code>instanceof</code>\u8868\u8FBE\u5F0F\u7684\u5904\u7406\u65B9\u5F0F\u6539\u8FDB</h3><p>TypeScript 2.7\u5BF9\u8054\u5408\u7C7B\u578B\u4E2D\u7ED3\u6784\u76F8\u540C\u7684\u7C7B\u548C<code>instanceof</code>\u8868\u8FBE\u5F0F\u7684\u5904\u7406\u65B9\u5F0F\u6539\u8FDB\u5982\u4E0B\uFF1A</p><ul><li>\u8054\u5408\u7C7B\u578B\u4E2D\uFF0C\u7ED3\u6784\u76F8\u540C\u7684\u4E0D\u540C\u7C7B\u90FD\u4F1A\u4FDD\u7559\uFF08\u800C\u4E0D\u662F\u53EA\u4FDD\u7559\u4E00\u4E2A\uFF09</li><li>\u8054\u5408\u7C7B\u578B\u4E2D\u7684\u5B50\u7C7B\u578B\u7B80\u5316\u4EC5\u5728\u4E00\u79CD\u60C5\u51B5\u4E0B\u53D1\u751F\u2014\u2014\u82E5\u4E00\u4E2A\u7C7B\u7EE7\u627F\u81EA\u8054\u5408\u7C7B\u578B\u4E2D\u53E6\u4E00\u4E2A\u7C7B\uFF0C\u8BE5\u5B50\u7C7B\u4F1A\u88AB\u7B80\u5316\u3002</li><li>\u7528\u4E8E\u7C7B\u578B\u68C0\u67E5\u7684<code>instanceof</code>\u64CD\u4F5C\u7B26\u57FA\u4E8E\u7EE7\u627F\u5173\u7CFB\u6765\u5224\u65AD\uFF0C\u800C\u4E0D\u662F\u7ED3\u6784\u517C\u5BB9\u6765\u5224\u65AD\u3002</li></ul><p>\u8FD9\u610F\u5473\u7740\u8054\u5408\u7C7B\u578B\u548C<code>instanceof</code>\u80FD\u591F\u533A\u5206\u7ED3\u6784\u76F8\u540C\u7684\u7C7B\u3002</p><p><strong>\u4F8B\u5B50</strong></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name"><span class="token constant">A</span></span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name"><span class="token constant">B</span></span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">A</span></span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name"><span class="token constant">C</span></span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">A</span></span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name"><span class="token constant">D</span></span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">A</span></span> <span class="token punctuation">{</span> c<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name"><span class="token constant">E</span></span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">D</span></span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token keyword">let</span> x1 <span class="token operator">=</span> <span class="token operator">!</span><span class="token boolean">true</span> <span class="token operator">?</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token constant">A</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token constant">B</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// A</span>
<span class="token keyword">let</span> x2 <span class="token operator">=</span> <span class="token operator">!</span><span class="token boolean">true</span> <span class="token operator">?</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token constant">B</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token constant">C</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// B | C (previously B)</span>
<span class="token keyword">let</span> x3 <span class="token operator">=</span> <span class="token operator">!</span><span class="token boolean">true</span> <span class="token operator">?</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token constant">C</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token constant">D</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// C | D (previously C)</span>

<span class="token keyword">let</span> a1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name"><span class="token constant">A</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token constant">B</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token constant">C</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token constant">D</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token constant">E</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">// A[]</span>
<span class="token keyword">let</span> a2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name"><span class="token constant">B</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token constant">C</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token constant">D</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token constant">E</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">// (B | C | D)[] (previously B[])</span>

<span class="token keyword">function</span> <span class="token function">f1</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token constant">B</span> <span class="token operator">|</span> <span class="token constant">C</span> <span class="token operator">|</span> <span class="token constant">D</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token keyword">instanceof</span> <span class="token class-name"><span class="token constant">B</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        x<span class="token punctuation">;</span>  <span class="token comment">// B (previously B | D)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token keyword">instanceof</span> <span class="token class-name"><span class="token constant">C</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        x<span class="token punctuation">;</span>  <span class="token comment">// C</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>
        x<span class="token punctuation">;</span>  <span class="token comment">// D (previously never)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h3 id="in\u8FD0\u7B97\u7B26\u5B9E\u73B0\u7C7B\u578B\u4FDD\u62A4" tabindex="-1"><a class="header-anchor" href="#in\u8FD0\u7B97\u7B26\u5B9E\u73B0\u7C7B\u578B\u4FDD\u62A4" aria-hidden="true">#</a> <code>in</code>\u8FD0\u7B97\u7B26\u5B9E\u73B0\u7C7B\u578B\u4FDD\u62A4</h3><p><code>in</code>\u8FD0\u7B97\u7B26\u73B0\u5728\u4F1A\u8D77\u5230\u7C7B\u578B\u7EC6\u5316\u7684\u4F5C\u7528\u3002</p><p>\u5BF9\u4E8E\u4E00\u4E2A<code>n in x</code>\u7684\u8868\u8FBE\u5F0F\uFF0C\u5F53<code>n</code>\u662F\u4E00\u4E2A\u5B57\u7B26\u4E32\u5B57\u9762\u91CF\u6216\u8005\u5B57\u7B26\u4E32\u5B57\u9762\u91CF\u7C7B\u578B\uFF0C\u5E76\u4E14<code>x</code>\u662F\u4E00\u4E2A\u8054\u5408\u7C7B\u578B\uFF1A \u5728\u503C\u4E3A&quot;true&quot;\u7684\u5206\u652F\u4E2D\uFF0C<code>x</code>\u4F1A\u6709\u4E00\u4E2A\u63A8\u65AD\u51FA\u6765\u53EF\u9009\u6216\u88AB\u8D4B\u503C\u7684\u5C5E\u6027<code>n</code>\uFF1B\u5728\u503C\u4E3A&quot;false&quot;\u7684\u5206\u652F\u4E2D\uFF0C<code>x</code>\u6839\u636E\u63A8\u65AD\u4EC5\u6709\u53EF\u9009\u7684\u5C5E\u6027<code>n</code>\u6216\u6CA1\u6709\u5C5E\u6027<code>n</code>\u3002</p><h4 id="\u4F8B\u5B50-4" tabindex="-1"><a class="header-anchor" href="#\u4F8B\u5B50-4" aria-hidden="true">#</a> \u4F8B\u5B50</h4><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name"><span class="token constant">A</span></span> <span class="token punctuation">{</span> a<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">interface</span> <span class="token class-name"><span class="token constant">B</span></span> <span class="token punctuation">{</span> b<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token constant">A</span> <span class="token operator">|</span> <span class="token constant">B</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span> <span class="token keyword">in</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> x<span class="token punctuation">.</span>a<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> x<span class="token punctuation">.</span>b<span class="token punctuation">;</span> <span class="token comment">// \u6B64\u65F6x\u7684\u7C7B\u578B\u63A8\u65AD\u4E3AB, \u5C5E\u6027a\u4E0D\u5B58\u5728</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="\u4F7F\u7528\u6807\u8BB0-esmoduleinterop\u5F15\u5165\u975Ees\u6A21\u5757" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528\u6807\u8BB0-esmoduleinterop\u5F15\u5165\u975Ees\u6A21\u5757" aria-hidden="true">#</a> \u4F7F\u7528\u6807\u8BB0<code>--esModuleInterop</code>\u5F15\u5165\u975EES\u6A21\u5757</h2><p>\u5728TypeScript 2.7\u4F7F\u7528<code>--esModuleInterop</code>\u6807\u8BB0\u540E\uFF0C\u4E3A_CommonJS/AMD/UMD_\u6A21\u5757\u751F\u6210\u57FA\u4E8E<code>__esModule</code>\u6307\u793A\u5668\u7684\u547D\u540D\u7A7A\u95F4\u8BB0\u5F55\u3002\u8FD9\u6B21\u66F4\u65B0\u4F7F\u5F97TypeScript\u7F16\u8BD1\u540E\u7684\u8F93\u51FA\u4E0EBabel\u7684\u8F93\u51FA\u66F4\u52A0\u63A5\u8FD1\u3002</p><p>\u4E4B\u524D\u7248\u672C\u4E2D\uFF0CTypeScript\u5904\u7406_CommonJS/AMD/UMD_\u6A21\u5757\u7684\u65B9\u5F0F\u4E0E\u5904\u7406ES6\u6A21\u5757\u4E00\u81F4\uFF0C\u5BFC\u81F4\u4E86\u4E00\u4E9B\u95EE\u9898\uFF0C\u6BD4\u5982\uFF1A</p><ul><li>TypeScript\u4E4B\u524D\u5904\u7406CommonJS/AMD/UMD\u6A21\u5757\u7684\u547D\u540D\u7A7A\u95F4\u5BFC\u5165\uFF08\u5982<code>import * as foo from &quot;foo&quot;</code>\uFF09\u65F6\u7B49\u540C\u4E8E<code>const foo = require(&quot;foo&quot;)</code>\u3002\u8FD9\u6837\u505A\u5F88\u7B80\u5355\uFF0C\u4F46\u5982\u679C\u5F15\u5165\u7684\u4E3B\u8981\u5BF9\u8C61\uFF08\u6BD4\u5982\u8FD9\u91CC\u7684foo\uFF09\u662F\u57FA\u672C\u7C7B\u578B\u3001\u7C7B\u6216\u8005\u51FD\u6570\uFF0C\u5C31\u6709\u95EE\u9898\u3002ECMAScript\u6807\u51C6\u89C4\u5B9A\u4E86\u547D\u540D\u7A7A\u95F4\u8BB0\u5F55\u662F\u4E00\u4E2A\u7EAF\u7CB9\u7684\u5BF9\u8C61\uFF0C\u5E76\u4E14\u5F15\u5165\u7684\u547D\u540D\u7A7A\u95F4\uFF08\u6BD4\u5982\u524D\u9762\u7684<code>foo</code>\uFF09\u5E94\u8BE5\u662F\u4E0D\u53EF\u8C03\u7528\u7684\uFF0C\u7136\u800C\u5728TypeScript\u5374\u4E2D\u53EF\u4EE5\u3002</li><li>\u540C\u6837\u5730\uFF0C\u4E00\u4E2ACommonJS/AMD/UMD\u6A21\u5757\u7684\u9ED8\u8BA4\u5BFC\u5165\uFF08\u5982<code>import d from &quot;foo&quot;</code>\uFF09\u88AB\u5904\u7406\u6210\u7B49\u540C\u4E8E <code>const d = require(&quot;foo&quot;).default</code>\u7684\u5F62\u5F0F\u3002\u7136\u800C\u73B0\u5728\u5927\u591A\u6570\u53EF\u7528\u7684CommonJS/AMD/UMD\u6A21\u5757\u5E76\u6CA1\u6709\u9ED8\u8BA4\u5BFC\u51FA\uFF0C\u5BFC\u81F4\u8FD9\u79CD\u5F15\u5165\u8BED\u53E5\u5728\u5B9E\u8DF5\u4E2D\u4E0D\u9002\u7528\u4E8E\u975EES\u6A21\u5757\u3002\u6BD4\u5982 <code>import fs from &quot;fs&quot;</code> or <code>import express from &quot;express&quot;</code> \u90FD\u4E0D\u53EF\u7528\u3002</li></ul><p>\u5728\u4F7F\u7528\u6807\u7B7E<code>--esModuleInterop</code>\u540E\uFF0C\u8FD9\u4E24\u4E2A\u95EE\u9898\u90FD\u5F97\u5230\u4E86\u89E3\u51B3\uFF1A</p><ul><li>\u547D\u540D\u7A7A\u95F4\u5BFC\u5165\uFF08\u5982<code>import * as foo from &quot;foo&quot;</code>\uFF09\u7684\u5BF9\u8C61\u73B0\u5728\u88AB\u4FEE\u6B63\u4E3A\u4E0D\u53EF\u8C03\u7528\u7684\u3002\u8C03\u7528\u4F1A\u62A5\u9519\u3002</li><li>\u5BF9CommonJS/AMD/UMD\u6A21\u5757\u53EF\u4EE5\u4F7F\u7528\u9ED8\u8BA4\u5BFC\u5165\uFF08\u5982<code>import d from &quot;foo&quot;</code>\uFF09\u4E14\u80FD\u6B63\u5E38\u5DE5\u4F5C\u4E86\u3002</li></ul><blockquote><p>\u6CE8: \u8FD9\u4E2A\u65B0\u7279\u6027\u6709\u53EF\u80FD\u5BF9\u73B0\u6709\u7684\u4EE3\u7801\u4EA7\u751F\u7834\u574F\uFF0C\u56E0\u6B64\u4EE5\u6807\u8BB0\u7684\u65B9\u5F0F\u5F15\u5165\u3002\u4F46\u65E0\u8BBA\u662F\u65B0\u9879\u76EE\u8FD8\u662F\u4E4B\u524D\u7684\u9879\u76EE\uFF0C<strong>\u6211\u4EEC\u90FD\u5F3A\u70C8\u5EFA\u8BAE\u4F7F\u7528\u5B83</strong>\u3002\u5BF9\u4E8E\u4E4B\u524D\u7684\u9879\u76EE\uFF0C\u547D\u540D\u7A7A\u95F4\u5BFC\u5165 (<code>import * as express from &quot;express&quot;; express();</code>) \u9700\u8981\u88AB\u6539\u5199\u6210\u9ED8\u8BA4\u5F15\u5165 (<code>import express from &quot;express&quot;; express();</code>).</p></blockquote><h4 id="\u4F8B\u5B50-5" tabindex="-1"><a class="header-anchor" href="#\u4F8B\u5B50-5" aria-hidden="true">#</a> \u4F8B\u5B50</h4><p>\u4F7F\u7528 <code>--esModuleInterop</code> \u540E\uFF0C\u4F1A\u751F\u6210\u4E24\u4E2A\u65B0\u7684\u8F85\u52A9\u91CF <code>__importStar</code> and <code>__importDefault</code> \uFF0C\u5206\u522B\u5BF9\u5E94\u5BFC\u5165<code>*</code>\u548C\u5BFC\u5165<code>default</code>\uFF0C\u6BD4\u5982\u8FD9\u6837\u7684\u8F93\u5165\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> foo <span class="token keyword">from</span> <span class="token string">&quot;foo&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> b <span class="token keyword">from</span> <span class="token string">&quot;bar&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u4F1A\u751F\u6210\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token string">&quot;use strict&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> __importStar <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>__importStar<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>mod<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>mod <span class="token operator">&amp;&amp;</span> mod<span class="token punctuation">.</span>__esModule<span class="token punctuation">)</span> <span class="token keyword">return</span> mod<span class="token punctuation">;</span>
    <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>mod <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> k <span class="token keyword">in</span> mod<span class="token punctuation">)</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>mod<span class="token punctuation">,</span> k<span class="token punctuation">)</span><span class="token punctuation">)</span> result<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> mod<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">;</span>
    result<span class="token punctuation">[</span><span class="token string">&quot;default&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> mod<span class="token punctuation">;</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">var</span> __importDefault <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>__importDefault<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>mod<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>mod <span class="token operator">&amp;&amp;</span> mod<span class="token punctuation">.</span>__esModule<span class="token punctuation">)</span> <span class="token operator">?</span> mod <span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token string-property property">&quot;default&quot;</span><span class="token operator">:</span> mod <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
exports<span class="token punctuation">.</span>__esModule <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> foo <span class="token operator">=</span> <span class="token function">__importStar</span><span class="token punctuation">(</span><span class="token keyword">require</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> bar_1 <span class="token operator">=</span> <span class="token function">__importDefault</span><span class="token punctuation">(</span><span class="token keyword">require</span><span class="token punctuation">(</span><span class="token string">&quot;bar&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="\u6570\u5B57\u5206\u9694\u7B26" tabindex="-1"><a class="header-anchor" href="#\u6570\u5B57\u5206\u9694\u7B26" aria-hidden="true">#</a> \u6570\u5B57\u5206\u9694\u7B26</h3>`,38),g=n("TypeScript 2.7\u652F\u6301ECMAScript\u7684"),w={href:"https://github.com/tc39/proposal-numeric-separator",target:"_blank",rel:"noopener noreferrer"},x=n("\u6570\u5B57\u5206\u9694\u7B26\u63D0\u6848"),v=n("\u3002 \u8FD9\u4E2A\u7279\u6027\u5141\u8BB8\u7528\u6237\u5728\u6570\u5B57\u4E4B\u95F4\u4F7F\u7528\u4E0B\u5212\u7EBF"),_=s("code",null,"_",-1),q=n("\u6765\u5BF9\u6570\u5B57\u5206\u7EC4\u3002"),S=a(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> million <span class="token operator">=</span> <span class="token number">1_000_000</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> phone <span class="token operator">=</span> <span class="token number">555_734_2231</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> bytes <span class="token operator">=</span> <span class="token number">0xFF_0C_00_FF</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> word <span class="token operator">=</span> <span class="token number">0b1100_0011_1101_0001</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="watch\u6A21\u5F0F\u4E0B\u5177\u6709\u66F4\u7B80\u6D01\u7684\u8F93\u51FA" tabindex="-1"><a class="header-anchor" href="#watch\u6A21\u5F0F\u4E0B\u5177\u6709\u66F4\u7B80\u6D01\u7684\u8F93\u51FA" aria-hidden="true">#</a> --watch\u6A21\u5F0F\u4E0B\u5177\u6709\u66F4\u7B80\u6D01\u7684\u8F93\u51FA</h3><p>\u5728TypeScript\u7684<code>--watch</code>\u6A21\u5F0F\u4E0B\u8FDB\u884C\u91CD\u65B0\u7F16\u8BD1\u540E\u4F1A\u6E05\u5C4F\u3002 \u8FD9\u6837\u5C31\u66F4\u65B9\u4FBF\u9605\u8BFB\u6700\u8FD1\u8FD9\u6B21\u7F16\u8BD1\u7684\u8F93\u51FA\u4FE1\u606F\u3002</p><h3 id="\u66F4\u6F02\u4EAE\u7684-pretty\u8F93\u51FA" tabindex="-1"><a class="header-anchor" href="#\u66F4\u6F02\u4EAE\u7684-pretty\u8F93\u51FA" aria-hidden="true">#</a> \u66F4\u6F02\u4EAE\u7684<code>--pretty</code>\u8F93\u51FA</h3><p>TypeScript\u7684<code>--pretty</code>\u6807\u8BB0\u53EF\u4EE5\u8BA9\u9519\u8BEF\u4FE1\u606F\u66F4\u6613\u9605\u8BFB\u548C\u7BA1\u7406\u3002 \u6211\u4EEC\u5BF9\u8FD9\u4E2A\u529F\u80FD\u8FDB\u884C\u4E86\u4E24\u4E2A\u4E3B\u8981\u7684\u6539\u8FDB\u3002 \u9996\u5148\uFF0C<code>--pretty</code>\u5BF9\u6587\u4EF6\u540D\uFF0C\u8BCA\u6BB5\u4EE3\u7801\u548C\u884C\u6570\u6DFB\u52A0\u4E86\u989C\u8272\uFF08\u611F\u8C22Joshua Goldberg\uFF09\u3002 \u5176\u6B21\uFF0C\u683C\u5F0F\u5316\u4E86\u6587\u4EF6\u540D\u548C\u4F4D\u7F6E\uFF0C\u4EE5\u4FBF\u4E8E\u5728\u5E38\u7528\u7684\u7EC8\u7AEF\u91CC\u4F7F\u7528Ctrl+Click\uFF0CCmd+Click\uFF0CAlt+Click\u7B49\u6765\u8DF3\u8F6C\u5230\u7F16\u8BD1\u5668\u91CC\u7684\u76F8\u5E94\u4F4D\u7F6E\u3002</p>`,5);function T(C,B){const p=t("ExternalLinkIcon");return o(),c(l,null,[i,s("p",null,[k,s("a",d,[b,e(p)]),m,y,h]),f,s("p",null,[g,s("a",w,[x,e(p)]),v,_,q]),S],64)}var E=r(u,[["render",T]]);export{E as default};
