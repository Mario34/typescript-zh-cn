import{r as e,o,c,a as s,b as t,F as l,e as a,d as n}from"./app.0186264c.js";import{_ as r}from"./plugin-vue_export-helper.21dcd24c.js";const u={},i=a(`<h1 id="typescript-3-2" tabindex="-1"><a class="header-anchor" href="#typescript-3-2" aria-hidden="true">#</a> TypeScript 3.2</h1><h2 id="strictbindcallapply" tabindex="-1"><a class="header-anchor" href="#strictbindcallapply" aria-hidden="true">#</a> <code>strictBindCallApply</code></h2><p>TypeScript 3.2\u5F15\u5165\u4E86\u4E00\u4E2A\u65B0\u7684<code>--strictBindCallApply</code>\u7F16\u8BD1\u9009\u9879\uFF08\u662F<code>--strict</code>\u9009\u9879\u5BB6\u65CF\u4E4B\u4E00\uFF09\u3002\u5728\u4F7F\u7528\u4E86\u6B64\u9009\u9879\u540E\uFF0C\u51FD\u6570\u5BF9\u8C61\u4E0A\u7684<code>bind</code>\uFF0C<code>call</code>\u548C<code>apply</code>\u65B9\u6CD5\u5C06\u5E94\u7528\u5F3A\u7C7B\u578B\u5E76\u8FDB\u884C\u4E25\u683C\u7684\u7C7B\u578B\u68C0\u67E5\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token function">foo</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token comment">// error: too few argumnts</span>
<span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token function">foo</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token comment">// error: 2nd argument is a number</span>
<span class="token keyword">let</span> c <span class="token operator">=</span> <span class="token function">foo</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// error: too many arguments</span>
<span class="token keyword">let</span> d <span class="token operator">=</span> <span class="token function">foo</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// okay! returns a string</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u5B83\u7684\u5B9E\u73B0\u662F\u901A\u8FC7\u5F15\u5165\u4E86\u4E24\u79CD\u65B0\u7C7B\u578B\u6765\u5B8C\u6210\u7684\uFF0C\u5373<code>lib.d.ts</code>\u91CC\u7684<code>CallableFunction</code>\u548C<code>NewableFunction</code>\u3002\u8FD9\u4E9B\u7C7B\u578B\u5305\u542B\u4E86\u9488\u5BF9\u5E38\u89C4\u51FD\u6570\u548C\u6784\u9020\u51FD\u6570\u4E0A<code>bind</code>\u3001<code>call</code>\u548C<code>apply</code>\u7684\u6CDB\u578B\u65B9\u6CD5\u58F0\u660E\u3002\u8FD9\u4E9B\u58F0\u660E\u4F7F\u7528\u4E86\u6CDB\u578B\u5269\u4F59\u53C2\u6570\u6765\u6355\u83B7\u548C\u53CD\u5C04\u53C2\u6570\u5217\u8868\uFF0C\u4F7F\u4E4B\u5177\u6709\u5F3A\u7C7B\u578B\u3002\u5728<code>--strictBindCallApply</code>\u6A21\u5F0F\u4E0B\uFF0C\u8FD9\u4E9B\u58F0\u660E\u4F5C\u7528\u5728<code>Function</code>\u7C7B\u578B\u58F0\u660E\u51FA\u73B0\u7684\u4F4D\u7F6E\u3002</p><h3 id="\u8B66\u544A" tabindex="-1"><a class="header-anchor" href="#\u8B66\u544A" aria-hidden="true">#</a> \u8B66\u544A</h3><p>\u7531\u4E8E\u66F4\u4E25\u683C\u7684\u68C0\u67E5\u53EF\u80FD\u66B4\u9732\u4E4B\u524D\u6CA1\u53D1\u73B0\u7684\u9519\u8BEF\uFF0C\u56E0\u6B64\u8FD9\u662F<code>--strict</code>\u6A21\u5F0F\u4E0B\u7684\u4E00\u4E2A\u7834\u574F\u6027\u6539\u52A8\u3002</p>`,7),k=n("\u6B64\u5916\uFF0C\u8FD9\u4E2A\u65B0\u529F\u80FD\u8FD8\u6709"),d={href:"https://github.com/Microsoft/TypeScript/pull/27028#issuecomment-429334450",target:"_blank",rel:"noopener noreferrer"},b=n("\u53E6\u4E00\u4E2A\u8B66\u544A"),m=n("\u3002\u7531\u4E8E\u6709\u8FD9\u4E9B\u9650\u5236\uFF0C"),g=s("code",null,"bind",-1),y=n("\u3001"),f=s("code",null,"call",-1),h=n("\u548C"),w=s("code",null,"apply",-1),x=n("\u65E0\u6CD5\u4E3A\u91CD\u8F7D\u7684\u6CDB\u578B\u51FD\u6570\u6216\u91CD\u8F7D\u7684\u51FD\u6570\u8FDB\u884C\u5B8C\u6574\u5730\u5EFA\u6A21\u3002 \u5F53\u5728\u6CDB\u578B\u51FD\u6570\u4E0A\u4F7F\u7528\u8FD9\u4E9B\u65B9\u6CD5\u65F6\uFF0C\u7C7B\u578B\u53C2\u6570\u4F1A\u88AB\u66FF\u6362\u4E3A\u7A7A\u5BF9\u8C61\u7C7B\u578B\uFF08"),v=s("code",null,"{}",-1),_=n("\uFF09\uFF0C\u5E76\u4E14\u82E5\u5728\u6709\u91CD\u8F7D\u7684\u51FD\u6570\u4E0A\u4F7F\u7528\u8FD9\u4E9B\u65B9\u6CD5\u65F6\uFF0C\u53EA\u6709\u6700\u540E\u4E00\u4E2A\u91CD\u8F7D\u4F1A\u88AB\u5EFA\u6A21\u3002"),T=a(`<h2 id="\u5BF9\u8C61\u5B57\u9762\u91CF\u7684\u6CDB\u578B\u5C55\u5F00\u8868\u8FBE\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u5BF9\u8C61\u5B57\u9762\u91CF\u7684\u6CDB\u578B\u5C55\u5F00\u8868\u8FBE\u5F0F" aria-hidden="true">#</a> \u5BF9\u8C61\u5B57\u9762\u91CF\u7684\u6CDB\u578B\u5C55\u5F00\u8868\u8FBE\u5F0F</h2><p>TypeScript 3.2\u5F00\u59CB\uFF0C\u5BF9\u8C61\u5B57\u9762\u91CF\u5141\u8BB8\u6CDB\u578B\u5C55\u5F00\u8868\u8FBE\u5F0F\uFF0C\u5B83\u4EA7\u751F\u4EA4\u53C9\u7C7B\u578B\uFF0C\u548C<code>Object.assign</code>\u51FD\u6570\u6216JSX\u5B57\u9762\u91CF\u7C7B\u4F3C\u3002\u4F8B\u5982\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">taggedObject</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">U</span> <span class="token keyword">extends</span> <span class="token builtin">string</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>obj<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> tag<span class="token operator">:</span> <span class="token constant">U</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token operator">...</span>obj<span class="token punctuation">,</span> tag <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token comment">// T &amp; { tag: U }</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token function">taggedObject</span><span class="token punctuation">(</span><span class="token punctuation">{</span> x<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token number">20</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;point&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// { x: number, y: number } &amp; { tag: &quot;point&quot; }</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u5C5E\u6027\u8D4B\u503C\u548C\u975E\u6CDB\u578B\u5C55\u5F00\u8868\u8FBE\u5F0F\u4F1A\u6700\u5927\u7A0B\u5EA6\u5730\u5408\u5E76\u5230\u6CDB\u578B\u5C55\u5F00\u8868\u8FBE\u5F0F\u7684\u4E00\u4FA7\u3002\u4F8B\u5982\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">foo1</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>t<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> obj1<span class="token operator">:</span> <span class="token punctuation">{</span> a<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> obj2<span class="token operator">:</span> <span class="token punctuation">{</span> b<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token operator">...</span>obj1<span class="token punctuation">,</span> x<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">...</span>t<span class="token punctuation">,</span> <span class="token operator">...</span>obj2<span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token comment">// { a: string, x: number } &amp; T &amp; { b: string, y: number }</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u975E\u6CDB\u578B\u5C55\u5F00\u8868\u8FBE\u5F0F\u4E0E\u4E4B\u524D\u7684\u884C\u4E3A\u76F8\u540C\uFF1A\u51FD\u6570\u8C03\u7528\u7B7E\u540D\u548C\u6784\u9020\u7B7E\u540D\u88AB\u79FB\u9664\uFF0C\u4EC5\u6709\u975E\u65B9\u6CD5\u7684\u5C5E\u6027\u88AB\u4FDD\u7559\uFF0C\u9488\u5BF9\u540C\u540D\u5C5E\u6027\u5219\u53EA\u6709\u51FA\u73B0\u5728\u6700\u53F3\u4FA7\u7684\u4F1A\u88AB\u4F7F\u7528\u3002\u5B83\u4E0E\u4EA4\u53C9\u7C7B\u578B\u4E0D\u540C\uFF0C\u4EA4\u53C9\u7C7B\u578B\u4F1A\u8FDE\u63A5\u8C03\u7528\u7B7E\u540D\u548C\u6784\u9020\u7B7E\u540D\uFF0C\u4FDD\u7559\u6240\u6709\u7684\u5C5E\u6027\uFF0C\u5408\u5E76\u540C\u540D\u5C5E\u6027\u7684\u7C7B\u578B\u3002\u56E0\u6B64\uFF0C\u5F53\u5C55\u5F00\u4F7F\u7528\u6CDB\u578B\u521D\u59CB\u5316\u7684\u76F8\u540C\u7C7B\u578B\u65F6\u53EF\u80FD\u4F1A\u4EA7\u751F\u4E0D\u540C\u7684\u7ED3\u679C\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">spread</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">U</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>t<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> u<span class="token operator">:</span> <span class="token constant">U</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token operator">...</span>t<span class="token punctuation">,</span> <span class="token operator">...</span>u <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token comment">// T &amp; U</span>
<span class="token punctuation">}</span>

<span class="token keyword">declare</span> <span class="token keyword">let</span> x<span class="token operator">:</span> <span class="token punctuation">{</span> a<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">declare</span> <span class="token keyword">let</span> y<span class="token operator">:</span> <span class="token punctuation">{</span> b<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> c<span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> s1 <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">...</span>x<span class="token punctuation">,</span> <span class="token operator">...</span>y <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token comment">// { a: string, b: string, c: boolean }</span>
<span class="token keyword">let</span> s2 <span class="token operator">=</span> <span class="token function">spread</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// { a: string, b: number } &amp; { b: string, c: boolean }</span>
<span class="token keyword">let</span> b1 <span class="token operator">=</span> s1<span class="token punctuation">.</span>b<span class="token punctuation">;</span>  <span class="token comment">// string</span>
<span class="token keyword">let</span> b2 <span class="token operator">=</span> s2<span class="token punctuation">.</span>b<span class="token punctuation">;</span>  <span class="token comment">// number &amp; string</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="\u6CDB\u578B\u5BF9\u8C61\u5269\u4F59\u53D8\u91CF\u548C\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#\u6CDB\u578B\u5BF9\u8C61\u5269\u4F59\u53D8\u91CF\u548C\u53C2\u6570" aria-hidden="true">#</a> \u6CDB\u578B\u5BF9\u8C61\u5269\u4F59\u53D8\u91CF\u548C\u53C2\u6570</h2><p>TypeScript 3.2\u5F00\u59CB\u5141\u8BB8\u4ECE\u6CDB\u578B\u53D8\u91CF\u4E2D\u89E3\u6784\u5269\u4F59\u7ED1\u5B9A\u3002\u5B83\u662F\u901A\u8FC7\u4F7F\u7528<code>lib.d.ts</code>\u91CC\u9884\u5B9A\u4E49\u7684<code>Pick</code>\u548C<code>Exclude</code>\u52A9\u624B\u7C7B\u578B\uFF0C\u5E76\u7ED3\u5408\u4F7F\u7528\u6CDB\u578B\u7C7B\u578B\u548C\u89E3\u6784\u5F0F\u91CC\u7684\u5176\u5B83\u7ED1\u5B9A\u540D\u5B9E\u73B0\u7684\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">excludeTag</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">{</span> tag<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>obj<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> <span class="token punctuation">{</span> tag<span class="token punctuation">,</span> <span class="token operator">...</span>rest <span class="token punctuation">}</span> <span class="token operator">=</span> obj<span class="token punctuation">;</span>
    <span class="token keyword">return</span> rest<span class="token punctuation">;</span>  <span class="token comment">// Pick&lt;T, Exclude&lt;keyof T, &quot;tag&quot;&gt;&gt;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> taggedPoint <span class="token operator">=</span> <span class="token punctuation">{</span> x<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span> tag<span class="token operator">:</span> <span class="token string">&quot;point&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> point <span class="token operator">=</span> <span class="token function">excludeTag</span><span class="token punctuation">(</span>taggedPoint<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// { x: number, y: number }</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="bigint" tabindex="-1"><a class="header-anchor" href="#bigint" aria-hidden="true">#</a> BigInt</h2><p>BigInt\u91CCECMAScript\u7684\u4E00\u9879\u63D0\u6848\uFF0C\u5B83\u5728\u7406\u8BBA\u4E0A\u5141\u8BB8\u6211\u4EEC\u5EFA\u6A21\u4EFB\u610F\u5927\u5C0F\u7684\u6574\u6570\u3002 TypeScript 3.2\u53EF\u4EE5\u4E3ABigInit\u8FDB\u884C\u7C7B\u578B\u68C0\u67E5\uFF0C\u5E76\u652F\u6301\u5728\u76EE\u6807\u4E3A<code>esnext</code>\u65F6\u8F93\u51FABigInit\u5B57\u9762\u91CF\u3002</p><p>\u4E3A\u652F\u6301BigInt\uFF0CTypeScript\u5F15\u5165\u4E86\u4E00\u4E2A\u65B0\u7684\u539F\u59CB\u7C7B\u578B<code>bigint</code>\uFF08\u5168\u5C0F\u5199\uFF09\u3002 \u53EF\u4EE5\u901A\u8FC7\u8C03\u7528<code>BigInt()</code>\u51FD\u6570\u6216\u4E66\u5199BigInt\u5B57\u9762\u91CF\uFF08\u5728\u6574\u578B\u6570\u5B57\u5B57\u9762\u91CF\u672B\u5C3E\u6DFB\u52A0<code>n</code>\uFF09\u6765\u83B7\u53D6<code>bigint</code>\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> foo<span class="token operator">:</span> bigint <span class="token operator">=</span> <span class="token function">BigInt</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// the BigInt function</span>
<span class="token keyword">let</span> bar<span class="token operator">:</span> bigint <span class="token operator">=</span> <span class="token number">100n</span><span class="token punctuation">;</span>        <span class="token comment">// a BigInt literal</span>

<span class="token comment">// *Slaps roof of fibonacci function*</span>
<span class="token comment">// This bad boy returns ints that can get *so* big!</span>
<span class="token keyword">function</span> <span class="token function">fibonacci</span><span class="token punctuation">(</span>n<span class="token operator">:</span> bigint<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token number">1n</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> last <span class="token operator">=</span> <span class="token number">0n</span><span class="token punctuation">,</span> i <span class="token operator">=</span> <span class="token number">0n</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> current <span class="token operator">=</span> result<span class="token punctuation">;</span>
        result <span class="token operator">+=</span> last<span class="token punctuation">;</span>
        last <span class="token operator">=</span> current<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">fibonacci</span><span class="token punctuation">(</span><span class="token number">10000n</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>\u5C3D\u7BA1\u4F60\u53EF\u80FD\u4F1A\u8BA4\u4E3A<code>number</code>\u548C<code>bigint</code>\u80FD\u4E92\u6362\u4F7F\u7528\uFF0C\u4F46\u5B83\u4EEC\u662F\u4E0D\u540C\u7684\u4E1C\u897F\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">declare</span> <span class="token keyword">let</span> foo<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token keyword">declare</span> <span class="token keyword">let</span> bar<span class="token operator">:</span> bigint<span class="token punctuation">;</span>

foo <span class="token operator">=</span> bar<span class="token punctuation">;</span> <span class="token comment">// error: Type &#39;bigint&#39; is not assignable to type &#39;number&#39;.</span>
bar <span class="token operator">=</span> foo<span class="token punctuation">;</span> <span class="token comment">// error: Type &#39;number&#39; is not assignable to type &#39;bigint&#39;.</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>ECMAScript\u91CC\u89C4\u5B9A\uFF0C\u5728\u7B97\u672F\u8FD0\u7B97\u7B26\u91CC\u6DF7\u5408\u4F7F\u7528<code>number</code>\u548C<code>bigint</code>\u662F\u4E00\u4E2A\u9519\u8BEF\u3002 \u5E94\u8BE5\u663E\u5F0F\u5730\u5C06\u503C\u8F6C\u6362\u4E3A<code>BigInt</code>\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3.141592</span> <span class="token operator">*</span> <span class="token number">10000n</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// error</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3145</span> <span class="token operator">*</span> <span class="token number">10n</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// error</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">BigInt</span><span class="token punctuation">(</span><span class="token number">3145</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">10n</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// okay!</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u8FD8\u6709\u4E00\u70B9\u8981\u6CE8\u610F\u7684\u662F\uFF0C\u5BF9<code>bigint</code>\u4F7F\u7528<code>typeof</code>\u64CD\u4F5C\u7B26\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684\u5B57\u7B26\u4E32\uFF1A<code>&quot;bigint&quot;</code>\u3002 \u56E0\u6B64\uFF0CTypeScript\u80FD\u591F\u6B63\u786E\u5730\u4F7F\u7528<code>typeof</code>\u7EC6\u5316\u7C7B\u578B\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">whatKindOfNumberIsIt</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> bigint<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> x <span class="token operator">===</span> <span class="token string">&quot;bigint&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;&#39;x&#39; is a bigint!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;&#39;x&#39; is a floating-point number&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>`,20),q=n("\u611F\u8C22"),j={href:"https://github.com/calebsander",target:"_blank",rel:"noopener noreferrer"},S=n("Caleb Sander"),B=n("\u4E3A\u5B9E\u73B0\u6B64\u529F\u80FD\u7684\u4ED8\u51FA\u3002"),I=a(`<h3 id="\u8B66\u544A-1" tabindex="-1"><a class="header-anchor" href="#\u8B66\u544A-1" aria-hidden="true">#</a> \u8B66\u544A</h3><p>BigInt\u4EC5\u5728\u76EE\u6807\u4E3A<code>esnext</code>\u65F6\u624D\u652F\u6301\u3002 \u53EF\u80FD\u4E0D\u662F\u5F88\u660E\u663E\u7684\u4E00\u70B9\u662F\uFF0C\u56E0\u4E3ABigInts\u9488\u5BF9\u7B97\u672F\u8FD0\u7B97\u7B26<code>+</code>, <code>-</code>, <code>*</code>\u7B49\u5177\u6709\u4E0D\u540C\u7684\u884C\u4E3A\uFF0C\u4E3A\u8001\u65E7\u7248\uFF08\u5982<code>es2017</code>\u53CA\u4EE5\u4E0B\uFF09\u63D0\u4F9B\u6B64\u529F\u80FD\u65F6\u610F\u5473\u7740\u91CD\u5199\u51FA\u73B0\u5B83\u4EEC\u7684\u6BCF\u4E00\u4E2A\u64CD\u4F5C\u3002 TypeScript\u9700\u6839\u636E\u7C7B\u578B\u548C\u6D89\u53CA\u5230\u7684\u6BCF\u4E00\u5904\u52A0\u6CD5\uFF0C\u5B57\u7B26\u4E32\u62FC\u63A5\uFF0C\u4E58\u6CD5\u7B49\u4EA7\u751F\u6B63\u786E\u7684\u884C\u4E3A\u3002</p><p>\u56E0\u4E3A\u8FD9\u4E2A\u539F\u56E0\uFF0C\u6211\u4EEC\u4E0D\u4F1A\u7ACB\u5373\u63D0\u4F9B\u5411\u4E0B\u7684\u652F\u6301\u3002 \u597D\u7684\u4E00\u9762\u662F\uFF0CNode 11\u548C\u8F83\u65B0\u7248\u672C\u7684Chrome\u5DF2\u7ECF\u652F\u6301\u4E86\u8FD9\u4E2A\u7279\u6027\uFF0C\u56E0\u6B64\u4F60\u53EF\u4EE5\u5728\u76EE\u6807\u4E3A<code>esnext</code>\u65F6\uFF0C\u4F7F\u7528BigInt\u3002</p><p>\u4E00\u4E9B\u76EE\u6807\u53EF\u80FD\u5305\u542Bpolyfill\u6216\u7C7B\u4F3CBigInt\u7684\u8FD0\u884C\u65F6\u5BF9\u8C61\u3002 \u57FA\u4E8E\u8FD9\u4E9B\u8003\u8651\uFF0C\u4F60\u53EF\u80FD\u4F1A\u60F3\u8981\u6DFB\u52A0<code>esnext.bigint</code>\u5230<code>lib</code>\u7F16\u8BD1\u9009\u9879\u91CC\u3002</p><h2 id="non-unit-types-as-union-discriminants" tabindex="-1"><a class="header-anchor" href="#non-unit-types-as-union-discriminants" aria-hidden="true">#</a> Non-unit types as union discriminants</h2><p>TypeScript 3.2\u653E\u5BBD\u4E86\u4F5C\u4E3A\u5224\u522B\u5F0F\u5C5E\u6027\u7684\u9650\u5236\uFF0C\u6765\u8BA9\u7C7B\u578B\u7EC6\u5316\u53D8\u5F97\u5BB9\u6613\u3002 \u5982\u679C\u8054\u5408\u7C7B\u578B\u7684\u5171\u540C\u5C5E\u6027\u5305\u542B\u4E86_\u67D0\u4E9B_\u5355\u4F53\u7C7B\u578B\uFF08\u5982\uFF0C\u5B57\u9762\u7B26\u5B57\u9762\u91CF\uFF0C<code>null</code>\u6216<code>undefined</code>\uFF09\u4E14\u4E0D\u5305\u542B\u6CDB\u578B\uFF0C\u90A3\u4E48\u5B83\u5C31\u53EF\u4EE5\u505A\u4E3A\u5224\u522B\u5F0F\u3002</p><p>\u56E0\u6B64\uFF0CTypeScript 3.2\u8BA4\u4E3A\u4E0B\u4F8B\u4E2D\u7684<code>error</code>\u5C5E\u6027\u53EF\u4EE5\u505A\u4E3A\u5224\u522B\u5F0F\u3002\u8FD9\u5728\u4E4B\u524D\u662F\u4E0D\u53EF\u4EE5\u7684\uFF0C\u56E0\u4E3A<code>Error</code>\u5E76\u975E\u662F\u4E00\u4E2A\u5355\u4F53\u7C7B\u578B\u3002 \u90A3\u4E48\uFF0C<code>unwrap</code>\u51FD\u6570\u4F53\u91CC\u7684\u7C7B\u578B\u7EC6\u5316\u5C31\u53EF\u4EE5\u6B63\u786E\u5730\u5DE5\u4F5C\u4E86\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Result<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span>
    <span class="token operator">|</span> <span class="token punctuation">{</span> error<span class="token operator">:</span> Error<span class="token punctuation">;</span> data<span class="token operator">:</span> <span class="token keyword">null</span> <span class="token punctuation">}</span>
    <span class="token operator">|</span> <span class="token punctuation">{</span> error<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">;</span> data<span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">unwrap</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>result<span class="token operator">:</span> Result<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Here &#39;error&#39; is non-null</span>
        <span class="token keyword">throw</span> result<span class="token punctuation">.</span>error<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Now &#39;data&#39; is non-null</span>
    <span class="token keyword">return</span> result<span class="token punctuation">.</span>data<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="tsconfig-json\u53EF\u4EE5\u901A\u8FC7node-js\u5305\u6765\u7EE7\u627F" tabindex="-1"><a class="header-anchor" href="#tsconfig-json\u53EF\u4EE5\u901A\u8FC7node-js\u5305\u6765\u7EE7\u627F" aria-hidden="true">#</a> <code>tsconfig.json</code>\u53EF\u4EE5\u901A\u8FC7Node.js\u5305\u6765\u7EE7\u627F</h2><p>TypeScript 3.2\u73B0\u5728\u53EF\u4EE5\u4ECE<code>node_modules</code>\u91CC\u89E3\u6790<code>tsconfig.json</code>\u3002\u5982\u679C<code>tsconfig.json</code>\u6587\u4EF6\u91CC\u7684<code>&quot;extends&quot;</code>\u8BBE\u7F6E\u4E3A\u7A7A\uFF0C\u90A3\u4E48TypeScript\u4F1A\u68C0\u6D4B<code>node_modules</code>\u5305\u3002 When using a bare path for the <code>&quot;extends&quot;</code> field in <code>tsconfig.json</code>, TypeScript will dive into <code>node_modules</code> packages for us.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>{
    &quot;extends&quot;: &quot;@my-team/tsconfig-base&quot;,
    &quot;include&quot;: [&quot;./**/*&quot;]
    &quot;compilerOptions&quot;: {
        // Override certain options on a project-by-project basis.
        &quot;strictBindCallApply&quot;: false,
    }
}
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u8FD9\u91CC\uFF0CTypeScript\u4F1A\u53BB<code>node_modules</code>\u76EE\u5F55\u91CC\u67E5\u627E<code>@my-team/tsconfig-base</code>\u5305\u3002\u9488\u5BF9\u6BCF\u4E00\u4E2A\u5305\uFF0CTypeScript\u68C0\u67E5<code>package.json</code>\u91CC\u662F\u5426\u5305\u542B<code>&quot;tsconfig&quot;</code>\u5B57\u6BB5\uFF0C\u5982\u679C\u662F\uFF0CTypeScript\u4F1A\u5C1D\u8BD5\u4ECE\u90A3\u91CC\u52A0\u8F7D\u914D\u7F6E\u6587\u4EF6\u3002\u5982\u679C\u4E24\u8005\u90FD\u4E0D\u5B58\u5728\uFF0CTypeScript\u5C1D\u8BD5\u4ECE\u6839\u76EE\u5F55\u8BFB\u53D6<code>tsconfig.json</code>\u3002\u8FD9\u4E0ENodejs\u67E5\u627E<code>.js</code>\u6587\u4EF6\u6216TypeScript\u67E5\u627E<code>.d.ts</code>\u6587\u4EF6\u7684\u5DF2\u6709\u8FC7\u7A0B\u7C7B\u4F3C\u3002</p><p>\u8FD9\u4E2A\u7279\u6027\u5BF9\u4E8E\u5927\u578B\u7EC4\u7EC7\u6216\u5177\u6709\u5F88\u591A\u5206\u5E03\u7684\u4F9D\u8D56\u7684\u5DE5\u7A0B\u7279\u522B\u6709\u5E2E\u52A9\u3002</p><h2 id="the-new-showconfig-flag" tabindex="-1"><a class="header-anchor" href="#the-new-showconfig-flag" aria-hidden="true">#</a> The new <code>--showConfig</code> flag</h2><p><code>tsc</code>\uFF0CTypeScript\u7F16\u8BD1\u5668\uFF0C\u652F\u6301\u4E00\u4E2A\u65B0\u7684\u6807\u8BB0<code>--showConfig</code>\u3002 \u8FD0\u884C<code>tsc --showConfig</code>\u65F6\uFF0CTypeScript\u8BA1\u7B97\u751F\u6548\u7684<code>tsconfig.json</code>\u5E76\u6253\u5370\uFF08\u7EE7\u627F\u7684\u914D\u7F6E\u4E5F\u4F1A\u8BA1\u7B97\u5728\u5185\uFF09\u3002 \u8FD9\u5BF9\u4E8E\u8C03\u8BD5\u8BCA\u65AD\u914D\u7F6E\u95EE\u9898\u5F88\u6709\u5E2E\u52A9\u3002</p><h2 id="javascript\u7684object-defineproperty\u58F0\u660E" tabindex="-1"><a class="header-anchor" href="#javascript\u7684object-defineproperty\u58F0\u660E" aria-hidden="true">#</a> JavaScript\u7684<code>Object.defineProperty</code>\u58F0\u660E</h2><p>\u5728\u7F16\u5199JavaScript\u6587\u4EF6\u65F6\uFF08\u4F7F\u7528<code>allowJs</code>\uFF09\uFF0CTypeScript\u80FD\u8BC6\u522B\u51FA\u4F7F\u7528<code>Object.defineProperty</code>\u58F0\u660E\u3002 \u4E5F\u5C31\u662F\u8BF4\u4F1A\u6709\u66F4\u597D\u7684\u4EE3\u7801\u8865\u5168\u529F\u80FD\uFF0C\u548C\u5F3A\u7C7B\u578B\u68C0\u67E5\uFF0C\u8FD9\u9700\u8981\u5728JavaScript\u6587\u4EF6\u91CC\u542F\u7528\u7C7B\u578B\u68C0\u67E5\u529F\u80FD\uFF08\u6253\u5F00<code>checkJs</code>\u9009\u9879\u6216\u5728\u6587\u4EF6\u9876\u7AEF\u6DFB\u52A0<code>// @ts-check</code>\u6CE8\u91CA\uFF09\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// @ts-check</span>

<span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token string">&quot;x&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">writable</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

obj<span class="token punctuation">.</span>x<span class="token punctuation">.</span><span class="token function">toLowercase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//    ~~~~~~~~~~~</span>
<span class="token comment">//    error:</span>
<span class="token comment">//     Property &#39;toLowercase&#39; does not exist on type &#39;string&#39;.</span>
<span class="token comment">//     Did you mean &#39;toLowerCase&#39;?</span>

obj<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token string">&quot;world&quot;</span><span class="token punctuation">;</span>
<span class="token comment">//  ~</span>
<span class="token comment">//  error:</span>
<span class="token comment">//   Cannot assign to &#39;x&#39; because it is a read-only property.</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div>`,18);function C(N,E){const p=e("ExternalLinkIcon");return o(),c(l,null,[i,s("p",null,[k,s("a",d,[b,t(p)]),m,g,y,f,h,w,x,v,_]),T,s("p",null,[q,s("a",j,[S,t(p)]),B]),I],64)}var A=r(u,[["render",C]]);export{A as default};
