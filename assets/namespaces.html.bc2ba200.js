import{r as p,o as t,c as e,a as n,b as o,F as c,d as s,e as l}from"./app.fed89489.js";import{_ as u}from"./plugin-vue_export-helper.21dcd24c.js";const r={},i=n("h1",{id:"\u547D\u540D\u7A7A\u95F4",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u547D\u540D\u7A7A\u95F4","aria-hidden":"true"},"#"),s(" \u547D\u540D\u7A7A\u95F4")],-1),k=n("strong",null,"\u5173\u4E8E\u672F\u8BED\u7684\u4E00\u70B9\u8BF4\u660E:",-1),d=s(" \u8BF7\u52A1\u5FC5\u6CE8\u610F\u4E00\u70B9\uFF0CTypeScript 1.5\u91CC\u672F\u8BED\u540D\u5DF2\u7ECF\u53D1\u751F\u4E86\u53D8\u5316\u3002 \u201C\u5185\u90E8\u6A21\u5757\u201D\u73B0\u5728\u79F0\u505A\u201C\u547D\u540D\u7A7A\u95F4\u201D\u3002 \u201C\u5916\u90E8\u6A21\u5757\u201D\u73B0\u5728\u5219\u7B80\u79F0\u4E3A\u201C\u6A21\u5757\u201D\uFF0C\u8FD9\u662F\u4E3A\u4E86\u4E0E"),b={href:"http://www.ecma-international.org/ecma-262/6.0/",target:"_blank",rel:"noopener noreferrer"},m=s("ECMAScript 2015"),g=s("\u91CC\u7684\u672F\u8BED\u4FDD\u6301\u4E00\u81F4\uFF0C(\u4E5F\u5C31\u662F\u8BF4 "),h=n("code",null,"module X {",-1),y=s(" \u76F8\u5F53\u4E8E\u73B0\u5728\u63A8\u8350\u7684\u5199\u6CD5 "),x=n("code",null,"namespace X {",-1),w=s(")\u3002"),v=l(`<h2 id="\u4ECB\u7ECD" tabindex="-1"><a class="header-anchor" href="#\u4ECB\u7ECD" aria-hidden="true">#</a> \u4ECB\u7ECD</h2><p>\u8FD9\u7BC7\u6587\u7AE0\u63CF\u8FF0\u4E86\u5982\u4F55\u5728TypeScript\u91CC\u4F7F\u7528\u547D\u540D\u7A7A\u95F4\uFF08\u4E4B\u524D\u53EB\u505A\u201C\u5185\u90E8\u6A21\u5757\u201D\uFF09\u6765\u7EC4\u7EC7\u4F60\u7684\u4EE3\u7801\u3002 \u5C31\u50CF\u6211\u4EEC\u5728\u672F\u8BED\u8BF4\u660E\u91CC\u63D0\u5230\u7684\u90A3\u6837\uFF0C\u201C\u5185\u90E8\u6A21\u5757\u201D\u73B0\u5728\u53EB\u505A\u201C\u547D\u540D\u7A7A\u95F4\u201D\u3002 \u53E6\u5916\uFF0C\u4EFB\u4F55\u4F7F\u7528<code>module</code>\u5173\u952E\u5B57\u6765\u58F0\u660E\u4E00\u4E2A\u5185\u90E8\u6A21\u5757\u7684\u5730\u65B9\u90FD\u5E94\u8BE5\u4F7F\u7528<code>namespace</code>\u5173\u952E\u5B57\u6765\u66FF\u6362\u3002 \u8FD9\u5C31\u907F\u514D\u4E86\u8BA9\u65B0\u7684\u4F7F\u7528\u8005\u88AB\u76F8\u4F3C\u7684\u540D\u79F0\u6240\u8FF7\u60D1\u3002</p><h2 id="\u7B2C\u4E00\u6B65" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u4E00\u6B65" aria-hidden="true">#</a> \u7B2C\u4E00\u6B65</h2><p>\u6211\u4EEC\u5148\u6765\u5199\u4E00\u6BB5\u7A0B\u5E8F\u5E76\u5C06\u5728\u6574\u7BC7\u6587\u7AE0\u4E2D\u90FD\u4F7F\u7528\u8FD9\u4E2A\u4F8B\u5B50\u3002 \u6211\u4EEC\u5B9A\u4E49\u51E0\u4E2A\u7B80\u5355\u7684\u5B57\u7B26\u4E32\u9A8C\u8BC1\u5668\uFF0C\u5047\u8BBE\u4F60\u4F1A\u4F7F\u7528\u5B83\u4EEC\u6765\u9A8C\u8BC1\u8868\u5355\u91CC\u7684\u7528\u6237\u8F93\u5165\u6216\u9A8C\u8BC1\u5916\u90E8\u6570\u636E\u3002</p><h3 id="\u6240\u6709\u7684\u9A8C\u8BC1\u5668\u90FD\u653E\u5728\u4E00\u4E2A\u6587\u4EF6\u91CC" tabindex="-1"><a class="header-anchor" href="#\u6240\u6709\u7684\u9A8C\u8BC1\u5668\u90FD\u653E\u5728\u4E00\u4E2A\u6587\u4EF6\u91CC" aria-hidden="true">#</a> \u6240\u6709\u7684\u9A8C\u8BC1\u5668\u90FD\u653E\u5728\u4E00\u4E2A\u6587\u4EF6\u91CC</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">StringValidator</span> <span class="token punctuation">{</span>
    <span class="token function">isAcceptable</span><span class="token punctuation">(</span>s<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> lettersRegexp <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[A-Za-z]+$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>
<span class="token keyword">let</span> numberRegexp <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[0-9]+$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">LettersOnlyValidator</span> <span class="token keyword">implements</span> <span class="token class-name">StringValidator</span> <span class="token punctuation">{</span>
    <span class="token function">isAcceptable</span><span class="token punctuation">(</span>s<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> lettersRegexp<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">ZipCodeValidator</span> <span class="token keyword">implements</span> <span class="token class-name">StringValidator</span> <span class="token punctuation">{</span>
    <span class="token function">isAcceptable</span><span class="token punctuation">(</span>s<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> s<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">5</span> <span class="token operator">&amp;&amp;</span> numberRegexp<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// Some samples to try</span>
<span class="token keyword">let</span> strings <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;Hello&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;98052&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;101&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// Validators to use</span>
<span class="token keyword">let</span> validators<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>s<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> StringValidator<span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
validators<span class="token punctuation">[</span><span class="token string">&quot;ZIP code&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ZipCodeValidator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
validators<span class="token punctuation">[</span><span class="token string">&quot;Letters only&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LettersOnlyValidator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Show whether each string passed each validator</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> s <span class="token keyword">of</span> strings<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> name <span class="token keyword">in</span> validators<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> isMatch <span class="token operator">=</span> validators<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">isAcceptable</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span> s <span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39; </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span> isMatch <span class="token operator">?</span> <span class="token string">&quot;matches&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;does not match&quot;</span> <span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> &#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span> name <span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><h2 id="\u547D\u540D\u7A7A\u95F4-1" tabindex="-1"><a class="header-anchor" href="#\u547D\u540D\u7A7A\u95F4-1" aria-hidden="true">#</a> \u547D\u540D\u7A7A\u95F4</h2><p>\u968F\u7740\u66F4\u591A\u9A8C\u8BC1\u5668\u7684\u52A0\u5165\uFF0C\u6211\u4EEC\u9700\u8981\u4E00\u79CD\u624B\u6BB5\u6765\u7EC4\u7EC7\u4EE3\u7801\uFF0C\u4EE5\u4FBF\u4E8E\u5728\u8BB0\u5F55\u5B83\u4EEC\u7C7B\u578B\u7684\u540C\u65F6\u8FD8\u4E0D\u7528\u62C5\u5FC3\u4E0E\u5176\u5B83\u5BF9\u8C61\u4EA7\u751F\u547D\u540D\u51B2\u7A81\u3002 \u56E0\u6B64\uFF0C\u6211\u4EEC\u628A\u9A8C\u8BC1\u5668\u5305\u88F9\u5230\u4E00\u4E2A\u547D\u540D\u7A7A\u95F4\u5185\uFF0C\u800C\u4E0D\u662F\u628A\u5B83\u4EEC\u653E\u5728\u5168\u5C40\u547D\u540D\u7A7A\u95F4\u4E0B\u3002</p><p>\u4E0B\u9762\u7684\u4F8B\u5B50\u91CC\uFF0C\u628A\u6240\u6709\u4E0E\u9A8C\u8BC1\u5668\u76F8\u5173\u7684\u7C7B\u578B\u90FD\u653E\u5230\u4E00\u4E2A\u53EB\u505A<code>Validation</code>\u7684\u547D\u540D\u7A7A\u95F4\u91CC\u3002 \u56E0\u4E3A\u6211\u4EEC\u60F3\u8BA9\u8FD9\u4E9B\u63A5\u53E3\u548C\u7C7B\u5728\u547D\u540D\u7A7A\u95F4\u4E4B\u5916\u4E5F\u662F\u53EF\u8BBF\u95EE\u7684\uFF0C\u6240\u4EE5\u9700\u8981\u4F7F\u7528<code>export</code>\u3002 \u76F8\u53CD\u7684\uFF0C\u53D8\u91CF<code>lettersRegexp</code>\u548C<code>numberRegexp</code>\u662F\u5B9E\u73B0\u7684\u7EC6\u8282\uFF0C\u4E0D\u9700\u8981\u5BFC\u51FA\uFF0C\u56E0\u6B64\u5B83\u4EEC\u5728\u547D\u540D\u7A7A\u95F4\u5916\u662F\u4E0D\u80FD\u8BBF\u95EE\u7684\u3002 \u5728\u6587\u4EF6\u672B\u5C3E\u7684\u6D4B\u8BD5\u4EE3\u7801\u91CC\uFF0C\u7531\u4E8E\u662F\u5728\u547D\u540D\u7A7A\u95F4\u4E4B\u5916\u8BBF\u95EE\uFF0C\u56E0\u6B64\u9700\u8981\u9650\u5B9A\u7C7B\u578B\u7684\u540D\u79F0\uFF0C\u6BD4\u5982<code>Validation.LettersOnlyValidator</code>\u3002</p><h3 id="\u4F7F\u7528\u547D\u540D\u7A7A\u95F4\u7684\u9A8C\u8BC1\u5668" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528\u547D\u540D\u7A7A\u95F4\u7684\u9A8C\u8BC1\u5668" aria-hidden="true">#</a> \u4F7F\u7528\u547D\u540D\u7A7A\u95F4\u7684\u9A8C\u8BC1\u5668</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">namespace</span> Validation <span class="token punctuation">{</span>
    <span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">StringValidator</span> <span class="token punctuation">{</span>
        <span class="token function">isAcceptable</span><span class="token punctuation">(</span>s<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">const</span> lettersRegexp <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[A-Za-z]+$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> numberRegexp <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[0-9]+$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>

    <span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">LettersOnlyValidator</span> <span class="token keyword">implements</span> <span class="token class-name">StringValidator</span> <span class="token punctuation">{</span>
        <span class="token function">isAcceptable</span><span class="token punctuation">(</span>s<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> lettersRegexp<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">ZipCodeValidator</span> <span class="token keyword">implements</span> <span class="token class-name">StringValidator</span> <span class="token punctuation">{</span>
        <span class="token function">isAcceptable</span><span class="token punctuation">(</span>s<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> s<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">5</span> <span class="token operator">&amp;&amp;</span> numberRegexp<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// Some samples to try</span>
<span class="token keyword">let</span> strings <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;Hello&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;98052&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;101&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// Validators to use</span>
<span class="token keyword">let</span> validators<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>s<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> Validation<span class="token punctuation">.</span>StringValidator<span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
validators<span class="token punctuation">[</span><span class="token string">&quot;ZIP code&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Validation</span><span class="token punctuation">.</span><span class="token function">ZipCodeValidator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
validators<span class="token punctuation">[</span><span class="token string">&quot;Letters only&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Validation</span><span class="token punctuation">.</span><span class="token function">LettersOnlyValidator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Show whether each string passed each validator</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> s <span class="token keyword">of</span> strings<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> name <span class="token keyword">in</span> validators<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span> s <span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot; - </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span> validators<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">isAcceptable</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">&quot;matches&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;does not match&quot;</span> <span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span> name <span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div><h2 id="\u5206\u79BB\u5230\u591A\u6587\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u5206\u79BB\u5230\u591A\u6587\u4EF6" aria-hidden="true">#</a> \u5206\u79BB\u5230\u591A\u6587\u4EF6</h2><p>\u5F53\u5E94\u7528\u53D8\u5F97\u8D8A\u6765\u8D8A\u5927\u65F6\uFF0C\u6211\u4EEC\u9700\u8981\u5C06\u4EE3\u7801\u5206\u79BB\u5230\u4E0D\u540C\u7684\u6587\u4EF6\u4E2D\u4EE5\u4FBF\u4E8E\u7EF4\u62A4\u3002</p><h3 id="\u591A\u6587\u4EF6\u4E2D\u7684\u547D\u540D\u7A7A\u95F4" tabindex="-1"><a class="header-anchor" href="#\u591A\u6587\u4EF6\u4E2D\u7684\u547D\u540D\u7A7A\u95F4" aria-hidden="true">#</a> \u591A\u6587\u4EF6\u4E2D\u7684\u547D\u540D\u7A7A\u95F4</h3><p>\u73B0\u5728\uFF0C\u6211\u4EEC\u628A<code>Validation</code>\u547D\u540D\u7A7A\u95F4\u5206\u5272\u6210\u591A\u4E2A\u6587\u4EF6\u3002 \u5C3D\u7BA1\u662F\u4E0D\u540C\u7684\u6587\u4EF6\uFF0C\u5B83\u4EEC\u4ECD\u662F\u540C\u4E00\u4E2A\u547D\u540D\u7A7A\u95F4\uFF0C\u5E76\u4E14\u5728\u4F7F\u7528\u7684\u65F6\u5019\u5C31\u5982\u540C\u5B83\u4EEC\u5728\u4E00\u4E2A\u6587\u4EF6\u4E2D\u5B9A\u4E49\u7684\u4E00\u6837\u3002 \u56E0\u4E3A\u4E0D\u540C\u6587\u4EF6\u4E4B\u95F4\u5B58\u5728\u4F9D\u8D56\u5173\u7CFB\uFF0C\u6240\u4EE5\u6211\u4EEC\u52A0\u5165\u4E86\u5F15\u7528\u6807\u7B7E\u6765\u544A\u8BC9\u7F16\u8BD1\u5668\u6587\u4EF6\u4E4B\u95F4\u7684\u5173\u8054\u3002 \u6211\u4EEC\u7684\u6D4B\u8BD5\u4EE3\u7801\u4FDD\u6301\u4E0D\u53D8\u3002</p><h4 id="validation-ts" tabindex="-1"><a class="header-anchor" href="#validation-ts" aria-hidden="true">#</a> Validation.ts</h4><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">namespace</span> Validation <span class="token punctuation">{</span>
    <span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">StringValidator</span> <span class="token punctuation">{</span>
        <span class="token function">isAcceptable</span><span class="token punctuation">(</span>s<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h4 id="lettersonlyvalidator-ts" tabindex="-1"><a class="header-anchor" href="#lettersonlyvalidator-ts" aria-hidden="true">#</a> LettersOnlyValidator.ts</h4><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">/// &lt;reference path=&quot;Validation.ts&quot; /&gt;</span>
<span class="token keyword">namespace</span> Validation <span class="token punctuation">{</span>
    <span class="token keyword">const</span> lettersRegexp <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[A-Za-z]+$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>
    <span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">LettersOnlyValidator</span> <span class="token keyword">implements</span> <span class="token class-name">StringValidator</span> <span class="token punctuation">{</span>
        <span class="token function">isAcceptable</span><span class="token punctuation">(</span>s<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> lettersRegexp<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h4 id="zipcodevalidator-ts" tabindex="-1"><a class="header-anchor" href="#zipcodevalidator-ts" aria-hidden="true">#</a> ZipCodeValidator.ts</h4><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">/// &lt;reference path=&quot;Validation.ts&quot; /&gt;</span>
<span class="token keyword">namespace</span> Validation <span class="token punctuation">{</span>
    <span class="token keyword">const</span> numberRegexp <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[0-9]+$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>
    <span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">ZipCodeValidator</span> <span class="token keyword">implements</span> <span class="token class-name">StringValidator</span> <span class="token punctuation">{</span>
        <span class="token function">isAcceptable</span><span class="token punctuation">(</span>s<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> s<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">5</span> <span class="token operator">&amp;&amp;</span> numberRegexp<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h4 id="test-ts" tabindex="-1"><a class="header-anchor" href="#test-ts" aria-hidden="true">#</a> Test.ts</h4><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">/// &lt;reference path=&quot;Validation.ts&quot; /&gt;</span>
<span class="token comment">/// &lt;reference path=&quot;LettersOnlyValidator.ts&quot; /&gt;</span>
<span class="token comment">/// &lt;reference path=&quot;ZipCodeValidator.ts&quot; /&gt;</span>

<span class="token comment">// Some samples to try</span>
<span class="token keyword">let</span> strings <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;Hello&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;98052&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;101&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// Validators to use</span>
<span class="token keyword">let</span> validators<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>s<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> Validation<span class="token punctuation">.</span>StringValidator<span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
validators<span class="token punctuation">[</span><span class="token string">&quot;ZIP code&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Validation</span><span class="token punctuation">.</span><span class="token function">ZipCodeValidator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
validators<span class="token punctuation">[</span><span class="token string">&quot;Letters only&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Validation</span><span class="token punctuation">.</span><span class="token function">LettersOnlyValidator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Show whether each string passed each validator</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> s <span class="token keyword">of</span> strings<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> name <span class="token keyword">in</span> validators<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span> s <span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot; - </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span> validators<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">isAcceptable</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">&quot;matches&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;does not match&quot;</span> <span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span> name <span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>\u5F53\u6D89\u53CA\u5230\u591A\u6587\u4EF6\u65F6\uFF0C\u6211\u4EEC\u5FC5\u987B\u786E\u4FDD\u6240\u6709\u7F16\u8BD1\u540E\u7684\u4EE3\u7801\u90FD\u88AB\u52A0\u8F7D\u4E86\u3002 \u6211\u4EEC\u6709\u4E24\u79CD\u65B9\u5F0F\u3002</p><p>\u7B2C\u4E00\u79CD\u65B9\u5F0F\uFF0C\u628A\u6240\u6709\u7684\u8F93\u5165\u6587\u4EF6\u7F16\u8BD1\u4E3A\u4E00\u4E2A\u8F93\u51FA\u6587\u4EF6\uFF0C\u9700\u8981\u4F7F\u7528<code>--outFile</code>\u6807\u8BB0\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>tsc --outFile sample.js Test.ts
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u7F16\u8BD1\u5668\u4F1A\u6839\u636E\u6E90\u7801\u91CC\u7684\u5F15\u7528\u6807\u7B7E\u81EA\u52A8\u5730\u5BF9\u8F93\u51FA\u8FDB\u884C\u6392\u5E8F\u3002\u4F60\u4E5F\u53EF\u4EE5\u5355\u72EC\u5730\u6307\u5B9A\u6BCF\u4E2A\u6587\u4EF6\u3002</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>tsc --outFile sample.js Validation.ts LettersOnlyValidator.ts ZipCodeValidator.ts Test.ts
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u7B2C\u4E8C\u79CD\u65B9\u5F0F\uFF0C\u6211\u4EEC\u53EF\u4EE5\u7F16\u8BD1\u6BCF\u4E00\u4E2A\u6587\u4EF6\uFF08\u9ED8\u8BA4\u65B9\u5F0F\uFF09\uFF0C\u90A3\u4E48\u6BCF\u4E2A\u6E90\u6587\u4EF6\u90FD\u4F1A\u5BF9\u5E94\u751F\u6210\u4E00\u4E2AJavaScript\u6587\u4EF6\u3002 \u7136\u540E\uFF0C\u5728\u9875\u9762\u4E0A\u901A\u8FC7<code>&lt;script&gt;</code>\u6807\u7B7E\u628A\u6240\u6709\u751F\u6210\u7684JavaScript\u6587\u4EF6\u6309\u6B63\u786E\u7684\u987A\u5E8F\u5F15\u8FDB\u6765\uFF0C\u6BD4\u5982\uFF1A</p><h4 id="mytestpage-html-excerpt" tabindex="-1"><a class="header-anchor" href="#mytestpage-html-excerpt" aria-hidden="true">#</a> MyTestPage.html (excerpt)</h4><div class="language-markup ext-markup line-numbers-mode"><pre class="language-markup"><code>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Validation.js<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/javascript<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>LettersOnlyValidator.js<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/javascript<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ZipCodeValidator.js<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/javascript<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Test.js<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/javascript<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="\u522B\u540D" tabindex="-1"><a class="header-anchor" href="#\u522B\u540D" aria-hidden="true">#</a> \u522B\u540D</h2><p>\u53E6\u4E00\u79CD\u7B80\u5316\u547D\u540D\u7A7A\u95F4\u64CD\u4F5C\u7684\u65B9\u6CD5\u662F\u4F7F\u7528<code>import q = x.y.z</code>\u7ED9\u5E38\u7528\u7684\u5BF9\u8C61\u8D77\u4E00\u4E2A\u77ED\u7684\u540D\u5B57\u3002 \u4E0D\u8981\u4E0E\u7528\u6765\u52A0\u8F7D\u6A21\u5757\u7684<code>import x = require(&#39;name&#39;)</code>\u8BED\u6CD5\u5F04\u6DF7\u4E86\uFF0C\u8FD9\u91CC\u7684\u8BED\u6CD5\u662F\u4E3A\u6307\u5B9A\u7684\u7B26\u53F7\u521B\u5EFA\u4E00\u4E2A\u522B\u540D\u3002 \u4F60\u53EF\u4EE5\u7528\u8FD9\u79CD\u65B9\u6CD5\u4E3A\u4EFB\u610F\u6807\u8BC6\u7B26\u521B\u5EFA\u522B\u540D\uFF0C\u4E5F\u5305\u62EC\u5BFC\u5165\u7684\u6A21\u5757\u4E2D\u7684\u5BF9\u8C61\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">namespace</span> Shapes <span class="token punctuation">{</span>
    <span class="token keyword">export</span> <span class="token keyword">namespace</span> Polygons <span class="token punctuation">{</span>
        <span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">Triangle</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
        <span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">Square</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">import</span> polygons <span class="token operator">=</span> Shapes<span class="token punctuation">.</span>Polygons<span class="token punctuation">;</span>
<span class="token keyword">let</span> sq <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">polygons</span><span class="token punctuation">.</span><span class="token function">Square</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Same as &quot;new Shapes.Polygons.Square()&quot;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u6CE8\u610F\uFF0C\u6211\u4EEC\u5E76\u6CA1\u6709\u4F7F\u7528<code>require</code>\u5173\u952E\u5B57\uFF0C\u800C\u662F\u76F4\u63A5\u4F7F\u7528\u5BFC\u5165\u7B26\u53F7\u7684\u9650\u5B9A\u540D\u8D4B\u503C\u3002 \u8FD9\u4E0E\u4F7F\u7528<code>var</code>\u76F8\u4F3C\uFF0C\u4F46\u5B83\u8FD8\u9002\u7528\u4E8E\u7C7B\u578B\u548C\u5BFC\u5165\u7684\u5177\u6709\u547D\u540D\u7A7A\u95F4\u542B\u4E49\u7684\u7B26\u53F7\u3002 \u91CD\u8981\u7684\u662F\uFF0C\u5BF9\u4E8E\u503C\u6765\u8BB2\uFF0C<code>import</code>\u4F1A\u751F\u6210\u4E0E\u539F\u59CB\u7B26\u53F7\u4E0D\u540C\u7684\u5F15\u7528\uFF0C\u6240\u4EE5\u6539\u53D8\u522B\u540D\u7684<code>var</code>\u503C\u5E76\u4E0D\u4F1A\u5F71\u54CD\u539F\u59CB\u53D8\u91CF\u7684\u503C\u3002</p><h2 id="\u4F7F\u7528\u5176\u5B83\u7684javascript\u5E93" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528\u5176\u5B83\u7684javascript\u5E93" aria-hidden="true">#</a> \u4F7F\u7528\u5176\u5B83\u7684JavaScript\u5E93</h2><p>\u4E3A\u4E86\u63CF\u8FF0\u4E0D\u662F\u7528TypeScript\u7F16\u5199\u7684\u7C7B\u5E93\u7684\u7C7B\u578B\uFF0C\u6211\u4EEC\u9700\u8981\u58F0\u660E\u7C7B\u5E93\u5BFC\u51FA\u7684API\u3002 \u7531\u4E8E\u5927\u90E8\u5206\u7A0B\u5E8F\u5E93\u53EA\u63D0\u4F9B\u5C11\u6570\u7684\u9876\u7EA7\u5BF9\u8C61\uFF0C\u547D\u540D\u7A7A\u95F4\u662F\u7528\u6765\u8868\u793A\u5B83\u4EEC\u7684\u4E00\u4E2A\u597D\u529E\u6CD5\u3002</p><p>\u6211\u4EEC\u79F0\u5176\u4E3A\u58F0\u660E\u662F\u56E0\u4E3A\u5B83\u4E0D\u662F\u5916\u90E8\u7A0B\u5E8F\u7684\u5177\u4F53\u5B9E\u73B0\u3002 \u6211\u4EEC\u901A\u5E38\u5728<code>.d.ts</code>\u91CC\u5199\u8FD9\u4E9B\u58F0\u660E\u3002 \u5982\u679C\u4F60\u719F\u6089C/C++\uFF0C\u4F60\u53EF\u4EE5\u628A\u5B83\u4EEC\u5F53\u505A<code>.h</code>\u6587\u4EF6\u3002 \u8BA9\u6211\u4EEC\u770B\u4E00\u4E9B\u4F8B\u5B50\u3002</p><h3 id="\u5916\u90E8\u547D\u540D\u7A7A\u95F4" tabindex="-1"><a class="header-anchor" href="#\u5916\u90E8\u547D\u540D\u7A7A\u95F4" aria-hidden="true">#</a> \u5916\u90E8\u547D\u540D\u7A7A\u95F4</h3><p>\u6D41\u884C\u7684\u7A0B\u5E8F\u5E93D3\u5728\u5168\u5C40\u5BF9\u8C61<code>d3</code>\u91CC\u5B9A\u4E49\u5B83\u7684\u529F\u80FD\u3002 \u56E0\u4E3A\u8FD9\u4E2A\u5E93\u901A\u8FC7\u4E00\u4E2A<code>&lt;script&gt;</code>\u6807\u7B7E\u52A0\u8F7D\uFF08\u4E0D\u662F\u901A\u8FC7\u6A21\u5757\u52A0\u8F7D\u5668\uFF09\uFF0C\u5B83\u7684\u58F0\u660E\u6587\u4EF6\u4F7F\u7528\u5185\u90E8\u6A21\u5757\u6765\u5B9A\u4E49\u5B83\u7684\u7C7B\u578B\u3002 \u4E3A\u4E86\u8BA9TypeScript\u7F16\u8BD1\u5668\u8BC6\u522B\u5B83\u7684\u7C7B\u578B\uFF0C\u6211\u4EEC\u4F7F\u7528\u5916\u90E8\u547D\u540D\u7A7A\u95F4\u58F0\u660E\u3002 \u6BD4\u5982\uFF0C\u6211\u4EEC\u53EF\u4EE5\u50CF\u4E0B\u9762\u8FD9\u6837\u5199\uFF1A</p><h4 id="d3-d-ts-\u90E8\u5206\u6458\u5F55" tabindex="-1"><a class="header-anchor" href="#d3-d-ts-\u90E8\u5206\u6458\u5F55" aria-hidden="true">#</a> D3.d.ts (\u90E8\u5206\u6458\u5F55)</h4><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">declare</span> <span class="token keyword">namespace</span> <span class="token constant">D3</span> <span class="token punctuation">{</span>
    <span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">Selectors</span> <span class="token punctuation">{</span>
        select<span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token punctuation">(</span>selector<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> Selection<span class="token punctuation">;</span>
            <span class="token punctuation">(</span>element<span class="token operator">:</span> EventTarget<span class="token punctuation">)</span><span class="token operator">:</span> Selection<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">Event</span> <span class="token punctuation">{</span>
        x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
        y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">Base</span> <span class="token keyword">extends</span> <span class="token class-name">Selectors</span> <span class="token punctuation">{</span>
        event<span class="token operator">:</span> Event<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">declare</span> <span class="token keyword">var</span> d3<span class="token operator">:</span> <span class="token constant">D3</span><span class="token punctuation">.</span>Base<span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div>`,42);function q(f,V){const a=p("ExternalLinkIcon");return t(),e(c,null,[i,n("blockquote",null,[n("p",null,[k,d,n("a",b,[m,o(a)]),g,h,y,x,w])]),v],64)}var A=u(r,[["render",q]]);export{A as default};
