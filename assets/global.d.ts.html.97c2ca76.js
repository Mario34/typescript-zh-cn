import{r as e,o as p,c as t,a as n,b as c,F as o,d as s,e as l}from"./app.0186264c.js";import{_ as r}from"./plugin-vue_export-helper.21dcd24c.js";const i={},u=n("h2",{id:"\u5168\u5C40\u4EE3\u7801\u5E93",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u5168\u5C40\u4EE3\u7801\u5E93","aria-hidden":"true"},"#"),s(" \u5168\u5C40\u4EE3\u7801\u5E93")],-1),b=s("\u5168\u5C40\u4EE3\u7801\u5E93\u53EF\u4EE5\u901A\u8FC7\u5168\u5C40\u4F5C\u7528\u57DF\u6765\u8BBF\u95EE\uFF08\u4F8B\u5982\uFF0C\u4E0D\u4F7F\u7528\u4EFB\u4F55\u5F62\u5F0F\u7684"),k=n("code",null,"import",-1),m=s("\u8BED\u53E5\uFF09\u3002 \u8BB8\u591A\u4EE3\u7801\u5E93\u53EA\u662F\u7B80\u5355\u5730\u5BFC\u51FA\u4E00\u4E2A\u6216\u591A\u4E2A\u4F9B\u4F7F\u7528\u7684\u5168\u5C40\u53D8\u91CF\u3002 \u6BD4\u5982\uFF0C\u5982\u679C\u4F60\u4F7F\u7528"),d={href:"https://jquery.com/",target:"_blank",rel:"noopener noreferrer"},h=s("jQuery"),g=s("\uFF0C\u90A3\u4E48\u53EF\u4EE5\u4F7F\u7528"),y=n("code",null,"$",-1),f=s("\u53D8\u91CF\u6765\u5F15\u7528\u5B83\u3002"),v=l(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;hello!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u4F60\u901A\u5E38\u80FD\u591F\u5728\u6587\u6863\u91CC\u770B\u5230\u5982\u4F55\u5728 HTML \u7684 script \u6807\u7B7E\u91CC\u5F15\u7528\u4EE3\u7801\u5E93\uFF1A</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://a.great.cdn.for/someLib.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u76EE\u524D\uFF0C\u5927\u591A\u6570\u6D41\u884C\u7684\u5168\u5C40\u4EE3\u7801\u5E93\u90FD\u4EE5 UMD \u4EE3\u7801\u5E93\u53D1\u5E03\u3002 UMD \u4EE3\u7801\u5E93\u4E0E\u5168\u5C40\u4EE3\u7801\u5E93\u5F88\u96BE\u901A\u8FC7\u6587\u6863\u6765\u8BC6\u522B\u3002 \u5728\u7F16\u5199\u5168\u5C40\u4EE3\u7801\u5E93\u7684\u58F0\u660E\u6587\u4EF6\u4E4B\u524D\uFF0C\u786E\u4FDD\u4EE3\u7801\u5E93\u4E0D\u662F UMD \u4EE3\u7801\u5E93\u3002</p><h2 id="\u4ECE\u4EE3\u7801\u6765\u8BC6\u522B\u5168\u5C40\u4EE3\u7801\u5E93" tabindex="-1"><a class="header-anchor" href="#\u4ECE\u4EE3\u7801\u6765\u8BC6\u522B\u5168\u5C40\u4EE3\u7801\u5E93" aria-hidden="true">#</a> \u4ECE\u4EE3\u7801\u6765\u8BC6\u522B\u5168\u5C40\u4EE3\u7801\u5E93</h2><p>\u901A\u5E38\uFF0C\u5168\u5C40\u4EE3\u7801\u5E93\u7684\u4EE3\u7801\u5341\u5206\u7B80\u5355\u3002 \u4E00\u4E2A\u5168\u5C40\u7684\u201CHello, world\u201D\u4EE3\u7801\u5E93\u53EF\u4EE5\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">createGreeting</span><span class="token punctuation">(</span><span class="token parameter">s</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&#39;Hello, &#39;</span> <span class="token operator">+</span> s<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u6216\u8005\u8FD9\u6837\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>window<span class="token punctuation">.</span><span class="token function-variable function">createGreeting</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">s</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&#39;Hello, &#39;</span> <span class="token operator">+</span> s<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u5728\u9605\u8BFB\u5168\u5C40\u4EE3\u7801\u5E93\u7684\u4EE3\u7801\u65F6\uFF0C\u4F60\u4F1A\u770B\u5230\uFF1A</p><ul><li>\u9876\u5C42\u7684<code>var</code>\u8BED\u53E5\u6216<code>function</code>\u58F0\u660E</li><li>\u4E00\u4E2A\u6216\u591A\u4E2A<code>window.someName</code>\u8D4B\u503C\u8BED\u53E5</li><li>\u5047\u8BBE DOM \u76F8\u5173\u7684\u539F\u59CB\u503C<code>document</code>\u6216<code>window</code>\u5B58\u5728</li></ul><p>\u4F60\u4E0D\u4F1A\u770B\u5230\uFF1A</p><ul><li>\u68C0\u67E5\u6216\u4F7F\u7528\u4E86\u6A21\u5757\u52A0\u8F7D\u5668\uFF0C\u5982<code>require</code>\u6216<code>define</code></li><li>CommonJS/Node.js \u98CE\u683C\u7684\u5BFC\u5165\u8BED\u53E5\uFF0C\u5982<code>var fs = require(&quot;fs&quot;);</code></li><li><code>define(...)</code>\u8C03\u7528</li><li>\u63CF\u8FF0<code>require</code>\u6216\u5BFC\u5165\u4EE3\u7801\u5E93\u7684\u6587\u6863</li></ul><h2 id="\u5168\u5C40\u4EE3\u7801\u5E93\u7684\u793A\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u5168\u5C40\u4EE3\u7801\u5E93\u7684\u793A\u4F8B" aria-hidden="true">#</a> \u5168\u5C40\u4EE3\u7801\u5E93\u7684\u793A\u4F8B</h2><p>\u7531\u4E8E\u5C06\u5168\u5C40\u4EE3\u7801\u5E93\u8F6C\u6362\u4E3A UMD \u4EE3\u7801\u5E93\u5341\u5206\u5BB9\u6613\uFF0C\u56E0\u6B64\u5F88\u5C11\u6709\u4EE3\u7801\u5E93\u4ECD\u7136\u4F7F\u7528\u5168\u5C40\u4EE3\u7801\u5E93\u98CE\u683C\u3002 \u7136\u800C\uFF0C\u5C0F\u578B\u7684\u4EE3\u7801\u5E93\u4EE5\u53CA\u9700\u8981\u4F7F\u7528 DOM \u7684\u4EE3\u7801\u5E93\u4ECD\u7136\u53EF\u4EE5\u662F\u5168\u5C40\u7684\u3002</p><h2 id="\u5168\u5C40\u4EE3\u7801\u5E93\u6A21\u7248" tabindex="-1"><a class="header-anchor" href="#\u5168\u5C40\u4EE3\u7801\u5E93\u6A21\u7248" aria-hidden="true">#</a> \u5168\u5C40\u4EE3\u7801\u5E93\u6A21\u7248</h2><p>\u4F60\u53EF\u4EE5\u770B\u5230\u5982\u4E0B\u58F0\u660E\u6587\u4EF6\u7684\u793A\u4F8B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// Type definitions for [~THE LIBRARY NAME~] [~OPTIONAL VERSION NUMBER~]</span>
<span class="token comment">// Project: [~THE PROJECT NAME~]</span>
<span class="token comment">// Definitions by: [~YOUR NAME~] &lt;[~A URL FOR YOU~]&gt;</span>

<span class="token comment">/*~ If this library is callable (e.g. can be invoked as myLib(3)),
 *~ include those call signatures here.
 *~ Otherwise, delete this section.
 */</span>
<span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token function">myLib</span><span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token function">myLib</span><span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>

<span class="token comment">/*~ If you want the name of this library to be a valid type name,
 *~ you can do so here.
 *~
 *~ For example, this allows us to write &#39;var x: myLib&#39;;
 *~ Be sure this actually makes sense! If it doesn&#39;t, just
 *~ delete this declaration and add types inside the namespace below.
 */</span>
<span class="token keyword">interface</span> <span class="token class-name">myLib</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    length<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
    extras<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/*~ If your library has properties exposed on a global variable,
 *~ place them here.
 *~ You should also place types (interfaces and type alias) here.
 */</span>
<span class="token keyword">declare</span> <span class="token keyword">namespace</span> myLib <span class="token punctuation">{</span>
    <span class="token comment">//~ We can write &#39;myLib.timeout = 50;&#39;</span>
    <span class="token keyword">let</span> timeout<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>

    <span class="token comment">//~ We can access &#39;myLib.version&#39;, but not change it</span>
    <span class="token keyword">const</span> version<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>

    <span class="token comment">//~ There&#39;s some class we can create via &#39;let c = new myLib.Cat(42)&#39;</span>
    <span class="token comment">//~ Or reference e.g. &#39;function f(c: myLib.Cat) { ... }</span>
    <span class="token keyword">class</span> <span class="token class-name">Cat</span> <span class="token punctuation">{</span>
        <span class="token function">constructor</span><span class="token punctuation">(</span>n<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//~ We can read &#39;c.age&#39; from a &#39;Cat&#39; instance</span>
        <span class="token keyword">readonly</span> age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>

        <span class="token comment">//~ We can invoke &#39;c.purr()&#39; from a &#39;Cat&#39; instance</span>
        <span class="token function">purr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//~ We can declare a variable as</span>
    <span class="token comment">//~   &#39;var s: myLib.CatSettings = { weight: 5, name: &quot;Maru&quot; };&#39;</span>
    <span class="token keyword">interface</span> <span class="token class-name">CatSettings</span> <span class="token punctuation">{</span>
        weight<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
        name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
        tailLength<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//~ We can write &#39;const v: myLib.VetID = 42;&#39;</span>
    <span class="token comment">//~  or &#39;const v: myLib.VetID = &quot;bob&quot;;&#39;</span>
    <span class="token keyword">type</span> <span class="token class-name">VetID</span> <span class="token operator">=</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">;</span>

    <span class="token comment">//~ We can invoke &#39;myLib.checkCat(c)&#39; or &#39;myLib.checkCat(c, v);&#39;</span>
    <span class="token keyword">function</span> <span class="token function">checkCat</span><span class="token punctuation">(</span>c<span class="token operator">:</span> Cat<span class="token punctuation">,</span> s<span class="token operator">?</span><span class="token operator">:</span> VetID<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br></div></div>`,18);function w(_,L){const a=e("ExternalLinkIcon");return p(),t(o,null,[u,n("p",null,[b,k,m,n("a",d,[h,c(a)]),g,y,f]),v],64)}var q=r(i,[["render",w]]);export{q as default};
