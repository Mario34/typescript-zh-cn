import{r as o,o as l,c as r,a as s,b as a,w as c,F as u,e as p,d as n}from"./app.fed89489.js";import{_ as k}from"./plugin-vue_export-helper.21dcd24c.js";const i={},d=p(`<h1 id="\u9AD8\u7EA7\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u9AD8\u7EA7\u7C7B\u578B" aria-hidden="true">#</a> \u9AD8\u7EA7\u7C7B\u578B</h1><h2 id="\u4EA4\u53C9\u7C7B\u578B-intersection-types" tabindex="-1"><a class="header-anchor" href="#\u4EA4\u53C9\u7C7B\u578B-intersection-types" aria-hidden="true">#</a> \u4EA4\u53C9\u7C7B\u578B\uFF08Intersection Types\uFF09</h2><p>\u4EA4\u53C9\u7C7B\u578B\u662F\u5C06\u591A\u4E2A\u7C7B\u578B\u5408\u5E76\u4E3A\u4E00\u4E2A\u7C7B\u578B\u3002 \u8FD9\u8BA9\u6211\u4EEC\u53EF\u4EE5\u628A\u73B0\u6709\u7684\u591A\u79CD\u7C7B\u578B\u53E0\u52A0\u5230\u4E00\u8D77\u6210\u4E3A\u4E00\u79CD\u7C7B\u578B\uFF0C\u5B83\u5305\u542B\u4E86\u6240\u9700\u7684\u6240\u6709\u7C7B\u578B\u7684\u7279\u6027\u3002 \u4F8B\u5982\uFF0C<code>Person &amp; Serializable &amp; Loggable</code>\u540C\u65F6\u662F<code>Person</code><em>\u548C</em><code>Serializable</code><em>\u548C</em><code>Loggable</code>\u3002 \u5C31\u662F\u8BF4\u8FD9\u4E2A\u7C7B\u578B\u7684\u5BF9\u8C61\u540C\u65F6\u62E5\u6709\u4E86\u8FD9\u4E09\u79CD\u7C7B\u578B\u7684\u6210\u5458\u3002</p><p>\u6211\u4EEC\u5927\u591A\u662F\u5728\u6DF7\u5165\uFF08mixins\uFF09\u6216\u5176\u5B83\u4E0D\u9002\u5408\u5178\u578B\u9762\u5411\u5BF9\u8C61\u6A21\u578B\u7684\u5730\u65B9\u770B\u5230\u4EA4\u53C9\u7C7B\u578B\u7684\u4F7F\u7528\u3002 \uFF08\u5728JavaScript\u91CC\u53D1\u751F\u8FD9\u79CD\u60C5\u51B5\u7684\u573A\u5408\u5F88\u591A\uFF01\uFF09 \u4E0B\u9762\u662F\u5982\u4F55\u521B\u5EFA\u6DF7\u5165\u7684\u4E00\u4E2A\u7B80\u5355\u4F8B\u5B50(&quot;target&quot;: &quot;es5&quot;)\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">extend</span><span class="token generic class-name"><span class="token operator">&lt;</span>First<span class="token punctuation">,</span> Second<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>first<span class="token operator">:</span> First<span class="token punctuation">,</span> second<span class="token operator">:</span> Second<span class="token punctuation">)</span><span class="token operator">:</span> First <span class="token operator">&amp;</span> Second <span class="token punctuation">{</span>
    <span class="token keyword">const</span> result<span class="token operator">:</span> Partial<span class="token operator">&lt;</span>First <span class="token operator">&amp;</span> Second<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> prop <span class="token keyword">in</span> first<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>first<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>prop<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token punctuation">(</span>result <span class="token keyword">as</span> First<span class="token punctuation">)</span><span class="token punctuation">[</span>prop<span class="token punctuation">]</span> <span class="token operator">=</span> first<span class="token punctuation">[</span>prop<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> prop <span class="token keyword">in</span> second<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>second<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>prop<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token punctuation">(</span>result <span class="token keyword">as</span> Second<span class="token punctuation">)</span><span class="token punctuation">[</span>prop<span class="token punctuation">]</span> <span class="token operator">=</span> second<span class="token punctuation">[</span>prop<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result <span class="token keyword">as</span> First <span class="token operator">&amp;</span> Second<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword">public</span> name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">Loggable</span> <span class="token punctuation">{</span>
    <span class="token function">log</span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">ConsoleLogger</span> <span class="token keyword">implements</span> <span class="token class-name">Loggable</span> <span class="token punctuation">{</span>
    <span class="token function">log</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Hello, I&#39;m </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> jim <span class="token operator">=</span> <span class="token function">extend</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">&#39;Jim&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ConsoleLogger<span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span>
jim<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>jim<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><h2 id="\u8054\u5408\u7C7B\u578B-union-types" tabindex="-1"><a class="header-anchor" href="#\u8054\u5408\u7C7B\u578B-union-types" aria-hidden="true">#</a> \u8054\u5408\u7C7B\u578B\uFF08Union Types\uFF09</h2><p>\u8054\u5408\u7C7B\u578B\u4E0E\u4EA4\u53C9\u7C7B\u578B\u5F88\u6709\u5173\u8054\uFF0C\u4F46\u662F\u4F7F\u7528\u4E0A\u5374\u5B8C\u5168\u4E0D\u540C\u3002 \u5076\u5C14\u4F60\u4F1A\u9047\u5230\u8FD9\u79CD\u60C5\u51B5\uFF0C\u4E00\u4E2A\u4EE3\u7801\u5E93\u5E0C\u671B\u4F20\u5165<code>number</code>\u6216<code>string</code>\u7C7B\u578B\u7684\u53C2\u6570\u3002 \u4F8B\u5982\u4E0B\u9762\u7684\u51FD\u6570\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * Takes a string and adds &quot;padding&quot; to the left.
 * If &#39;padding&#39; is a string, then &#39;padding&#39; is appended to the left side.
 * If &#39;padding&#39; is a number, then that number of spaces is added to the left side.
 */</span>
<span class="token keyword">function</span> <span class="token function">padLeft</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> padding<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> padding <span class="token operator">===</span> <span class="token string">&quot;number&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">Array</span><span class="token punctuation">(</span>padding <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span> <span class="token operator">+</span> value<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> padding <span class="token operator">===</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> padding <span class="token operator">+</span> value<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Expected string or number, got &#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>padding<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">padLeft</span><span class="token punctuation">(</span><span class="token string">&quot;Hello world&quot;</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// returns &quot;    Hello world&quot;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p><code>padLeft</code>\u5B58\u5728\u4E00\u4E2A\u95EE\u9898\uFF0C<code>padding</code>\u53C2\u6570\u7684\u7C7B\u578B\u6307\u5B9A\u6210\u4E86<code>any</code>\u3002 \u8FD9\u5C31\u662F\u8BF4\u6211\u4EEC\u53EF\u4EE5\u4F20\u5165\u4E00\u4E2A\u65E2\u4E0D\u662F<code>number</code>\u4E5F\u4E0D\u662F<code>string</code>\u7C7B\u578B\u7684\u53C2\u6570\uFF0C\u4F46\u662FTypeScript\u5374\u4E0D\u62A5\u9519\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> indentedString <span class="token operator">=</span> <span class="token function">padLeft</span><span class="token punctuation">(</span><span class="token string">&quot;Hello world&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u7F16\u8BD1\u9636\u6BB5\u901A\u8FC7\uFF0C\u8FD0\u884C\u65F6\u62A5\u9519</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u5728\u4F20\u7EDF\u7684\u9762\u5411\u5BF9\u8C61\u8BED\u8A00\u91CC\uFF0C\u6211\u4EEC\u53EF\u80FD\u4F1A\u5C06\u8FD9\u4E24\u79CD\u7C7B\u578B\u62BD\u8C61\u6210\u6709\u5C42\u7EA7\u7684\u7C7B\u578B\u3002 \u8FD9\u4E48\u505A\u663E\u7136\u662F\u975E\u5E38\u6E05\u6670\u7684\uFF0C\u4F46\u540C\u65F6\u4E5F\u5B58\u5728\u4E86\u8FC7\u5EA6\u8BBE\u8BA1\u3002 <code>padLeft</code>\u539F\u59CB\u7248\u672C\u7684\u597D\u5904\u4E4B\u4E00\u662F\u5141\u8BB8\u6211\u4EEC\u4F20\u5165\u539F\u59CB\u7C7B\u578B\u3002 \u8FD9\u6837\u505A\u7684\u8BDD\u4F7F\u7528\u8D77\u6765\u65E2\u7B80\u5355\u53C8\u65B9\u4FBF\u3002 \u5982\u679C\u6211\u4EEC\u5C31\u662F\u60F3\u4F7F\u7528\u5DF2\u7ECF\u5B58\u5728\u7684\u51FD\u6570\u7684\u8BDD\uFF0C\u8FD9\u79CD\u65B0\u7684\u65B9\u5F0F\u5C31\u4E0D\u9002\u7528\u4E86\u3002</p><p>\u4EE3\u66FF<code>any</code>\uFF0C \u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528_\u8054\u5408\u7C7B\u578B_\u505A\u4E3A<code>padding</code>\u7684\u53C2\u6570\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * Takes a string and adds &quot;padding&quot; to the left.
 * If &#39;padding&#39; is a string, then &#39;padding&#39; is appended to the left side.
 * If &#39;padding&#39; is a number, then that number of spaces is added to the left side.
 */</span>
<span class="token keyword">function</span> <span class="token function">padLeft</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> padding<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> indentedString <span class="token operator">=</span> <span class="token function">padLeft</span><span class="token punctuation">(</span><span class="token string">&quot;Hello world&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// errors during compilation</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u8054\u5408\u7C7B\u578B\u8868\u793A\u4E00\u4E2A\u503C\u53EF\u4EE5\u662F\u51E0\u79CD\u7C7B\u578B\u4E4B\u4E00\u3002 \u6211\u4EEC\u7528\u7AD6\u7EBF\uFF08<code>|</code>\uFF09\u5206\u9694\u6BCF\u4E2A\u7C7B\u578B\uFF0C\u6240\u4EE5<code>number | string | boolean</code>\u8868\u793A\u4E00\u4E2A\u503C\u53EF\u4EE5\u662F<code>number</code>\uFF0C<code>string</code>\uFF0C\u6216<code>boolean</code>\u3002</p><p>\u5982\u679C\u4E00\u4E2A\u503C\u662F\u8054\u5408\u7C7B\u578B\uFF0C\u6211\u4EEC\u53EA\u80FD\u8BBF\u95EE\u6B64\u8054\u5408\u7C7B\u578B\u7684\u6240\u6709\u7C7B\u578B\u91CC\u5171\u6709\u7684\u6210\u5458\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Bird</span> <span class="token punctuation">{</span>
    <span class="token function">fly</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">layEggs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">Fish</span> <span class="token punctuation">{</span>
    <span class="token function">swim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">layEggs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">getSmallPet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Fish <span class="token operator">|</span> Bird <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> pet <span class="token operator">=</span> <span class="token function">getSmallPet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
pet<span class="token punctuation">.</span><span class="token function">layEggs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// okay</span>
pet<span class="token punctuation">.</span><span class="token function">swim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// errors</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>\u8FD9\u91CC\u7684\u8054\u5408\u7C7B\u578B\u53EF\u80FD\u6709\u70B9\u590D\u6742\uFF0C\u4F46\u662F\u4F60\u5F88\u5BB9\u6613\u5C31\u4E60\u60EF\u4E86\u3002 \u5982\u679C\u4E00\u4E2A\u503C\u7684\u7C7B\u578B\u662F<code>A | B</code>\uFF0C\u6211\u4EEC\u80FD\u591F_\u786E\u5B9A_\u7684\u662F\u5B83\u5305\u542B\u4E86<code>A</code><em>\u548C</em><code>B</code>\u4E2D\u5171\u6709\u7684\u6210\u5458\u3002 \u8FD9\u4E2A\u4F8B\u5B50\u91CC\uFF0C<code>Bird</code>\u5177\u6709\u4E00\u4E2A<code>fly</code>\u6210\u5458\u3002 \u6211\u4EEC\u4E0D\u80FD\u786E\u5B9A\u4E00\u4E2A<code>Bird | Fish</code>\u7C7B\u578B\u7684\u53D8\u91CF\u662F\u5426\u6709<code>fly</code>\u65B9\u6CD5\u3002 \u5982\u679C\u53D8\u91CF\u5728\u8FD0\u884C\u65F6\u662F<code>Fish</code>\u7C7B\u578B\uFF0C\u90A3\u4E48\u8C03\u7528<code>pet.fly()</code>\u5C31\u51FA\u9519\u4E86\u3002</p><h2 id="\u7C7B\u578B\u5B88\u536B\u4E0E\u7C7B\u578B\u533A\u5206-type-guards-and-differentiating-types" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u578B\u5B88\u536B\u4E0E\u7C7B\u578B\u533A\u5206-type-guards-and-differentiating-types" aria-hidden="true">#</a> \u7C7B\u578B\u5B88\u536B\u4E0E\u7C7B\u578B\u533A\u5206\uFF08Type Guards and Differentiating Types\uFF09</h2><p>\u8054\u5408\u7C7B\u578B\u9002\u5408\u4E8E\u90A3\u4E9B\u503C\u53EF\u4EE5\u4E3A\u4E0D\u540C\u7C7B\u578B\u7684\u60C5\u51B5\u3002 \u4F46\u5F53\u6211\u4EEC\u60F3\u786E\u5207\u5730\u4E86\u89E3\u662F\u5426\u4E3A<code>Fish</code>\u65F6\u600E\u4E48\u529E\uFF1F JavaScript\u91CC\u5E38\u7528\u6765\u533A\u52062\u4E2A\u53EF\u80FD\u503C\u7684\u65B9\u6CD5\u662F\u68C0\u67E5\u6210\u5458\u662F\u5426\u5B58\u5728\u3002 \u5982\u4E4B\u524D\u63D0\u53CA\u7684\uFF0C\u6211\u4EEC\u53EA\u80FD\u8BBF\u95EE\u8054\u5408\u7C7B\u578B\u4E2D\u5171\u540C\u62E5\u6709\u7684\u6210\u5458\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> pet <span class="token operator">=</span> <span class="token function">getSmallPet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u6BCF\u4E00\u4E2A\u6210\u5458\u8BBF\u95EE\u90FD\u4F1A\u62A5\u9519</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>pet<span class="token punctuation">.</span>swim<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    pet<span class="token punctuation">.</span><span class="token function">swim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>pet<span class="token punctuation">.</span>fly<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    pet<span class="token punctuation">.</span><span class="token function">fly</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u4E3A\u4E86\u8BA9\u8FD9\u6BB5\u4EE3\u7801\u5DE5\u4F5C\uFF0C\u6211\u4EEC\u8981\u4F7F\u7528\u7C7B\u578B\u65AD\u8A00\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> pet <span class="token operator">=</span> <span class="token function">getSmallPet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>pet <span class="token keyword">as</span> Fish<span class="token punctuation">)</span><span class="token punctuation">.</span>swim<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">(</span>pet <span class="token keyword">as</span> Fish<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">swim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>pet <span class="token keyword">as</span> Bird<span class="token punctuation">)</span><span class="token punctuation">.</span>fly<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">(</span>pet <span class="token keyword">as</span> Bird<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fly</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="\u7528\u6237\u81EA\u5B9A\u4E49\u7684\u7C7B\u578B\u5B88\u536B" tabindex="-1"><a class="header-anchor" href="#\u7528\u6237\u81EA\u5B9A\u4E49\u7684\u7C7B\u578B\u5B88\u536B" aria-hidden="true">#</a> \u7528\u6237\u81EA\u5B9A\u4E49\u7684\u7C7B\u578B\u5B88\u536B</h3><p>\u8FD9\u91CC\u53EF\u4EE5\u6CE8\u610F\u5230\u6211\u4EEC\u4E0D\u5F97\u4E0D\u591A\u6B21\u4F7F\u7528\u7C7B\u578B\u65AD\u8A00\u3002 \u5047\u82E5\u6211\u4EEC\u4E00\u65E6\u68C0\u67E5\u8FC7\u7C7B\u578B\uFF0C\u5C31\u80FD\u5728\u4E4B\u540E\u7684\u6BCF\u4E2A\u5206\u652F\u91CC\u6E05\u695A\u5730\u77E5\u9053<code>pet</code>\u7684\u7C7B\u578B\u7684\u8BDD\u5C31\u597D\u4E86\u3002</p><p>TypeScript\u91CC\u7684_\u7C7B\u578B\u5B88\u536B_\u673A\u5236\u8BA9\u5B83\u6210\u4E3A\u4E86\u73B0\u5B9E\u3002 \u7C7B\u578B\u5B88\u536B\u5C31\u662F\u4E00\u4E9B\u8868\u8FBE\u5F0F\uFF0C\u5B83\u4EEC\u4F1A\u5728\u8FD0\u884C\u65F6\u68C0\u67E5\u4EE5\u786E\u4FDD\u5728\u67D0\u4E2A\u4F5C\u7528\u57DF\u91CC\u7684\u7C7B\u578B\u3002</p><h4 id="\u4F7F\u7528\u7C7B\u578B\u5224\u5B9A" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528\u7C7B\u578B\u5224\u5B9A" aria-hidden="true">#</a> \u4F7F\u7528\u7C7B\u578B\u5224\u5B9A</h4><p>\u8981\u5B9A\u4E49\u4E00\u4E2A\u7C7B\u578B\u5B88\u536B\uFF0C\u6211\u4EEC\u53EA\u8981\u7B80\u5355\u5730\u5B9A\u4E49\u4E00\u4E2A\u51FD\u6570\uFF0C\u5B83\u7684\u8FD4\u56DE\u503C\u662F\u4E00\u4E2A_\u7C7B\u578B\u8C13\u8BCD_\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">isFish</span><span class="token punctuation">(</span>pet<span class="token operator">:</span> Fish <span class="token operator">|</span> Bird<span class="token punctuation">)</span><span class="token operator">:</span> pet <span class="token keyword">is</span> Fish <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>pet <span class="token keyword">as</span> Fish<span class="token punctuation">)</span><span class="token punctuation">.</span>swim <span class="token operator">!==</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u5728\u8FD9\u4E2A\u4F8B\u5B50\u91CC\uFF0C<code>pet is Fish</code>\u5C31\u662F\u7C7B\u578B\u8C13\u8BCD\u3002 \u8C13\u8BCD\u4E3A<code>parameterName is Type</code>\u8FD9\u79CD\u5F62\u5F0F\uFF0C<code>parameterName</code>\u5FC5\u987B\u662F\u6765\u81EA\u4E8E\u5F53\u524D\u51FD\u6570\u7B7E\u540D\u91CC\u7684\u4E00\u4E2A\u53C2\u6570\u540D\u3002</p><p>\u6BCF\u5F53\u4F7F\u7528\u4E00\u4E9B\u53D8\u91CF\u8C03\u7528<code>isFish</code>\u65F6\uFF0CTypeScript\u4F1A\u5C06\u53D8\u91CF\u7F29\u51CF\u4E3A\u90A3\u4E2A\u5177\u4F53\u7684\u7C7B\u578B\uFF0C\u53EA\u8981\u8FD9\u4E2A\u7C7B\u578B\u4E0E\u53D8\u91CF\u7684\u539F\u59CB\u7C7B\u578B\u662F\u517C\u5BB9\u7684\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// &#39;swim&#39; \u548C &#39;fly&#39; \u8C03\u7528\u90FD\u6CA1\u6709\u95EE\u9898\u4E86</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isFish</span><span class="token punctuation">(</span>pet<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    pet<span class="token punctuation">.</span><span class="token function">swim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">else</span> <span class="token punctuation">{</span>
    pet<span class="token punctuation">.</span><span class="token function">fly</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u6CE8\u610FTypeScript\u4E0D\u4EC5\u77E5\u9053\u5728<code>if</code>\u5206\u652F\u91CC<code>pet</code>\u662F<code>Fish</code>\u7C7B\u578B\uFF1B \u5B83\u8FD8\u6E05\u695A\u5728<code>else</code>\u5206\u652F\u91CC\uFF0C\u4E00\u5B9A_\u4E0D\u662F_<code>Fish</code>\u7C7B\u578B\uFF0C\u4E00\u5B9A\u662F<code>Bird</code>\u7C7B\u578B\u3002</p><h4 id="\u4F7F\u7528in\u64CD\u4F5C\u7B26" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528in\u64CD\u4F5C\u7B26" aria-hidden="true">#</a> \u4F7F\u7528<code>in</code>\u64CD\u4F5C\u7B26</h4><p><code>in</code>\u64CD\u4F5C\u7B26\u53EF\u4EE5\u4F5C\u4E3A\u7C7B\u578B\u7EC6\u5316\u8868\u8FBE\u5F0F\u6765\u4F7F\u7528\u3002</p><p>\u5BF9\u4E8E<code>n in x</code>\u8868\u8FBE\u5F0F\uFF0C\u5176\u4E2D<code>n</code>\u662F\u5B57\u7B26\u4E32\u5B57\u9762\u91CF\u6216\u5B57\u7B26\u4E32\u5B57\u9762\u91CF\u7C7B\u578B\u4E14<code>x</code>\u662F\u4E2A\u8054\u5408\u7C7B\u578B\uFF0C\u90A3\u4E48<code>true</code>\u5206\u652F\u7684\u7C7B\u578B\u7EC6\u5316\u4E3A\u6709\u4E00\u4E2A\u53EF\u9009\u7684\u6216\u5FC5\u987B\u7684\u5C5E\u6027<code>n</code>\uFF0C<code>false</code>\u5206\u652F\u7684\u7C7B\u578B\u7EC6\u5316\u4E3A\u6709\u4E00\u4E2A\u53EF\u9009\u7684\u6216\u4E0D\u5B58\u5728\u5C5E\u6027<code>n</code>\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">move</span><span class="token punctuation">(</span>pet<span class="token operator">:</span> Fish <span class="token operator">|</span> Bird<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&quot;swim&quot;</span> <span class="token keyword">in</span> pet<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> pet<span class="token punctuation">.</span><span class="token function">swim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> pet<span class="token punctuation">.</span><span class="token function">fly</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="typeof\u7C7B\u578B\u5B88\u536B" tabindex="-1"><a class="header-anchor" href="#typeof\u7C7B\u578B\u5B88\u536B" aria-hidden="true">#</a> <code>typeof</code>\u7C7B\u578B\u5B88\u536B</h3><p>\u73B0\u5728\u6211\u4EEC\u56DE\u8FC7\u5934\u6765\u770B\u770B\u600E\u4E48\u4F7F\u7528\u8054\u5408\u7C7B\u578B\u4E66\u5199<code>padLeft</code>\u4EE3\u7801\u3002 \u6211\u4EEC\u53EF\u4EE5\u50CF\u4E0B\u9762\u8FD9\u6837\u5229\u7528\u7C7B\u578B\u65AD\u8A00\u6765\u5199\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">isNumber</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> x <span class="token keyword">is</span> <span class="token builtin">number</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">typeof</span> x <span class="token operator">===</span> <span class="token string">&quot;number&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">isString</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> x <span class="token keyword">is</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">typeof</span> x <span class="token operator">===</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">padLeft</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> padding<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isNumber</span><span class="token punctuation">(</span>padding<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">Array</span><span class="token punctuation">(</span>padding <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span> <span class="token operator">+</span> value<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isString</span><span class="token punctuation">(</span>padding<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> padding <span class="token operator">+</span> value<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Expected string or number, got &#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>padding<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>\u7136\u800C\uFF0C\u5FC5\u987B\u8981\u5B9A\u4E49\u4E00\u4E2A\u51FD\u6570\u6765\u5224\u65AD\u7C7B\u578B\u662F\u5426\u662F\u539F\u59CB\u7C7B\u578B\uFF0C\u8FD9\u592A\u75DB\u82E6\u4E86\u3002 \u5E78\u8FD0\u7684\u662F\uFF0C\u73B0\u5728\u6211\u4EEC\u4E0D\u5FC5\u5C06<code>typeof x === &quot;number&quot;</code>\u62BD\u8C61\u6210\u4E00\u4E2A\u51FD\u6570\uFF0C\u56E0\u4E3ATypeScript\u53EF\u4EE5\u5C06\u5B83\u8BC6\u522B\u4E3A\u4E00\u4E2A\u7C7B\u578B\u5B88\u536B\u3002 \u4E5F\u5C31\u662F\u8BF4\u6211\u4EEC\u53EF\u4EE5\u76F4\u63A5\u5728\u4EE3\u7801\u91CC\u68C0\u67E5\u7C7B\u578B\u4E86\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">padLeft</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> padding<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> padding <span class="token operator">===</span> <span class="token string">&quot;number&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">Array</span><span class="token punctuation">(</span>padding <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span> <span class="token operator">+</span> value<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> padding <span class="token operator">===</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> padding <span class="token operator">+</span> value<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Expected string or number, got &#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>padding<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u8FD9\u4E9B_<code>typeof</code>\u7C7B\u578B\u5B88\u536B_\u53EA\u6709\u4E24\u79CD\u5F62\u5F0F\u80FD\u88AB\u8BC6\u522B\uFF1A<code>typeof v === &quot;typename&quot;</code>\u548C<code>typeof v !== &quot;typename&quot;</code>\uFF0C<code>&quot;typename&quot;</code>\u5FC5\u987B\u662F<code>&quot;number&quot;</code>\uFF0C<code>&quot;string&quot;</code>\uFF0C<code>&quot;boolean&quot;</code>\u6216<code>&quot;symbol&quot;</code>\u3002 \u4F46\u662FTypeScript\u5E76\u4E0D\u4F1A\u963B\u6B62\u4F60\u4E0E\u5176\u5B83\u5B57\u7B26\u4E32\u6BD4\u8F83\uFF0C\u8BED\u8A00\u4E0D\u4F1A\u628A\u90A3\u4E9B\u8868\u8FBE\u5F0F\u8BC6\u522B\u4E3A\u7C7B\u578B\u5B88\u536B\u3002</p><h3 id="instanceof\u7C7B\u578B\u5B88\u536B" tabindex="-1"><a class="header-anchor" href="#instanceof\u7C7B\u578B\u5B88\u536B" aria-hidden="true">#</a> <code>instanceof</code>\u7C7B\u578B\u5B88\u536B</h3><p>\u5982\u679C\u4F60\u5DF2\u7ECF\u9605\u8BFB\u4E86<code>typeof</code>\u7C7B\u578B\u5B88\u536B\u5E76\u4E14\u5BF9JavaScript\u91CC\u7684<code>instanceof</code>\u64CD\u4F5C\u7B26\u719F\u6089\u7684\u8BDD\uFF0C\u4F60\u53EF\u80FD\u5DF2\u7ECF\u731C\u5230\u4E86\u8FD9\u8282\u8981\u8BB2\u7684\u5185\u5BB9\u3002</p><p>_<code>instanceof</code>\u7C7B\u578B\u5B88\u536B_\u662F\u901A\u8FC7\u6784\u9020\u51FD\u6570\u6765\u7EC6\u5316\u7C7B\u578B\u7684\u4E00\u79CD\u65B9\u5F0F\u3002 \u6BD4\u5982\uFF0C\u6211\u4EEC\u501F\u9274\u4E00\u4E0B\u4E4B\u524D\u5B57\u7B26\u4E32\u586B\u5145\u7684\u4F8B\u5B50\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Padder</span> <span class="token punctuation">{</span>
    <span class="token function">getPaddingString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">SpaceRepeatingPadder</span> <span class="token keyword">implements</span> <span class="token class-name">Padder</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword">private</span> numSpaces<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
    <span class="token function">getPaddingString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">Array</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>numSpaces <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">StringPadder</span> <span class="token keyword">implements</span> <span class="token class-name">Padder</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword">private</span> value<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
    <span class="token function">getPaddingString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">getRandomPadder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0.5</span> <span class="token operator">?</span>
        <span class="token keyword">new</span> <span class="token class-name">SpaceRepeatingPadder</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">:</span>
        <span class="token keyword">new</span> <span class="token class-name">StringPadder</span><span class="token punctuation">(</span><span class="token string">&quot;  &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u7C7B\u578B\u4E3ASpaceRepeatingPadder | StringPadder</span>
<span class="token keyword">let</span> padder<span class="token operator">:</span> Padder <span class="token operator">=</span> <span class="token function">getRandomPadder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>padder <span class="token keyword">instanceof</span> <span class="token class-name">SpaceRepeatingPadder</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    padder<span class="token punctuation">;</span> <span class="token comment">// \u7C7B\u578B\u7EC6\u5316\u4E3A&#39;SpaceRepeatingPadder&#39;</span>
<span class="token punctuation">}</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>padder <span class="token keyword">instanceof</span> <span class="token class-name">StringPadder</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    padder<span class="token punctuation">;</span> <span class="token comment">// \u7C7B\u578B\u7EC6\u5316\u4E3A&#39;StringPadder&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><p><code>instanceof</code>\u7684\u53F3\u4FA7\u8981\u6C42\u662F\u4E00\u4E2A\u6784\u9020\u51FD\u6570\uFF0CTypeScript\u5C06\u7EC6\u5316\u4E3A\uFF1A</p><ol><li>\u6B64\u6784\u9020\u51FD\u6570\u7684<code>prototype</code>\u5C5E\u6027\u7684\u7C7B\u578B\uFF0C\u5982\u679C\u5B83\u7684\u7C7B\u578B\u4E0D\u4E3A<code>any</code>\u7684\u8BDD</li><li>\u6784\u9020\u7B7E\u540D\u6240\u8FD4\u56DE\u7684\u7C7B\u578B\u7684\u8054\u5408</li></ol><p>\u4EE5\u6B64\u987A\u5E8F\u3002</p><h2 id="\u53EF\u4EE5\u4E3Anull\u7684\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u53EF\u4EE5\u4E3Anull\u7684\u7C7B\u578B" aria-hidden="true">#</a> \u53EF\u4EE5\u4E3A<code>null</code>\u7684\u7C7B\u578B</h2>`,50),b=n("TypeScript\u5177\u6709\u4E24\u79CD\u7279\u6B8A\u7684\u7C7B\u578B\uFF0C"),m=s("code",null,"null",-1),y=n("\u548C"),g=s("code",null,"undefined",-1),w=n("\uFF0C\u5B83\u4EEC\u5206\u522B\u5177\u6709\u503C"),f=s("code",null,"null",-1),v=n("\u548C"),h=s("code",null,"undefined",-1),T=n(". \u6211\u4EEC\u5728"),q=n("\u57FA\u7840\u7C7B\u578B"),x=n("\u4E00\u8282\u91CC\u5DF2\u7ECF\u505A\u8FC7\u7B80\u8981\u8BF4\u660E\u3002 \u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0C\u7C7B\u578B\u68C0\u67E5\u5668\u8BA4\u4E3A"),_=s("code",null,"null",-1),P=n("\u4E0E"),N=s("code",null,"undefined",-1),S=n("\u53EF\u4EE5\u8D4B\u503C\u7ED9\u4EFB\u4F55\u7C7B\u578B\u3002 "),F=s("code",null,"null",-1),U=n("\u4E0E"),R=s("code",null,"undefined",-1),E=n("\u662F\u6240\u6709\u5176\u5B83\u7C7B\u578B\u7684\u4E00\u4E2A\u6709\u6548\u503C\u3002 \u8FD9\u4E5F\u610F\u5473\u7740\uFF0C\u4F60\u963B\u6B62\u4E0D\u4E86\u5C06\u5B83\u4EEC\u8D4B\u503C\u7ED9\u5176\u5B83\u7C7B\u578B\uFF0C\u5C31\u7B97\u662F\u4F60\u60F3\u8981\u963B\u6B62\u8FD9\u79CD\u60C5\u51B5\u4E5F\u4E0D\u884C\u3002 "),B=s("code",null,"null",-1),C=n("\u7684\u53D1\u660E\u8005\uFF0CTony Hoare\uFF0C\u79F0\u5B83\u4E3A"),K={href:"https://en.wikipedia.org/wiki/Null_pointer#History",target:"_blank",rel:"noopener noreferrer"},I=n("\u4EF7\u503C\u4EBF\u4E07\u7F8E\u91D1\u7684\u9519\u8BEF"),L=n("\u3002"),A=p(`<p><code>--strictNullChecks</code>\u6807\u8BB0\u53EF\u4EE5\u89E3\u51B3\u6B64\u9519\u8BEF\uFF1A\u5F53\u4F60\u58F0\u660E\u4E00\u4E2A\u53D8\u91CF\u65F6\uFF0C\u5B83\u4E0D\u4F1A\u81EA\u52A8\u5730\u5305\u542B<code>null</code>\u6216<code>undefined</code>\u3002 \u4F60\u53EF\u4EE5\u4F7F\u7528\u8054\u5408\u7C7B\u578B\u660E\u786E\u7684\u5305\u542B\u5B83\u4EEC\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> s <span class="token operator">=</span> <span class="token string">&quot;foo&quot;</span><span class="token punctuation">;</span>
s <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token comment">// \u9519\u8BEF, &#39;null&#39;\u4E0D\u80FD\u8D4B\u503C\u7ED9&#39;string&#39;</span>
<span class="token keyword">let</span> sn<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token string">&quot;bar&quot;</span><span class="token punctuation">;</span>
sn <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token comment">// \u53EF\u4EE5</span>

sn <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span> <span class="token comment">// error, &#39;undefined&#39;\u4E0D\u80FD\u8D4B\u503C\u7ED9&#39;string | null&#39;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u6CE8\u610F\uFF0C\u6309\u7167JavaScript\u7684\u8BED\u4E49\uFF0CTypeScript\u4F1A\u628A<code>null</code>\u548C<code>undefined</code>\u533A\u522B\u5BF9\u5F85\u3002 <code>string | null</code>\uFF0C<code>string | undefined</code>\u548C<code>string | undefined | null</code>\u662F\u4E0D\u540C\u7684\u7C7B\u578B\u3002</p><h3 id="\u53EF\u9009\u53C2\u6570\u548C\u53EF\u9009\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#\u53EF\u9009\u53C2\u6570\u548C\u53EF\u9009\u5C5E\u6027" aria-hidden="true">#</a> \u53EF\u9009\u53C2\u6570\u548C\u53EF\u9009\u5C5E\u6027</h3><p>\u4F7F\u7528\u4E86<code>--strictNullChecks</code>\uFF0C\u53EF\u9009\u53C2\u6570\u4F1A\u88AB\u81EA\u52A8\u5730\u52A0\u4E0A<code>| undefined</code>:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> y<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> x <span class="token operator">+</span> <span class="token punctuation">(</span>y <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">f</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">f</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">f</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">f</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// error, &#39;null&#39; is not assignable to &#39;number | undefined&#39;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u53EF\u9009\u5C5E\u6027\u4E5F\u4F1A\u6709\u540C\u6837\u7684\u5904\u7406\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name"><span class="token constant">C</span></span> <span class="token punctuation">{</span>
    a<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
    b<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> c <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token constant">C</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
c<span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token number">12</span><span class="token punctuation">;</span>
c<span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span> <span class="token comment">// error, &#39;undefined&#39; is not assignable to &#39;number&#39;</span>
c<span class="token punctuation">.</span>b <span class="token operator">=</span> <span class="token number">13</span><span class="token punctuation">;</span>
c<span class="token punctuation">.</span>b <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span> <span class="token comment">// ok</span>
c<span class="token punctuation">.</span>b <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token comment">// error, &#39;null&#39; is not assignable to &#39;number | undefined&#39;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="\u7C7B\u578B\u5B88\u536B\u548C\u7C7B\u578B\u65AD\u8A00" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u578B\u5B88\u536B\u548C\u7C7B\u578B\u65AD\u8A00" aria-hidden="true">#</a> \u7C7B\u578B\u5B88\u536B\u548C\u7C7B\u578B\u65AD\u8A00</h3><p>\u7531\u4E8E\u53EF\u4EE5\u4E3A<code>null</code>\u7684\u7C7B\u578B\u662F\u901A\u8FC7\u8054\u5408\u7C7B\u578B\u5B9E\u73B0\uFF0C\u90A3\u4E48\u4F60\u9700\u8981\u4F7F\u7528\u7C7B\u578B\u5B88\u536B\u6765\u53BB\u9664<code>null</code>\u3002 \u5E78\u8FD0\u5730\u662F\u8FD9\u4E0E\u5728JavaScript\u91CC\u5199\u7684\u4EE3\u7801\u4E00\u81F4\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span>sn<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>sn <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;default&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> sn<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u8FD9\u91CC\u5F88\u660E\u663E\u5730\u53BB\u9664\u4E86<code>null</code>\uFF0C\u4F60\u4E5F\u53EF\u4EE5\u4F7F\u7528\u77ED\u8DEF\u8FD0\u7B97\u7B26\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span>sn<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> sn <span class="token operator">||</span> <span class="token string">&quot;default&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u5982\u679C\u7F16\u8BD1\u5668\u4E0D\u80FD\u591F\u53BB\u9664<code>null</code>\u6216<code>undefined</code>\uFF0C\u4F60\u53EF\u4EE5\u4F7F\u7528\u7C7B\u578B\u65AD\u8A00\u624B\u52A8\u53BB\u9664\u3002 \u8BED\u6CD5\u662F\u6DFB\u52A0<code>!</code>\u540E\u7F00\uFF1A<code>identifier!</code>\u4ECE<code>identifier</code>\u7684\u7C7B\u578B\u91CC\u53BB\u9664\u4E86<code>null</code>\u548C<code>undefined</code>\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">broken</span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
  <span class="token keyword">function</span> <span class="token function">postfix</span><span class="token punctuation">(</span>epithet<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> name<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;.  the &#39;</span> <span class="token operator">+</span> epithet<span class="token punctuation">;</span> <span class="token comment">// error, &#39;name&#39; is possibly null</span>
  <span class="token punctuation">}</span>
  name <span class="token operator">=</span> name <span class="token operator">||</span> <span class="token string">&quot;Bob&quot;</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token function">postfix</span><span class="token punctuation">(</span><span class="token string">&quot;great&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">fixed</span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
  <span class="token keyword">function</span> <span class="token function">postfix</span><span class="token punctuation">(</span>epithet<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> name<span class="token operator">!</span><span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;.  the &#39;</span> <span class="token operator">+</span> epithet<span class="token punctuation">;</span> <span class="token comment">// ok</span>
  <span class="token punctuation">}</span>
  name <span class="token operator">=</span> name <span class="token operator">||</span> <span class="token string">&quot;Bob&quot;</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token function">postfix</span><span class="token punctuation">(</span><span class="token string">&quot;great&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>\u672C\u4F8B\u4F7F\u7528\u4E86\u5D4C\u5957\u51FD\u6570\uFF0C\u56E0\u4E3A\u7F16\u8BD1\u5668\u65E0\u6CD5\u53BB\u9664\u5D4C\u5957\u51FD\u6570\u7684<code>null</code>\uFF08\u9664\u975E\u662F\u7ACB\u5373\u8C03\u7528\u7684\u51FD\u6570\u8868\u8FBE\u5F0F\uFF09\u3002 \u56E0\u4E3A\u5B83\u65E0\u6CD5\u8DDF\u8E2A\u6240\u6709\u5BF9\u5D4C\u5957\u51FD\u6570\u7684\u8C03\u7528\uFF0C\u5C24\u5176\u662F\u4F60\u5C06\u5185\u5C42\u51FD\u6570\u505A\u4E3A\u5916\u5C42\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u3002 \u5982\u679C\u65E0\u6CD5\u77E5\u9053\u51FD\u6570\u5728\u54EA\u91CC\u88AB\u8C03\u7528\uFF0C\u5C31\u65E0\u6CD5\u77E5\u9053\u8C03\u7528\u65F6<code>name</code>\u7684\u7C7B\u578B\u3002</p><h2 id="\u7C7B\u578B\u522B\u540D" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u578B\u522B\u540D" aria-hidden="true">#</a> \u7C7B\u578B\u522B\u540D</h2><p>\u7C7B\u578B\u522B\u540D\u4F1A\u7ED9\u4E00\u4E2A\u7C7B\u578B\u8D77\u4E2A\u65B0\u540D\u5B57\u3002 \u7C7B\u578B\u522B\u540D\u6709\u65F6\u548C\u63A5\u53E3\u5F88\u50CF\uFF0C\u4F46\u662F\u53EF\u4EE5\u4F5C\u7528\u4E8E\u539F\u59CB\u503C\uFF0C\u8054\u5408\u7C7B\u578B\uFF0C\u5143\u7EC4\u4EE5\u53CA\u5176\u5B83\u4EFB\u4F55\u4F60\u9700\u8981\u624B\u5199\u7684\u7C7B\u578B\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Name</span> <span class="token operator">=</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">NameResolver</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">NameOrResolver</span> <span class="token operator">=</span> Name <span class="token operator">|</span> NameResolver<span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">getName</span><span class="token punctuation">(</span>n<span class="token operator">:</span> NameOrResolver<span class="token punctuation">)</span><span class="token operator">:</span> Name <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> n <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> n<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">n</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u8D77\u522B\u540D\u4E0D\u4F1A\u65B0\u5EFA\u4E00\u4E2A\u7C7B\u578B - \u5B83\u521B\u5EFA\u4E86\u4E00\u4E2A\u65B0_\u540D\u5B57_\u6765\u5F15\u7528\u90A3\u4E2A\u7C7B\u578B\u3002 \u7ED9\u539F\u59CB\u7C7B\u578B\u8D77\u522B\u540D\u901A\u5E38\u6CA1\u4EC0\u4E48\u7528\uFF0C\u5C3D\u7BA1\u53EF\u4EE5\u505A\u4E3A\u6587\u6863\u7684\u4E00\u79CD\u5F62\u5F0F\u4F7F\u7528\u3002</p><p>\u540C\u63A5\u53E3\u4E00\u6837\uFF0C\u7C7B\u578B\u522B\u540D\u4E5F\u53EF\u4EE5\u662F\u6CDB\u578B - \u6211\u4EEC\u53EF\u4EE5\u6DFB\u52A0\u7C7B\u578B\u53C2\u6570\u5E76\u4E14\u5728\u522B\u540D\u58F0\u660E\u7684\u53F3\u4FA7\u4F20\u5165\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Container<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span> value<span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u6211\u4EEC\u4E5F\u53EF\u4EE5\u4F7F\u7528\u7C7B\u578B\u522B\u540D\u6765\u5728\u5C5E\u6027\u91CC\u5F15\u7528\u81EA\u5DF1\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Tree<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>
    left<span class="token operator">:</span> Tree<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
    right<span class="token operator">:</span> Tree<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u4E0E\u4EA4\u53C9\u7C7B\u578B\u4E00\u8D77\u4F7F\u7528\uFF0C\u6211\u4EEC\u53EF\u4EE5\u521B\u5EFA\u51FA\u4E00\u4E9B\u5341\u5206\u7A00\u5947\u53E4\u602A\u7684\u7C7B\u578B\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">LinkedList<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token operator">&amp;</span> <span class="token punctuation">{</span> next<span class="token operator">:</span> LinkedList<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> people<span class="token operator">:</span> LinkedList<span class="token operator">&lt;</span>Person<span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> s <span class="token operator">=</span> people<span class="token punctuation">.</span>name<span class="token punctuation">;</span>
<span class="token keyword">var</span> s <span class="token operator">=</span> people<span class="token punctuation">.</span>next<span class="token punctuation">.</span>name<span class="token punctuation">;</span>
<span class="token keyword">var</span> s <span class="token operator">=</span> people<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next<span class="token punctuation">.</span>name<span class="token punctuation">;</span>
<span class="token keyword">var</span> s <span class="token operator">=</span> people<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next<span class="token punctuation">.</span>name<span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u7136\u800C\uFF0C\u7C7B\u578B\u522B\u540D\u4E0D\u80FD\u51FA\u73B0\u5728\u58F0\u660E\u53F3\u4FA7\u7684\u4EFB\u4F55\u5730\u65B9\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Yikes</span> <span class="token operator">=</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span>Yikes<span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// error</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="\u63A5\u53E3-vs-\u7C7B\u578B\u522B\u540D" tabindex="-1"><a class="header-anchor" href="#\u63A5\u53E3-vs-\u7C7B\u578B\u522B\u540D" aria-hidden="true">#</a> \u63A5\u53E3 vs. \u7C7B\u578B\u522B\u540D</h3><p>\u50CF\u6211\u4EEC\u63D0\u5230\u7684\uFF0C\u7C7B\u578B\u522B\u540D\u53EF\u4EE5\u50CF\u63A5\u53E3\u4E00\u6837\uFF1B\u7136\u800C\uFF0C\u4ECD\u6709\u4E00\u4E9B\u7EC6\u5FAE\u5DEE\u522B\u3002</p><p>\u5176\u4E00\uFF0C\u63A5\u53E3\u521B\u5EFA\u4E86\u4E00\u4E2A\u65B0\u7684\u540D\u5B57\uFF0C\u53EF\u4EE5\u5728\u5176\u5B83\u4EFB\u4F55\u5730\u65B9\u4F7F\u7528\u3002 \u7C7B\u578B\u522B\u540D\u5E76\u4E0D\u521B\u5EFA\u65B0\u540D\u5B57\u2014\u6BD4\u5982\uFF0C\u9519\u8BEF\u4FE1\u606F\u5C31\u4E0D\u4F1A\u4F7F\u7528\u522B\u540D\u3002 \u5728\u4E0B\u9762\u7684\u793A\u4F8B\u4EE3\u7801\u91CC\uFF0C\u5728\u7F16\u8BD1\u5668\u4E2D\u5C06\u9F20\u6807\u60AC\u505C\u5728<code>interfaced</code>\u4E0A\uFF0C\u663E\u793A\u5B83\u8FD4\u56DE\u7684\u662F<code>Interface</code>\uFF0C\u4F46\u60AC\u505C\u5728<code>aliased</code>\u4E0A\u65F6\uFF0C\u663E\u793A\u7684\u5374\u662F\u5BF9\u8C61\u5B57\u9762\u91CF\u7C7B\u578B\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Alias</span> <span class="token operator">=</span> <span class="token punctuation">{</span> num<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span>
<span class="token keyword">interface</span> <span class="token class-name">Interface</span> <span class="token punctuation">{</span>
    num<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token function">aliased</span><span class="token punctuation">(</span>arg<span class="token operator">:</span> Alias<span class="token punctuation">)</span><span class="token operator">:</span> Alias<span class="token punctuation">;</span>
<span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token function">interfaced</span><span class="token punctuation">(</span>arg<span class="token operator">:</span> Interface<span class="token punctuation">)</span><span class="token operator">:</span> Interface<span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u5728\u65E7\u7248\u672C\u7684TypeScript\u91CC\uFF0C\u7C7B\u578B\u522B\u540D\u4E0D\u80FD\u88AB\u7EE7\u627F\u548C\u5B9E\u73B0\uFF08\u5B83\u4EEC\u4E5F\u4E0D\u80FD\u7EE7\u627F\u548C\u5B9E\u73B0\u5176\u5B83\u7C7B\u578B\uFF09\u3002\u4ECETypeScript 2.7\u5F00\u59CB\uFF0C\u7C7B\u578B\u522B\u540D\u53EF\u4EE5\u88AB\u7EE7\u627F\u5E76\u751F\u6210\u65B0\u7684\u4EA4\u53C9\u7C7B\u578B\u3002\u4F8B\u5982\uFF1A<code>type Cat = Animal &amp; { purrs: true }</code>\u3002</p>`,33),j=n("\u56E0\u4E3A"),D={href:"https://en.wikipedia.org/wiki/Open/closed_principle",target:"_blank",rel:"noopener noreferrer"},M=n("\u8F6F\u4EF6\u4E2D\u7684\u5BF9\u8C61\u5E94\u8BE5\u5BF9\u4E8E\u6269\u5C55\u662F\u5F00\u653E\u7684\uFF0C\u4F46\u662F\u5BF9\u4E8E\u4FEE\u6539\u662F\u5C01\u95ED\u7684"),Y=n("\uFF0C\u4F60\u5E94\u8BE5\u5C3D\u91CF\u53BB\u4F7F\u7528\u63A5\u53E3\u4EE3\u66FF\u7C7B\u578B\u522B\u540D\u3002"),X=p(`<p>\u53E6\u4E00\u65B9\u9762\uFF0C\u5982\u679C\u4F60\u65E0\u6CD5\u901A\u8FC7\u63A5\u53E3\u6765\u63CF\u8FF0\u4E00\u4E2A\u7C7B\u578B\u5E76\u4E14\u9700\u8981\u4F7F\u7528\u8054\u5408\u7C7B\u578B\u6216\u5143\u7EC4\u7C7B\u578B\uFF0C\u8FD9\u65F6\u901A\u5E38\u4F1A\u4F7F\u7528\u7C7B\u578B\u522B\u540D\u3002</p><h2 id="\u5B57\u7B26\u4E32\u5B57\u9762\u91CF\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u5B57\u7B26\u4E32\u5B57\u9762\u91CF\u7C7B\u578B" aria-hidden="true">#</a> \u5B57\u7B26\u4E32\u5B57\u9762\u91CF\u7C7B\u578B</h2><p>\u5B57\u7B26\u4E32\u5B57\u9762\u91CF\u7C7B\u578B\u5141\u8BB8\u4F60\u6307\u5B9A\u5B57\u7B26\u4E32\u5FC5\u987B\u7684\u56FA\u5B9A\u503C\u3002 \u5728\u5B9E\u9645\u5E94\u7528\u4E2D\uFF0C\u5B57\u7B26\u4E32\u5B57\u9762\u91CF\u7C7B\u578B\u53EF\u4EE5\u4E0E\u8054\u5408\u7C7B\u578B\uFF0C\u7C7B\u578B\u5B88\u536B\u548C\u7C7B\u578B\u522B\u540D\u5F88\u597D\u7684\u914D\u5408\u3002 \u901A\u8FC7\u7ED3\u5408\u4F7F\u7528\u8FD9\u4E9B\u7279\u6027\uFF0C\u4F60\u53EF\u4EE5\u5B9E\u73B0\u7C7B\u4F3C\u679A\u4E3E\u7C7B\u578B\u7684\u5B57\u7B26\u4E32\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Easing</span> <span class="token operator">=</span> <span class="token string">&quot;ease-in&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;ease-out&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;ease-in-out&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">class</span> <span class="token class-name">UIElement</span> <span class="token punctuation">{</span>
    <span class="token function">animate</span><span class="token punctuation">(</span>dx<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> dy<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> easing<span class="token operator">:</span> Easing<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>easing <span class="token operator">===</span> <span class="token string">&quot;ease-in&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// ...</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>easing <span class="token operator">===</span> <span class="token string">&quot;ease-out&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>easing <span class="token operator">===</span> <span class="token string">&quot;ease-in-out&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// error! should not pass null or undefined.</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> button <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UIElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
button<span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;ease-in&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
button<span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;uneasy&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// error: &quot;uneasy&quot; is not allowed here</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>\u4F60\u53EA\u80FD\u4ECE\u4E09\u79CD\u5141\u8BB8\u7684\u5B57\u7B26\u4E2D\u9009\u62E9\u5176\u4E00\u6765\u505A\u4E3A\u53C2\u6570\u4F20\u9012\uFF0C\u4F20\u5165\u5176\u5B83\u503C\u5219\u4F1A\u4EA7\u751F\u9519\u8BEF\u3002</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Argument of type &#39;&quot;uneasy&quot;&#39; is not assignable to parameter of type &#39;&quot;ease-in&quot; | &quot;ease-out&quot; | &quot;ease-in-out&quot;&#39;
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u5B57\u7B26\u4E32\u5B57\u9762\u91CF\u7C7B\u578B\u8FD8\u53EF\u4EE5\u7528\u4E8E\u533A\u5206\u51FD\u6570\u91CD\u8F7D\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">createElement</span><span class="token punctuation">(</span>tagName<span class="token operator">:</span> <span class="token string">&quot;img&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span> HTMLImageElement<span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">createElement</span><span class="token punctuation">(</span>tagName<span class="token operator">:</span> <span class="token string">&quot;input&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span> HTMLInputElement<span class="token punctuation">;</span>
<span class="token comment">// ... more overloads ...</span>
<span class="token keyword">function</span> <span class="token function">createElement</span><span class="token punctuation">(</span>tagName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> Element <span class="token punctuation">{</span>
    <span class="token comment">// ... code goes here ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="\u6570\u5B57\u5B57\u9762\u91CF\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u6570\u5B57\u5B57\u9762\u91CF\u7C7B\u578B" aria-hidden="true">#</a> \u6570\u5B57\u5B57\u9762\u91CF\u7C7B\u578B</h2><p>TypeScript\u8FD8\u5177\u6709\u6570\u5B57\u5B57\u9762\u91CF\u7C7B\u578B\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">rollDice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">3</span> <span class="token operator">|</span> <span class="token number">4</span> <span class="token operator">|</span> <span class="token number">5</span> <span class="token operator">|</span> <span class="token number">6</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u6211\u4EEC\u5F88\u5C11\u76F4\u63A5\u8FD9\u6837\u4F7F\u7528\uFF0C\u4F46\u5B83\u4EEC\u53EF\u4EE5\u7528\u5728\u7F29\u5C0F\u8303\u56F4\u8C03\u8BD5bug\u7684\u65F6\u5019\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">!==</span> <span class="token number">1</span> <span class="token operator">||</span> x <span class="token operator">!==</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//         ~~~~~~~</span>
        <span class="token comment">// Operator &#39;!==&#39; cannot be applied to types &#39;1&#39; and &#39;2&#39;.</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u6362\u53E5\u8BDD\u8BF4\uFF0C\u5F53<code>x</code>\u4E0E<code>2</code>\u8FDB\u884C\u6BD4\u8F83\u7684\u65F6\u5019\uFF0C\u5B83\u7684\u503C\u5FC5\u987B\u4E3A<code>1</code>\uFF0C\u8FD9\u5C31\u610F\u5473\u7740\u4E0A\u9762\u7684\u6BD4\u8F83\u68C0\u67E5\u662F\u975E\u6CD5\u7684\u3002</p><h2 id="\u679A\u4E3E\u6210\u5458\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u679A\u4E3E\u6210\u5458\u7C7B\u578B" aria-hidden="true">#</a> \u679A\u4E3E\u6210\u5458\u7C7B\u578B</h2>`,15),z=n("\u5982\u6211\u4EEC\u5728"),H=n("\u679A\u4E3E"),V=n("\u4E00\u8282\u91CC\u63D0\u5230\u7684\uFF0C\u5F53\u6BCF\u4E2A\u679A\u4E3E\u6210\u5458\u90FD\u662F\u7528\u5B57\u9762\u91CF\u521D\u59CB\u5316\u7684\u65F6\u5019\u679A\u4E3E\u6210\u5458\u662F\u5177\u6709\u7C7B\u578B\u7684\u3002"),J=p(`<p>\u5728\u6211\u4EEC\u8C08\u53CA\u201C\u5355\u4F8B\u7C7B\u578B\u201D\u7684\u65F6\u5019\uFF0C\u591A\u6570\u662F\u6307\u679A\u4E3E\u6210\u5458\u7C7B\u578B\u548C\u6570\u5B57/\u5B57\u7B26\u4E32\u5B57\u9762\u91CF\u7C7B\u578B\uFF0C\u5C3D\u7BA1\u5927\u591A\u6570\u7528\u6237\u4F1A\u4E92\u6362\u4F7F\u7528\u201C\u5355\u4F8B\u7C7B\u578B\u201D\u548C\u201C\u5B57\u9762\u91CF\u7C7B\u578B\u201D\u3002</p><h2 id="\u53EF\u8FA8\u8BC6\u8054\u5408-discriminated-unions" tabindex="-1"><a class="header-anchor" href="#\u53EF\u8FA8\u8BC6\u8054\u5408-discriminated-unions" aria-hidden="true">#</a> \u53EF\u8FA8\u8BC6\u8054\u5408\uFF08Discriminated Unions\uFF09</h2><p>\u4F60\u53EF\u4EE5\u5408\u5E76\u5355\u4F8B\u7C7B\u578B\uFF0C\u8054\u5408\u7C7B\u578B\uFF0C\u7C7B\u578B\u5B88\u536B\u548C\u7C7B\u578B\u522B\u540D\u6765\u521B\u5EFA\u4E00\u4E2A\u53EB\u505A_\u53EF\u8FA8\u8BC6\u8054\u5408_\u7684\u9AD8\u7EA7\u6A21\u5F0F\uFF0C\u5B83\u4E5F\u79F0\u505A_\u6807\u7B7E\u8054\u5408_\u6216_\u4EE3\u6570\u6570\u636E\u7C7B\u578B_\u3002 \u53EF\u8FA8\u8BC6\u8054\u5408\u5728\u51FD\u6570\u5F0F\u7F16\u7A0B\u91CC\u5F88\u6709\u7528\u5904\u3002 \u4E00\u4E9B\u8BED\u8A00\u4F1A\u81EA\u52A8\u5730\u4E3A\u4F60\u8FA8\u8BC6\u8054\u5408\uFF1B\u800CTypeScript\u5219\u57FA\u4E8E\u5DF2\u6709\u7684JavaScript\u6A21\u5F0F\u3002 \u5B83\u5177\u67093\u4E2A\u8981\u7D20\uFF1A</p><ol><li>\u5177\u6709\u666E\u901A\u7684\u5355\u4F8B\u7C7B\u578B\u5C5E\u6027\u2014<em>\u53EF\u8FA8\u8BC6\u7684\u7279\u5F81</em>\u3002</li><li>\u4E00\u4E2A\u7C7B\u578B\u522B\u540D\u5305\u542B\u4E86\u90A3\u4E9B\u7C7B\u578B\u7684\u8054\u5408\u2014<em>\u8054\u5408</em>\u3002</li><li>\u6B64\u5C5E\u6027\u4E0A\u7684\u7C7B\u578B\u5B88\u536B\u3002</li></ol><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Square</span> <span class="token punctuation">{</span>
    kind<span class="token operator">:</span> <span class="token string">&quot;square&quot;</span><span class="token punctuation">;</span>
    size<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">interface</span> <span class="token class-name">Rectangle</span> <span class="token punctuation">{</span>
    kind<span class="token operator">:</span> <span class="token string">&quot;rectangle&quot;</span><span class="token punctuation">;</span>
    width<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
    height<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">interface</span> <span class="token class-name">Circle</span> <span class="token punctuation">{</span>
    kind<span class="token operator">:</span> <span class="token string">&quot;circle&quot;</span><span class="token punctuation">;</span>
    radius<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u9996\u5148\u6211\u4EEC\u58F0\u660E\u4E86\u5C06\u8981\u8054\u5408\u7684\u63A5\u53E3\u3002 \u6BCF\u4E2A\u63A5\u53E3\u90FD\u6709<code>kind</code>\u5C5E\u6027\u4F46\u6709\u4E0D\u540C\u7684\u5B57\u7B26\u4E32\u5B57\u9762\u91CF\u7C7B\u578B\u3002 <code>kind</code>\u5C5E\u6027\u79F0\u505A_\u53EF\u8FA8\u8BC6\u7684\u7279\u5F81_\u6216_\u6807\u7B7E_\u3002 \u5176\u5B83\u7684\u5C5E\u6027\u5219\u7279\u5B9A\u4E8E\u5404\u4E2A\u63A5\u53E3\u3002 \u6CE8\u610F\uFF0C\u76EE\u524D\u5404\u4E2A\u63A5\u53E3\u95F4\u662F\u6CA1\u6709\u8054\u7CFB\u7684\u3002 \u4E0B\u9762\u6211\u4EEC\u628A\u5B83\u4EEC\u8054\u5408\u5230\u4E00\u8D77\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Shape</span> <span class="token operator">=</span> Square <span class="token operator">|</span> Rectangle <span class="token operator">|</span> Circle<span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u73B0\u5728\u6211\u4EEC\u4F7F\u7528\u53EF\u8FA8\u8BC6\u8054\u5408:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">area</span><span class="token punctuation">(</span>s<span class="token operator">:</span> Shape<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span>kind<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">case</span> <span class="token string">&quot;square&quot;</span><span class="token operator">:</span> <span class="token keyword">return</span> s<span class="token punctuation">.</span>size <span class="token operator">*</span> s<span class="token punctuation">.</span>size<span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token string">&quot;rectangle&quot;</span><span class="token operator">:</span> <span class="token keyword">return</span> s<span class="token punctuation">.</span>height <span class="token operator">*</span> s<span class="token punctuation">.</span>width<span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token string">&quot;circle&quot;</span><span class="token operator">:</span> <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">*</span> s<span class="token punctuation">.</span>radius <span class="token operator">**</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="\u5B8C\u6574\u6027\u68C0\u67E5" tabindex="-1"><a class="header-anchor" href="#\u5B8C\u6574\u6027\u68C0\u67E5" aria-hidden="true">#</a> \u5B8C\u6574\u6027\u68C0\u67E5</h3><p>\u5F53\u6CA1\u6709\u6DB5\u76D6\u6240\u6709\u53EF\u8FA8\u8BC6\u8054\u5408\u7684\u53D8\u5316\u65F6\uFF0C\u6211\u4EEC\u60F3\u8BA9\u7F16\u8BD1\u5668\u53EF\u4EE5\u901A\u77E5\u6211\u4EEC\u3002 \u6BD4\u5982\uFF0C\u5982\u679C\u6211\u4EEC\u6DFB\u52A0\u4E86<code>Triangle</code>\u5230<code>Shape</code>\uFF0C\u6211\u4EEC\u540C\u65F6\u8FD8\u9700\u8981\u66F4\u65B0<code>area</code>:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Shape</span> <span class="token operator">=</span> Square <span class="token operator">|</span> Rectangle <span class="token operator">|</span> Circle <span class="token operator">|</span> Triangle<span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">area</span><span class="token punctuation">(</span>s<span class="token operator">:</span> Shape<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span>kind<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">case</span> <span class="token string">&quot;square&quot;</span><span class="token operator">:</span> <span class="token keyword">return</span> s<span class="token punctuation">.</span>size <span class="token operator">*</span> s<span class="token punctuation">.</span>size<span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token string">&quot;rectangle&quot;</span><span class="token operator">:</span> <span class="token keyword">return</span> s<span class="token punctuation">.</span>height <span class="token operator">*</span> s<span class="token punctuation">.</span>width<span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token string">&quot;circle&quot;</span><span class="token operator">:</span> <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">*</span> s<span class="token punctuation">.</span>radius <span class="token operator">**</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// should error here - we didn&#39;t handle case &quot;triangle&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u6709\u4E24\u79CD\u65B9\u5F0F\u53EF\u4EE5\u5B9E\u73B0\u3002 \u9996\u5148\u662F\u542F\u7528<code>--strictNullChecks</code>\u5E76\u4E14\u6307\u5B9A\u4E00\u4E2A\u8FD4\u56DE\u503C\u7C7B\u578B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">area</span><span class="token punctuation">(</span>s<span class="token operator">:</span> Shape<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span> <span class="token comment">// error: returns number | undefined</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span>kind<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">case</span> <span class="token string">&quot;square&quot;</span><span class="token operator">:</span> <span class="token keyword">return</span> s<span class="token punctuation">.</span>size <span class="token operator">*</span> s<span class="token punctuation">.</span>size<span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token string">&quot;rectangle&quot;</span><span class="token operator">:</span> <span class="token keyword">return</span> s<span class="token punctuation">.</span>height <span class="token operator">*</span> s<span class="token punctuation">.</span>width<span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token string">&quot;circle&quot;</span><span class="token operator">:</span> <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">*</span> s<span class="token punctuation">.</span>radius <span class="token operator">**</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u56E0\u4E3A<code>switch</code>\u6CA1\u6709\u5305\u542B\u6240\u6709\u60C5\u51B5\uFF0C\u6240\u4EE5TypeScript\u8BA4\u4E3A\u8FD9\u4E2A\u51FD\u6570\u6709\u65F6\u5019\u4F1A\u8FD4\u56DE<code>undefined</code>\u3002 \u5982\u679C\u4F60\u660E\u786E\u5730\u6307\u5B9A\u4E86\u8FD4\u56DE\u503C\u7C7B\u578B\u4E3A<code>number</code>\uFF0C\u90A3\u4E48\u4F60\u4F1A\u770B\u5230\u4E00\u4E2A\u9519\u8BEF\uFF0C\u56E0\u4E3A\u5B9E\u9645\u4E0A\u8FD4\u56DE\u503C\u7684\u7C7B\u578B\u4E3A<code>number | undefined</code>\u3002 \u7136\u800C\uFF0C\u8FD9\u79CD\u65B9\u6CD5\u5B58\u5728\u4E9B\u5FAE\u5999\u4E4B\u5904\u4E14<code>--strictNullChecks</code>\u5BF9\u65E7\u4EE3\u7801\u652F\u6301\u4E0D\u597D\u3002</p><p>\u7B2C\u4E8C\u79CD\u65B9\u6CD5\u4F7F\u7528<code>never</code>\u7C7B\u578B\uFF0C\u7F16\u8BD1\u5668\u7528\u5B83\u6765\u8FDB\u884C\u5B8C\u6574\u6027\u68C0\u67E5\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">assertNever</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">never</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">never</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Unexpected object: &quot;</span> <span class="token operator">+</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">area</span><span class="token punctuation">(</span>s<span class="token operator">:</span> Shape<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span>kind<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">case</span> <span class="token string">&quot;square&quot;</span><span class="token operator">:</span> <span class="token keyword">return</span> s<span class="token punctuation">.</span>size <span class="token operator">*</span> s<span class="token punctuation">.</span>size<span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token string">&quot;rectangle&quot;</span><span class="token operator">:</span> <span class="token keyword">return</span> s<span class="token punctuation">.</span>height <span class="token operator">*</span> s<span class="token punctuation">.</span>width<span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token string">&quot;circle&quot;</span><span class="token operator">:</span> <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">*</span> s<span class="token punctuation">.</span>radius <span class="token operator">**</span> <span class="token number">2</span><span class="token punctuation">;</span>
        <span class="token keyword">default</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token function">assertNever</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// error here if there are missing cases</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u8FD9\u91CC\uFF0C<code>assertNever</code>\u68C0\u67E5<code>s</code>\u662F\u5426\u4E3A<code>never</code>\u7C7B\u578B\u2014\u5373\u4E3A\u9664\u53BB\u6240\u6709\u53EF\u80FD\u60C5\u51B5\u540E\u5269\u4E0B\u7684\u7C7B\u578B\u3002 \u5982\u679C\u4F60\u5FD8\u8BB0\u4E86\u67D0\u4E2Acase\uFF0C\u90A3\u4E48<code>s</code>\u5C06\u5177\u6709\u4E00\u4E2A\u771F\u5B9E\u7684\u7C7B\u578B\u5E76\u4E14\u4F60\u4F1A\u5F97\u5230\u4E00\u4E2A\u9519\u8BEF\u3002 \u8FD9\u79CD\u65B9\u5F0F\u9700\u8981\u4F60\u5B9A\u4E49\u4E00\u4E2A\u989D\u5916\u7684\u51FD\u6570\uFF0C\u4F46\u662F\u5728\u4F60\u5FD8\u8BB0\u67D0\u4E2Acase\u7684\u65F6\u5019\u4E5F\u66F4\u52A0\u660E\u663E\u3002</p><h2 id="\u591A\u6001\u7684this\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u591A\u6001\u7684this\u7C7B\u578B" aria-hidden="true">#</a> \u591A\u6001\u7684<code>this</code>\u7C7B\u578B</h2><p>\u591A\u6001\u7684<code>this</code>\u7C7B\u578B\u8868\u793A\u7684\u662F\u67D0\u4E2A\u5305\u542B\u7C7B\u6216\u63A5\u53E3\u7684_\u5B50\u7C7B\u578B_\u3002 \u8FD9\u88AB\u79F0\u505A_F_-bounded\u591A\u6001\u6027\u3002 \u5B83\u80FD\u5F88\u5BB9\u6613\u7684\u8868\u73B0\u8FDE\u8D2F\u63A5\u53E3\u95F4\u7684\u7EE7\u627F\uFF0C\u6BD4\u5982\u3002 \u5728\u8BA1\u7B97\u5668\u7684\u4F8B\u5B50\u91CC\uFF0C\u5728\u6BCF\u4E2A\u64CD\u4F5C\u4E4B\u540E\u90FD\u8FD4\u56DE<code>this</code>\u7C7B\u578B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">BasicCalculator</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword">protected</span> value<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token function">currentValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token function">add</span><span class="token punctuation">(</span>operand<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">this</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">+=</span> operand<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token function">multiply</span><span class="token punctuation">(</span>operand<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">this</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">*=</span> operand<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// ... other operations go here ...</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> v <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BasicCalculator</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">multiply</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">currentValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>\u7531\u4E8E\u8FD9\u4E2A\u7C7B\u4F7F\u7528\u4E86<code>this</code>\u7C7B\u578B\uFF0C\u4F60\u53EF\u4EE5\u7EE7\u627F\u5B83\uFF0C\u65B0\u7684\u7C7B\u53EF\u4EE5\u76F4\u63A5\u4F7F\u7528\u4E4B\u524D\u7684\u65B9\u6CD5\uFF0C\u4E0D\u9700\u8981\u505A\u4EFB\u4F55\u7684\u6539\u53D8\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">ScientificCalculator</span> <span class="token keyword">extends</span> <span class="token class-name">BasicCalculator</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">constructor</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token function">sin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">sin</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// ... other operations go here ...</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> v <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ScientificCalculator</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">multiply</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">sin</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">currentValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>\u5982\u679C\u6CA1\u6709<code>this</code>\u7C7B\u578B\uFF0C<code>ScientificCalculator</code>\u5C31\u4E0D\u80FD\u591F\u5728\u7EE7\u627F<code>BasicCalculator</code>\u7684\u540C\u65F6\u8FD8\u4FDD\u6301\u63A5\u53E3\u7684\u8FDE\u8D2F\u6027\u3002 <code>multiply</code>\u5C06\u4F1A\u8FD4\u56DE<code>BasicCalculator</code>\uFF0C\u5B83\u5E76\u6CA1\u6709<code>sin</code>\u65B9\u6CD5\u3002 \u7136\u800C\uFF0C\u4F7F\u7528<code>this</code>\u7C7B\u578B\uFF0C<code>multiply</code>\u4F1A\u8FD4\u56DE<code>this</code>\uFF0C\u5728\u8FD9\u91CC\u5C31\u662F<code>ScientificCalculator</code>\u3002</p><h2 id="\u7D22\u5F15\u7C7B\u578B-index-types" tabindex="-1"><a class="header-anchor" href="#\u7D22\u5F15\u7C7B\u578B-index-types" aria-hidden="true">#</a> \u7D22\u5F15\u7C7B\u578B\uFF08Index types\uFF09</h2><p>\u4F7F\u7528\u7D22\u5F15\u7C7B\u578B\uFF0C\u7F16\u8BD1\u5668\u5C31\u80FD\u591F\u68C0\u67E5\u4F7F\u7528\u4E86\u52A8\u6001\u5C5E\u6027\u540D\u7684\u4EE3\u7801\u3002 \u4F8B\u5982\uFF0C\u4E00\u4E2A\u5E38\u89C1\u7684JavaScript\u6A21\u5F0F\u662F\u4ECE\u5BF9\u8C61\u4E2D\u9009\u53D6\u5C5E\u6027\u7684\u5B50\u96C6\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">pluck</span><span class="token punctuation">(</span><span class="token parameter">o<span class="token punctuation">,</span> propertyNames</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> propertyNames<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">n</span> <span class="token operator">=&gt;</span> o<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u4E0B\u9762\u662F\u5982\u4F55\u5728TypeScript\u91CC\u4F7F\u7528\u6B64\u51FD\u6570\uFF0C\u901A\u8FC7<strong>\u7D22\u5F15\u7C7B\u578B\u67E5\u8BE2</strong>\u548C<strong>\u7D22\u5F15\u8BBF\u95EE</strong>\u64CD\u4F5C\u7B26\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">pluck</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>o<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> propertyNames<span class="token operator">:</span> <span class="token constant">K</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">K</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> propertyNames<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>n <span class="token operator">=&gt;</span> o<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">Car</span> <span class="token punctuation">{</span>
    manufacturer<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    model<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    year<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> taxi<span class="token operator">:</span> Car <span class="token operator">=</span> <span class="token punctuation">{</span>
    manufacturer<span class="token operator">:</span> <span class="token string">&#39;Toyota&#39;</span><span class="token punctuation">,</span>
    model<span class="token operator">:</span> <span class="token string">&#39;Camry&#39;</span><span class="token punctuation">,</span>
    year<span class="token operator">:</span> <span class="token number">2014</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// Manufacturer and model are both of type string,</span>
<span class="token comment">// so we can pluck them both into a typed string array</span>
<span class="token keyword">let</span> makeAndModel<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">pluck</span><span class="token punctuation">(</span>taxi<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;manufacturer&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;model&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// If we try to pluck model and year, we get an</span>
<span class="token comment">// array of a union type: (string | number)[]</span>
<span class="token keyword">let</span> modelYear <span class="token operator">=</span> <span class="token function">pluck</span><span class="token punctuation">(</span>taxi<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;model&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;year&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>\u7F16\u8BD1\u5668\u4F1A\u68C0\u67E5<code>manufacturer</code>\u548C<code>model</code>\u662F\u5426\u771F\u7684\u662F<code>Car</code>\u4E0A\u7684\u4E00\u4E2A\u5C5E\u6027\u3002 \u672C\u4F8B\u8FD8\u5F15\u5165\u4E86\u51E0\u4E2A\u65B0\u7684\u7C7B\u578B\u64CD\u4F5C\u7B26\u3002 \u9996\u5148\u662F<code>keyof T</code>\uFF0C<strong>\u7D22\u5F15\u7C7B\u578B\u67E5\u8BE2\u64CD\u4F5C\u7B26</strong>\u3002 \u5BF9\u4E8E\u4EFB\u4F55\u7C7B\u578B<code>T</code>\uFF0C<code>keyof T</code>\u7684\u7ED3\u679C\u4E3A<code>T</code>\u4E0A\u5DF2\u77E5\u7684\u516C\u5171\u5C5E\u6027\u540D\u7684\u8054\u5408\u3002 \u4F8B\u5982\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> carProps<span class="token operator">:</span> <span class="token keyword">keyof</span> Car<span class="token punctuation">;</span> <span class="token comment">// the union of (&#39;manufacturer&#39; | &#39;model&#39; | &#39;year&#39;)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><code>keyof Car</code>\u662F\u5B8C\u5168\u53EF\u4EE5\u4E0E<code>&#39;manufacturer&#39; | &#39;model&#39; | &#39;year&#39;</code>\u4E92\u76F8\u66FF\u6362\u7684\u3002 \u4E0D\u540C\u7684\u662F\u5982\u679C\u4F60\u6DFB\u52A0\u4E86\u5176\u5B83\u7684\u5C5E\u6027\u5230<code>Car</code>\uFF0C\u4F8B\u5982<code>ownersAddress: string</code>\uFF0C\u90A3\u4E48<code>keyof Car</code>\u4F1A\u81EA\u52A8\u53D8\u4E3A<code>&#39;manufacturer&#39; | &#39;model&#39; | &#39;year&#39; | &#39;ownersAddress&#39;</code>\u3002 \u4F60\u53EF\u4EE5\u5728\u50CF<code>pluck</code>\u51FD\u6570\u8FD9\u7C7B\u4E0A\u4E0B\u6587\u91CC\u4F7F\u7528<code>keyof</code>\uFF0C\u56E0\u4E3A\u5728\u4F7F\u7528\u4E4B\u524D\u4F60\u5E76\u4E0D\u6E05\u695A\u53EF\u80FD\u51FA\u73B0\u7684\u5C5E\u6027\u540D\u3002 \u4F46\u7F16\u8BD1\u5668\u4F1A\u68C0\u67E5\u4F60\u662F\u5426\u4F20\u5165\u4E86\u6B63\u786E\u7684\u5C5E\u6027\u540D\u7ED9<code>pluck</code>\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// error, &#39;unknown&#39; is not in &#39;manufacturer&#39; | &#39;model&#39; | &#39;year&#39;</span>
<span class="token function">pluck</span><span class="token punctuation">(</span>taxi<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;year&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;unknown&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u7B2C\u4E8C\u4E2A\u64CD\u4F5C\u7B26\u662F<code>T[K]</code>\uFF0C<strong>\u7D22\u5F15\u8BBF\u95EE\u64CD\u4F5C\u7B26</strong>\u3002 \u5728\u8FD9\u91CC\uFF0C\u7C7B\u578B\u8BED\u6CD5\u53CD\u6620\u4E86\u8868\u8FBE\u5F0F\u8BED\u6CD5\u3002 \u8FD9\u610F\u5473\u7740<code>person[&#39;name&#39;]</code>\u5177\u6709\u7C7B\u578B<code>Person[&#39;name&#39;]</code> \u2014 \u5728\u6211\u4EEC\u7684\u4F8B\u5B50\u91CC\u5219\u4E3A<code>string</code>\u7C7B\u578B\u3002 \u7136\u800C\uFF0C\u5C31\u50CF\u7D22\u5F15\u7C7B\u578B\u67E5\u8BE2\u4E00\u6837\uFF0C\u4F60\u53EF\u4EE5\u5728\u666E\u901A\u7684\u4E0A\u4E0B\u6587\u91CC\u4F7F\u7528<code>T[K]</code>\uFF0C\u8FD9\u6B63\u662F\u5B83\u7684\u5F3A\u5927\u6240\u5728\u3002 \u4F60\u53EA\u8981\u786E\u4FDD\u7C7B\u578B\u53D8\u91CF<code>K extends keyof T</code>\u5C31\u53EF\u4EE5\u4E86\u3002 \u4F8B\u5982\u4E0B\u9762<code>getProperty</code>\u51FD\u6570\u7684\u4F8B\u5B50\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">getProperty</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>o<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> propertyName<span class="token operator">:</span> <span class="token constant">K</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">K</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> o<span class="token punctuation">[</span>propertyName<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// o[propertyName] is of type T[K]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><code>getProperty</code>\u91CC\u7684<code>o: T</code>\u548C<code>propertyName: K</code>\uFF0C\u610F\u5473\u7740<code>o[propertyName]: T[K]</code>\u3002 \u5F53\u4F60\u8FD4\u56DE<code>T[K]</code>\u7684\u7ED3\u679C\uFF0C\u7F16\u8BD1\u5668\u4F1A\u5B9E\u4F8B\u5316\u952E\u7684\u771F\u5B9E\u7C7B\u578B\uFF0C\u56E0\u6B64<code>getProperty</code>\u7684\u8FD4\u56DE\u503C\u7C7B\u578B\u4F1A\u968F\u7740\u4F60\u9700\u8981\u7684\u5C5E\u6027\u6539\u53D8\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> name<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token function">getProperty</span><span class="token punctuation">(</span>taxi<span class="token punctuation">,</span> <span class="token string">&#39;manufacturer&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> year<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token function">getProperty</span><span class="token punctuation">(</span>taxi<span class="token punctuation">,</span> <span class="token string">&#39;year&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// error, &#39;unknown&#39; is not in &#39;manufacturer&#39; | &#39;model&#39; | &#39;year&#39;</span>
<span class="token keyword">let</span> <span class="token builtin">unknown</span> <span class="token operator">=</span> <span class="token function">getProperty</span><span class="token punctuation">(</span>taxi<span class="token punctuation">,</span> <span class="token string">&#39;unknown&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="\u7D22\u5F15\u7C7B\u578B\u548C\u5B57\u7B26\u4E32\u7D22\u5F15\u7B7E\u540D" tabindex="-1"><a class="header-anchor" href="#\u7D22\u5F15\u7C7B\u578B\u548C\u5B57\u7B26\u4E32\u7D22\u5F15\u7B7E\u540D" aria-hidden="true">#</a> \u7D22\u5F15\u7C7B\u578B\u548C\u5B57\u7B26\u4E32\u7D22\u5F15\u7B7E\u540D</h3><p><code>keyof</code>\u548C<code>T[K]</code>\u4E0E\u5B57\u7B26\u4E32\u7D22\u5F15\u7B7E\u540D\u8FDB\u884C\u4EA4\u4E92\u3002\u7D22\u5F15\u7B7E\u540D\u7684\u53C2\u6570\u7C7B\u578B\u5FC5\u987B\u4E3A<code>number</code>\u6216<code>string</code>\u3002 \u5982\u679C\u4F60\u6709\u4E00\u4E2A\u5E26\u6709\u5B57\u7B26\u4E32\u7D22\u5F15\u7B7E\u540D\u7684\u7C7B\u578B\uFF0C\u90A3\u4E48<code>keyof T</code>\u4F1A\u662F<code>string | number</code>\u3002 (\u5E76\u975E\u53EA\u6709<code>string</code>\uFF0C\u56E0\u4E3A\u5728JavaScript\u91CC\uFF0C\u4F60\u53EF\u4EE5\u4F7F\u7528\u5B57\u7B26\u4E32<code>object[&#39;42&#39;</code>\u6216 \u6570\u5B57<code>object[42]</code>\u7D22\u5F15\u6765\u8BBF\u95EE\u5BF9\u8C61\u5C5E\u6027)\u3002 \u5E76\u4E14<code>T[string]</code>\u4E3A\u7D22\u5F15\u7B7E\u540D\u7684\u7C7B\u578B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Dictionary<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> keys<span class="token operator">:</span> <span class="token keyword">keyof</span> Dictionary<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// string | number</span>
<span class="token keyword">let</span> value<span class="token operator">:</span> Dictionary<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// number</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u5982\u679C\u4E00\u4E2A\u7C7B\u578B\u5E26\u6709\u6570\u5B57\u7D22\u5F15\u7B7E\u540D\uFF0C\u90A3\u4E48<code>keyof T</code>\u4E3A<code>number</code>\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Dictionary<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span>key<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> keys<span class="token operator">:</span> <span class="token keyword">keyof</span> Dictionary<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// number</span>
<span class="token keyword">let</span> value<span class="token operator">:</span> Dictionary<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// Error, Property &#39;foo&#39; does not exist on type &#39;Dictionary&lt;number&gt;&#39;.</span>
<span class="token keyword">let</span> value<span class="token operator">:</span> Dictionary<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token number">42</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// number</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="\u6620\u5C04\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u6620\u5C04\u7C7B\u578B" aria-hidden="true">#</a> \u6620\u5C04\u7C7B\u578B</h2><p>\u4E00\u4E2A\u5E38\u89C1\u7684\u4EFB\u52A1\u662F\u5C06\u4E00\u4E2A\u5DF2\u77E5\u7684\u7C7B\u578B\u6BCF\u4E2A\u5C5E\u6027\u90FD\u53D8\u4E3A\u53EF\u9009\u7684\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">PersonPartial</span> <span class="token punctuation">{</span>
    name<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    age<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u6216\u8005\u6211\u4EEC\u60F3\u8981\u4E00\u4E2A\u53EA\u8BFB\u7248\u672C\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">PersonReadonly</span> <span class="token punctuation">{</span>
    <span class="token keyword">readonly</span> name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    <span class="token keyword">readonly</span> age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u8FD9\u5728JavaScript\u91CC\u7ECF\u5E38\u51FA\u73B0\uFF0CTypeScript\u63D0\u4F9B\u4E86\u4ECE\u65E7\u7C7B\u578B\u4E2D\u521B\u5EFA\u65B0\u7C7B\u578B\u7684\u4E00\u79CD\u65B9\u5F0F \u2014 <strong>\u6620\u5C04\u7C7B\u578B</strong>\u3002 \u5728\u6620\u5C04\u7C7B\u578B\u91CC\uFF0C\u65B0\u7C7B\u578B\u4EE5\u76F8\u540C\u7684\u5F62\u5F0F\u53BB\u8F6C\u6362\u65E7\u7C7B\u578B\u91CC\u6BCF\u4E2A\u5C5E\u6027\u3002 \u4F8B\u5982\uFF0C\u4F60\u53EF\u4EE5\u4EE4\u6BCF\u4E2A\u5C5E\u6027\u6210\u4E3A<code>readonly</code>\u7C7B\u578B\u6216\u53EF\u9009\u7684\u3002 \u4E0B\u9762\u662F\u4E00\u4E9B\u4F8B\u5B50\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Readonly<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token keyword">readonly</span> <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">Partial<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">?</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u50CF\u4E0B\u9762\u8FD9\u6837\u4F7F\u7528\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">PersonPartial</span> <span class="token operator">=</span> Partial<span class="token operator">&lt;</span>Person<span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">ReadonlyPerson</span> <span class="token operator">=</span> Readonly<span class="token operator">&lt;</span>Person<span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u9700\u8981\u6CE8\u610F\u7684\u662F\u8FD9\u4E2A\u8BED\u6CD5\u63CF\u8FF0\u7684\u662F\u7C7B\u578B\u800C\u975E\u6210\u5458\u3002 \u82E5\u60F3\u6DFB\u52A0\u6210\u5458\uFF0C\u5219\u53EF\u4EE5\u4F7F\u7528\u4EA4\u53C9\u7C7B\u578B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u8FD9\u6837\u4F7F\u7528</span>
<span class="token keyword">type</span> <span class="token class-name">PartialWithNewMember<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">?</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token operator">&amp;</span> <span class="token punctuation">{</span> newMember<span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">}</span>
<span class="token comment">// \u4E0D\u8981\u8FD9\u6837\u4F7F\u7528</span>
<span class="token comment">// \u8FD9\u4F1A\u62A5\u9519\uFF01</span>
<span class="token keyword">type</span> <span class="token class-name">PartialWithNewMember<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">?</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  newMember<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u4E0B\u9762\u6765\u770B\u770B\u6700\u7B80\u5355\u7684\u6620\u5C04\u7C7B\u578B\u548C\u5B83\u7684\u7EC4\u6210\u90E8\u5206\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Keys</span> <span class="token operator">=</span> <span class="token string">&#39;option1&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;option2&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">Flags</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span><span class="token constant">K</span> <span class="token keyword">in</span> Keys<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u5B83\u7684\u8BED\u6CD5\u4E0E\u7D22\u5F15\u7B7E\u540D\u7684\u8BED\u6CD5\u7C7B\u578B\uFF0C\u5185\u90E8\u4F7F\u7528\u4E86<code>for .. in</code>\u3002 \u5177\u6709\u4E09\u4E2A\u90E8\u5206\uFF1A</p><ol><li>\u7C7B\u578B\u53D8\u91CF<code>K</code>\uFF0C\u5B83\u4F1A\u4F9D\u6B21\u7ED1\u5B9A\u5230\u6BCF\u4E2A\u5C5E\u6027\u3002</li><li>\u5B57\u7B26\u4E32\u5B57\u9762\u91CF\u8054\u5408\u7684<code>Keys</code>\uFF0C\u5B83\u5305\u542B\u4E86\u8981\u8FED\u4EE3\u7684\u5C5E\u6027\u540D\u7684\u96C6\u5408\u3002</li><li>\u5C5E\u6027\u7684\u7ED3\u679C\u7C7B\u578B\u3002</li></ol><p>\u5728\u4E2A\u7B80\u5355\u7684\u4F8B\u5B50\u91CC\uFF0C<code>Keys</code>\u662F\u786C\u7F16\u7801\u7684\u5C5E\u6027\u540D\u5217\u8868\u5E76\u4E14\u5C5E\u6027\u7C7B\u578B\u6C38\u8FDC\u662F<code>boolean</code>\uFF0C\u56E0\u6B64\u8FD9\u4E2A\u6620\u5C04\u7C7B\u578B\u7B49\u540C\u4E8E\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Flags</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    option1<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
    option2<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u5728\u771F\u6B63\u7684\u5E94\u7528\u91CC\uFF0C\u53EF\u80FD\u4E0D\u540C\u4E8E\u4E0A\u9762\u7684<code>Readonly</code>\u6216<code>Partial</code>\u3002 \u5B83\u4EEC\u4F1A\u57FA\u4E8E\u4E00\u4E9B\u5DF2\u5B58\u5728\u7684\u7C7B\u578B\uFF0C\u4E14\u6309\u7167\u4E00\u5B9A\u7684\u65B9\u5F0F\u8F6C\u6362\u5B57\u6BB5\u3002 \u8FD9\u5C31\u662F<code>keyof</code>\u548C\u7D22\u5F15\u8BBF\u95EE\u7C7B\u578B\u8981\u505A\u7684\u4E8B\u60C5\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">NullablePerson</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> Person<span class="token punctuation">]</span><span class="token operator">:</span> Person<span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">PartialPerson</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> Person<span class="token punctuation">]</span><span class="token operator">?</span><span class="token operator">:</span> Person<span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u4F46\u5B83\u66F4\u6709\u7528\u7684\u5730\u65B9\u662F\u53EF\u4EE5\u6709\u4E00\u4E9B\u901A\u7528\u7248\u672C\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Nullable<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">Partial<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">?</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>`,63),O=n("\u5728\u8FD9\u4E9B\u4F8B\u5B50\u91CC\uFF0C\u5C5E\u6027\u5217\u8868\u662F"),$=s("code",null,"keyof T",-1),W=n("\u4E14\u7ED3\u679C\u7C7B\u578B\u662F"),G=s("code",null,"T[P]",-1),Q=n("\u7684\u53D8\u4F53\u3002 \u8FD9\u662F\u4F7F\u7528\u901A\u7528\u6620\u5C04\u7C7B\u578B\u7684\u4E00\u4E2A\u597D\u6A21\u7248\u3002 \u56E0\u4E3A\u8FD9\u7C7B\u8F6C\u6362\u662F"),Z={href:"https://en.wikipedia.org/wiki/Homomorphism",target:"_blank",rel:"noopener noreferrer"},nn=n("\u540C\u6001"),sn=n("\u7684\uFF0C\u6620\u5C04\u53EA\u4F5C\u7528\u4E8E"),an=s("code",null,"T",-1),pn=n("\u7684\u5C5E\u6027\u800C\u6CA1\u6709\u5176\u5B83\u7684\u3002 \u7F16\u8BD1\u5668\u77E5\u9053\u5728\u6DFB\u52A0\u4EFB\u4F55\u65B0\u5C5E\u6027\u4E4B\u524D\u53EF\u4EE5\u62F7\u8D1D\u6240\u6709\u5B58\u5728\u7684\u5C5E\u6027\u4FEE\u9970\u7B26\u3002 \u4F8B\u5982\uFF0C\u5047\u8BBE"),tn=s("code",null,"Person.name",-1),en=n("\u662F\u53EA\u8BFB\u7684\uFF0C\u90A3\u4E48"),on=s("code",null,"Partial<Person>.name",-1),cn=n("\u4E5F\u5C06\u662F\u53EA\u8BFB\u7684\u4E14\u4E3A\u53EF\u9009\u7684\u3002"),ln=p(`<p>\u4E0B\u9762\u662F\u53E6\u4E00\u4E2A\u4F8B\u5B50\uFF0C<code>T[P]</code>\u88AB\u5305\u88C5\u5728<code>Proxy&lt;T&gt;</code>\u7C7B\u91CC\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Proxy<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>
    <span class="token function">set</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">Proxify<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">:</span> Proxy<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">proxify</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>o<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> Proxify<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
   <span class="token comment">// ... wrap proxies ...</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> proxyProps <span class="token operator">=</span> <span class="token function">proxify</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u6CE8\u610F<code>Readonly&lt;T&gt;</code>\u548C<code>Partial&lt;T&gt;</code>\u7528\u5904\u4E0D\u5C0F\uFF0C\u56E0\u6B64\u5B83\u4EEC\u4E0E<code>Pick</code>\u548C<code>Record</code>\u4E00\u540C\u88AB\u5305\u542B\u8FDB\u4E86TypeScript\u7684\u6807\u51C6\u5E93\u91CC\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Pick<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token constant">K</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">Record<span class="token operator">&lt;</span><span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token keyword">keyof</span> <span class="token builtin">any</span><span class="token punctuation">,</span> <span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token constant">K</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><code>Readonly</code>\uFF0C<code>Partial</code>\u548C<code>Pick</code>\u662F\u540C\u6001\u7684\uFF0C\u4F46<code>Record</code>\u4E0D\u662F\u3002 \u56E0\u4E3A<code>Record</code>\u5E76\u4E0D\u9700\u8981\u8F93\u5165\u7C7B\u578B\u6765\u62F7\u8D1D\u5C5E\u6027\uFF0C\u6240\u4EE5\u5B83\u4E0D\u5C5E\u4E8E\u540C\u6001\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">ThreeStringProps</span> <span class="token operator">=</span> Record<span class="token operator">&lt;</span><span class="token string">&#39;prop1&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;prop2&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;prop3&#39;</span><span class="token punctuation">,</span> <span class="token builtin">string</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u975E\u540C\u6001\u7C7B\u578B\u672C\u8D28\u4E0A\u4F1A\u521B\u5EFA\u65B0\u7684\u5C5E\u6027\uFF0C\u56E0\u6B64\u5B83\u4EEC\u4E0D\u4F1A\u4ECE\u5B83\u5904\u62F7\u8D1D\u5C5E\u6027\u4FEE\u9970\u7B26\u3002</p><h3 id="\u7531\u6620\u5C04\u7C7B\u578B\u8FDB\u884C\u63A8\u65AD" tabindex="-1"><a class="header-anchor" href="#\u7531\u6620\u5C04\u7C7B\u578B\u8FDB\u884C\u63A8\u65AD" aria-hidden="true">#</a> \u7531\u6620\u5C04\u7C7B\u578B\u8FDB\u884C\u63A8\u65AD</h3><p>\u73B0\u5728\u4F60\u4E86\u89E3\u4E86\u5982\u4F55\u5305\u88C5\u4E00\u4E2A\u7C7B\u578B\u7684\u5C5E\u6027\uFF0C\u90A3\u4E48\u63A5\u4E0B\u6765\u5C31\u662F\u5982\u4F55\u62C6\u5305\u3002 \u5176\u5B9E\u8FD9\u4E5F\u975E\u5E38\u5BB9\u6613\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">unproxify</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>t<span class="token operator">:</span> Proxify<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token keyword">as</span> <span class="token constant">T</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> k <span class="token keyword">in</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        result<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> t<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> originalProps <span class="token operator">=</span> <span class="token function">unproxify</span><span class="token punctuation">(</span>proxyProps<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u6CE8\u610F\u8FD9\u4E2A\u62C6\u5305\u63A8\u65AD\u53EA\u9002\u7528\u4E8E\u540C\u6001\u7684\u6620\u5C04\u7C7B\u578B\u3002 \u5982\u679C\u6620\u5C04\u7C7B\u578B\u4E0D\u662F\u540C\u6001\u7684\uFF0C\u90A3\u4E48\u9700\u8981\u7ED9\u62C6\u5305\u51FD\u6570\u4E00\u4E2A\u660E\u786E\u7684\u7C7B\u578B\u53C2\u6570\u3002</p><h3 id="\u6709\u6761\u4EF6\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u6709\u6761\u4EF6\u7C7B\u578B" aria-hidden="true">#</a> \u6709\u6761\u4EF6\u7C7B\u578B</h3><p>TypeScript 2.8\u5F15\u5165\u4E86_\u6709\u6761\u4EF6\u7C7B\u578B_\uFF0C\u5B83\u80FD\u591F\u8868\u793A\u975E\u7EDF\u4E00\u7684\u7C7B\u578B\u3002 \u6709\u6761\u4EF6\u7684\u7C7B\u578B\u4F1A\u4EE5\u4E00\u4E2A\u6761\u4EF6\u8868\u8FBE\u5F0F\u8FDB\u884C\u7C7B\u578B\u5173\u7CFB\u68C0\u6D4B\uFF0C\u4ECE\u800C\u5728\u4E24\u79CD\u7C7B\u578B\u4E2D\u9009\u62E9\u5176\u4E00\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">U</span></span> <span class="token operator">?</span> <span class="token constant">X</span> <span class="token operator">:</span> <span class="token constant">Y</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u4E0A\u9762\u7684\u7C7B\u578B\u610F\u601D\u662F\uFF0C\u82E5<code>T</code>\u80FD\u591F\u8D4B\u503C\u7ED9<code>U</code>\uFF0C\u90A3\u4E48\u7C7B\u578B\u662F<code>X</code>\uFF0C\u5426\u5219\u4E3A<code>Y</code>\u3002</p><p>\u6709\u6761\u4EF6\u7684\u7C7B\u578B<code>T extends U ? X : Y</code>\u6216\u8005_\u89E3\u6790_\u4E3A<code>X</code>\uFF0C\u6216\u8005_\u89E3\u6790_\u4E3A<code>Y</code>\uFF0C\u518D\u6216\u8005_\u5EF6\u8FDF_\u89E3\u6790\uFF0C\u56E0\u4E3A\u5B83\u53EF\u80FD\u4F9D\u8D56\u4E00\u4E2A\u6216\u591A\u4E2A\u7C7B\u578B\u53D8\u91CF\u3002 \u82E5<code>T</code>\u6216<code>U</code>\u5305\u542B\u7C7B\u578B\u53C2\u6570\uFF0C\u90A3\u4E48\u662F\u5426\u89E3\u6790\u4E3A<code>X</code>\u6216<code>Y</code>\u6216\u63A8\u8FDF\uFF0C\u53D6\u51B3\u4E8E\u7C7B\u578B\u7CFB\u7EDF\u662F\u5426\u6709\u8DB3\u591F\u7684\u4FE1\u606F\u6765\u786E\u5B9A<code>T</code>\u603B\u662F\u53EF\u4EE5\u8D4B\u503C\u7ED9<code>U</code>\u3002</p><p>\u4E0B\u9762\u662F\u4E00\u4E9B\u7C7B\u578B\u53EF\u4EE5\u88AB\u7ACB\u5373\u89E3\u6790\u7684\u4F8B\u5B50\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">f</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token builtin">boolean</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token boolean">true</span></span> <span class="token operator">?</span> <span class="token builtin">string</span> <span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>

<span class="token comment">// Type is &#39;string | number</span>
<span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token function">f</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0.5</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u53E6\u5916\u4E00\u4E2A\u4F8B\u5B50\u6D89\u53CA<code>TypeName</code>\u7C7B\u578B\u522B\u540D\uFF0C\u5B83\u4F7F\u7528\u4E86\u5D4C\u5957\u4E86\u6709\u6761\u4EF6\u7C7B\u578B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">TypeName<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span>
    <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">string</span></span> <span class="token operator">?</span> <span class="token string">&quot;string&quot;</span> <span class="token operator">:</span>
    <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">number</span></span> <span class="token operator">?</span> <span class="token string">&quot;number&quot;</span> <span class="token operator">:</span>
    <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">boolean</span></span> <span class="token operator">?</span> <span class="token string">&quot;boolean&quot;</span> <span class="token operator">:</span>
    <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token keyword">undefined</span></span> <span class="token operator">?</span> <span class="token string">&quot;undefined&quot;</span> <span class="token operator">:</span>
    <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">Function</span></span> <span class="token operator">?</span> <span class="token string">&quot;function&quot;</span> <span class="token operator">:</span>
    <span class="token string">&quot;object&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T0</span></span> <span class="token operator">=</span> TypeName<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// &quot;string&quot;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T1</span></span> <span class="token operator">=</span> TypeName<span class="token operator">&lt;</span><span class="token string">&quot;a&quot;</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// &quot;string&quot;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T2</span></span> <span class="token operator">=</span> TypeName<span class="token operator">&lt;</span><span class="token boolean">true</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// &quot;boolean&quot;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T3</span></span> <span class="token operator">=</span> TypeName<span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// &quot;function&quot;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T4</span></span> <span class="token operator">=</span> TypeName<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// &quot;object&quot;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u4E0B\u9762\u662F\u4E00\u4E2A\u6709\u6761\u4EF6\u7C7B\u578B\u88AB\u63A8\u8FDF\u89E3\u6790\u7684\u4F8B\u5B50:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>
    propA<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
    propB<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">f</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name">Foo</span> <span class="token operator">?</span> <span class="token builtin">string</span> <span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">foo</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">U</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token constant">U</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Has type &#39;U extends Foo ? string : number&#39;</span>
    <span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token function">f</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// This assignment is allowed though!</span>
    <span class="token keyword">let</span> b<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">=</span> a<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>\u8FD9\u91CC\uFF0C<code>a</code>\u53D8\u91CF\u542B\u6709\u672A\u786E\u5B9A\u7684\u6709\u6761\u4EF6\u7C7B\u578B\u3002 \u5F53\u6709\u53E6\u4E00\u6BB5\u4EE3\u7801\u8C03\u7528<code>foo</code>\uFF0C\u5B83\u4F1A\u7528\u5176\u5B83\u7C7B\u578B\u66FF\u6362<code>U</code>\uFF0CTypeScript\u5C06\u91CD\u65B0\u8BA1\u7B97\u6709\u6761\u4EF6\u7C7B\u578B\uFF0C\u51B3\u5B9A\u5B83\u662F\u5426\u53EF\u4EE5\u9009\u62E9\u4E00\u4E2A\u5206\u652F\u3002</p><p>\u4E0E\u6B64\u540C\u65F6\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5C06\u6709\u6761\u4EF6\u7C7B\u578B\u8D4B\u503C\u7ED9\u5176\u5B83\u7C7B\u578B\uFF0C\u53EA\u8981\u6709\u6761\u4EF6\u7C7B\u578B\u7684\u6BCF\u4E2A\u5206\u652F\u90FD\u53EF\u4EE5\u8D4B\u503C\u7ED9\u76EE\u6807\u7C7B\u578B\u3002 \u56E0\u6B64\u5728\u6211\u4EEC\u7684\u4F8B\u5B50\u91CC\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5C06<code>U extends Foo ? string : number</code>\u8D4B\u503C\u7ED9<code>string | number</code>\uFF0C\u56E0\u4E3A\u4E0D\u7BA1\u8FD9\u4E2A\u6709\u6761\u4EF6\u7C7B\u578B\u6700\u7EC8\u7ED3\u679C\u662F\u4EC0\u4E48\uFF0C\u5B83\u53EA\u80FD\u662F<code>string</code>\u6216<code>number</code>\u3002</p><h4 id="\u5206\u5E03\u5F0F\u6709\u6761\u4EF6\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u5206\u5E03\u5F0F\u6709\u6761\u4EF6\u7C7B\u578B" aria-hidden="true">#</a> \u5206\u5E03\u5F0F\u6709\u6761\u4EF6\u7C7B\u578B</h4><p>\u5982\u679C\u6709\u6761\u4EF6\u7C7B\u578B\u91CC\u5F85\u68C0\u67E5\u7684\u7C7B\u578B\u662F<code>naked type parameter</code>\uFF0C\u90A3\u4E48\u5B83\u4E5F\u88AB\u79F0\u4E3A\u201C\u5206\u5E03\u5F0F\u6709\u6761\u4EF6\u7C7B\u578B\u201D\u3002 \u5206\u5E03\u5F0F\u6709\u6761\u4EF6\u7C7B\u578B\u5728\u5B9E\u4F8B\u5316\u65F6\u4F1A\u81EA\u52A8\u5206\u53D1\u6210\u8054\u5408\u7C7B\u578B\u3002 \u4F8B\u5982\uFF0C\u5B9E\u4F8B\u5316<code>T extends U ? X : Y</code>\uFF0C<code>T</code>\u7684\u7C7B\u578B\u4E3A<code>A | B | C</code>\uFF0C\u4F1A\u88AB\u89E3\u6790\u4E3A<code>(A extends U ? X : Y) | (B extends U ? X : Y) | (C extends U ? X : Y)</code>\u3002</p><p><strong>\u4F8B\u5B50</strong></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T10</span></span> <span class="token operator">=</span> TypeName<span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// &quot;string&quot; | &quot;function&quot;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T12</span></span> <span class="token operator">=</span> TypeName<span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// &quot;string&quot; | &quot;object&quot; | &quot;undefined&quot;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T11</span></span> <span class="token operator">=</span> TypeName<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// &quot;object&quot;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u5728<code>T extends U ? X : Y</code>\u7684\u5B9E\u4F8B\u5316\u91CC\uFF0C\u5BF9<code>T</code>\u7684\u5F15\u7528\u88AB\u89E3\u6790\u4E3A\u8054\u5408\u7C7B\u578B\u7684\u4E00\u90E8\u5206\uFF08\u6BD4\u5982\uFF0C<code>T</code>\u6307\u5411\u67D0\u4E00\u5355\u4E2A\u90E8\u5206\uFF0C\u5728\u6709\u6761\u4EF6\u7C7B\u578B\u5206\u5E03\u5230\u8054\u5408\u7C7B\u578B\u4E4B\u540E\uFF09\u3002 \u6B64\u5916\uFF0C\u5728<code>X</code>\u5185\u5BF9<code>T</code>\u7684\u5F15\u7528\u6709\u4E00\u4E2A\u9644\u52A0\u7684\u7C7B\u578B\u53C2\u6570\u7EA6\u675F<code>U</code>\uFF08\u4F8B\u5982\uFF0C<code>T</code>\u88AB\u5F53\u6210\u5728<code>X</code>\u5185\u53EF\u8D4B\u503C\u7ED9<code>U</code>\uFF09\u3002</p><p><strong>\u4F8B\u5B50</strong></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">BoxedValue<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span> value<span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">BoxedArray<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span> array<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">Boxed<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">any</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">?</span> BoxedArray<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token builtin">number</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token operator">:</span> BoxedValue<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T20</span></span> <span class="token operator">=</span> Boxed<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// BoxedValue&lt;string&gt;;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T21</span></span> <span class="token operator">=</span> Boxed<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// BoxedArray&lt;number&gt;;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T22</span></span> <span class="token operator">=</span> Boxed<span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// BoxedValue&lt;string&gt; | BoxedArray&lt;number&gt;;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u6CE8\u610F\u5728<code>Boxed&lt;T&gt;</code>\u7684<code>true</code>\u5206\u652F\u91CC\uFF0C<code>T</code>\u6709\u4E2A\u989D\u5916\u7684\u7EA6\u675F<code>any[]</code>\uFF0C\u56E0\u6B64\u5B83\u9002\u7528\u4E8E<code>T[number]</code>\u6570\u7EC4\u5143\u7D20\u7C7B\u578B\u3002\u540C\u65F6\u4E5F\u6CE8\u610F\u4E00\u4E0B\u6709\u6761\u4EF6\u7C7B\u578B\u662F\u5982\u4F55\u5206\u5E03\u6210\u8054\u5408\u7C7B\u578B\u7684\u3002</p><p>\u6709\u6761\u4EF6\u7C7B\u578B\u7684\u5206\u5E03\u5F0F\u7684\u5C5E\u6027\u53EF\u4EE5\u65B9\u4FBF\u5730\u7528\u6765_\u8FC7\u6EE4_\u8054\u5408\u7C7B\u578B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Diff<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">U</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">U</span></span> <span class="token operator">?</span> <span class="token builtin">never</span> <span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>  <span class="token comment">// Remove types from T that are assignable to U</span>
<span class="token keyword">type</span> <span class="token class-name">Filter<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">U</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">U</span></span> <span class="token operator">?</span> <span class="token constant">T</span> <span class="token operator">:</span> <span class="token builtin">never</span><span class="token punctuation">;</span>  <span class="token comment">// Remove types from T that are not assignable to U</span>

<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T30</span></span> <span class="token operator">=</span> Diff<span class="token operator">&lt;</span><span class="token string">&quot;a&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;b&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;c&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;d&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;a&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;c&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;f&quot;</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// &quot;b&quot; | &quot;d&quot;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T31</span></span> <span class="token operator">=</span> Filter<span class="token operator">&lt;</span><span class="token string">&quot;a&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;b&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;c&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;d&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;a&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;c&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;f&quot;</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// &quot;a&quot; | &quot;c&quot;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T32</span></span> <span class="token operator">=</span> Diff<span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">Function</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// string | number</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T33</span></span> <span class="token operator">=</span> Filter<span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">Function</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// () =&gt; void</span>

<span class="token keyword">type</span> <span class="token class-name">NonNullable<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> Diff<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token keyword">null</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// Remove null and undefined from T</span>

<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T34</span></span> <span class="token operator">=</span> NonNullable<span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// string | number</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T35</span></span> <span class="token operator">=</span> NonNullable<span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// string | string[]</span>

<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">f1</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> y<span class="token operator">:</span> NonNullable<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    x <span class="token operator">=</span> y<span class="token punctuation">;</span>  <span class="token comment">// Ok</span>
    y <span class="token operator">=</span> x<span class="token punctuation">;</span>  <span class="token comment">// Error</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">f2</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> y<span class="token operator">:</span> NonNullable<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    x <span class="token operator">=</span> y<span class="token punctuation">;</span>  <span class="token comment">// Ok</span>
    y <span class="token operator">=</span> x<span class="token punctuation">;</span>  <span class="token comment">// Error</span>
    <span class="token keyword">let</span> s1<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> x<span class="token punctuation">;</span>  <span class="token comment">// Error</span>
    <span class="token keyword">let</span> s2<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> y<span class="token punctuation">;</span>  <span class="token comment">// Ok</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p>\u6709\u6761\u4EF6\u7C7B\u578B\u4E0E\u6620\u5C04\u7C7B\u578B\u7ED3\u5408\u65F6\u7279\u522B\u6709\u7528\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">FunctionPropertyNames<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span><span class="token constant">K</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">K</span><span class="token punctuation">]</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">Function</span></span> <span class="token operator">?</span> <span class="token constant">K</span> <span class="token operator">:</span> <span class="token builtin">never</span> <span class="token punctuation">}</span><span class="token punctuation">[</span><span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">FunctionProperties<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> Pick<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> FunctionPropertyNames<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">NonFunctionPropertyNames<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span><span class="token constant">K</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">K</span><span class="token punctuation">]</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">Function</span></span> <span class="token operator">?</span> <span class="token builtin">never</span> <span class="token operator">:</span> <span class="token constant">K</span> <span class="token punctuation">}</span><span class="token punctuation">[</span><span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">NonFunctionProperties<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> Pick<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> NonFunctionPropertyNames<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">Part</span> <span class="token punctuation">{</span>
    id<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
    name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    subparts<span class="token operator">:</span> Part<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token function">updatePart</span><span class="token punctuation">(</span>newName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T40</span></span> <span class="token operator">=</span> FunctionPropertyNames<span class="token operator">&lt;</span>Part<span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// &quot;updatePart&quot;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T41</span></span> <span class="token operator">=</span> NonFunctionPropertyNames<span class="token operator">&lt;</span>Part<span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// &quot;id&quot; | &quot;name&quot; | &quot;subparts&quot;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T42</span></span> <span class="token operator">=</span> FunctionProperties<span class="token operator">&lt;</span>Part<span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// { updatePart(newName: string): void }</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T43</span></span> <span class="token operator">=</span> NonFunctionProperties<span class="token operator">&lt;</span>Part<span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// { id: number, name: string, subparts: Part[] }</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>\u4E0E\u8054\u5408\u7C7B\u578B\u548C\u4EA4\u53C9\u7C7B\u578B\u76F8\u4F3C\uFF0C\u6709\u6761\u4EF6\u7C7B\u578B\u4E0D\u5141\u8BB8\u9012\u5F52\u5730\u5F15\u7528\u81EA\u5DF1\u3002\u6BD4\u5982\u4E0B\u9762\u7684\u9519\u8BEF\u3002</p><p><strong>\u4F8B\u5B50</strong></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">ElementType<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">any</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">?</span> ElementType<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token builtin">number</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>  <span class="token comment">// Error</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="\u6709\u6761\u4EF6\u7C7B\u578B\u4E2D\u7684\u7C7B\u578B\u63A8\u65AD" tabindex="-1"><a class="header-anchor" href="#\u6709\u6761\u4EF6\u7C7B\u578B\u4E2D\u7684\u7C7B\u578B\u63A8\u65AD" aria-hidden="true">#</a> \u6709\u6761\u4EF6\u7C7B\u578B\u4E2D\u7684\u7C7B\u578B\u63A8\u65AD</h4><p>\u73B0\u5728\u5728\u6709\u6761\u4EF6\u7C7B\u578B\u7684<code>extends</code>\u5B50\u8BED\u53E5\u4E2D\uFF0C\u5141\u8BB8\u51FA\u73B0<code>infer</code>\u58F0\u660E\uFF0C\u5B83\u4F1A\u5F15\u5165\u4E00\u4E2A\u5F85\u63A8\u65AD\u7684\u7C7B\u578B\u53D8\u91CF\u3002 \u8FD9\u4E2A\u63A8\u65AD\u7684\u7C7B\u578B\u53D8\u91CF\u53EF\u4EE5\u5728\u6709\u6761\u4EF6\u7C7B\u578B\u7684true\u5206\u652F\u4E2D\u88AB\u5F15\u7528\u3002 \u5141\u8BB8\u51FA\u73B0\u591A\u4E2A\u540C\u7C7B\u578B\u53D8\u91CF\u7684<code>infer</code>\u3002</p><p>\u4F8B\u5982\uFF0C\u4E0B\u9762\u4EE3\u7801\u4F1A\u63D0\u53D6\u51FD\u6570\u7C7B\u578B\u7684\u8FD4\u56DE\u503C\u7C7B\u578B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">ReturnType<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">infer</span> <span class="token constant">R</span> <span class="token operator">?</span> <span class="token constant">R</span> <span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u6709\u6761\u4EF6\u7C7B\u578B\u53EF\u4EE5\u5D4C\u5957\u6765\u6784\u6210\u4E00\u7CFB\u5217\u7684\u5339\u914D\u6A21\u5F0F\uFF0C\u6309\u987A\u5E8F\u8FDB\u884C\u6C42\u503C\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Unpacked<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span>
    <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">(</span><span class="token keyword">infer</span> <span class="token constant">U</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">?</span> <span class="token constant">U</span> <span class="token operator">:</span>
    <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">infer</span> <span class="token constant">U</span> <span class="token operator">?</span> <span class="token constant">U</span> <span class="token operator">:</span>
    <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">infer</span> <span class="token constant">U</span><span class="token operator">&gt;</span></span> <span class="token operator">?</span> <span class="token constant">U</span> <span class="token operator">:</span>
    <span class="token constant">T</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T0</span></span> <span class="token operator">=</span> Unpacked<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// string</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T1</span></span> <span class="token operator">=</span> Unpacked<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// string</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T2</span></span> <span class="token operator">=</span> Unpacked<span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// string</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T3</span></span> <span class="token operator">=</span> Unpacked<span class="token operator">&lt;</span><span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// string</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T4</span></span> <span class="token operator">=</span> Unpacked<span class="token operator">&lt;</span><span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// Promise&lt;string&gt;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T5</span></span> <span class="token operator">=</span> Unpacked<span class="token operator">&lt;</span>Unpacked<span class="token operator">&lt;</span><span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// string</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u4E0B\u9762\u7684\u4F8B\u5B50\u89E3\u91CA\u4E86\u5728\u534F\u53D8\u4F4D\u7F6E\u4E0A\uFF0C\u540C\u4E00\u4E2A\u7C7B\u578B\u53D8\u91CF\u7684\u591A\u4E2A\u5019\u9009\u7C7B\u578B\u4F1A\u88AB\u63A8\u65AD\u4E3A\u8054\u5408\u7C7B\u578B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Foo<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">{</span> a<span class="token operator">:</span> <span class="token keyword">infer</span> <span class="token constant">U</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token keyword">infer</span> <span class="token constant">U</span> <span class="token punctuation">}</span> <span class="token operator">?</span> <span class="token constant">U</span> <span class="token operator">:</span> <span class="token builtin">never</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T10</span></span> <span class="token operator">=</span> Foo<span class="token operator">&lt;</span><span class="token punctuation">{</span> a<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// string</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T11</span></span> <span class="token operator">=</span> Foo<span class="token operator">&lt;</span><span class="token punctuation">{</span> a<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// string | number</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u76F8\u4F3C\u5730\uFF0C\u5728\u6297\u53D8\u4F4D\u7F6E\u4E0A\uFF0C\u540C\u4E00\u4E2A\u7C7B\u578B\u53D8\u91CF\u7684\u591A\u4E2A\u5019\u9009\u7C7B\u578B\u4F1A\u88AB\u63A8\u65AD\u4E3A\u4EA4\u53C9\u7C7B\u578B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Bar<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">{</span> <span class="token function-variable function">a</span><span class="token operator">:</span> <span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token keyword">infer</span> <span class="token constant">U</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">,</span> <span class="token function-variable function">b</span><span class="token operator">:</span> <span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token keyword">infer</span> <span class="token constant">U</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span> <span class="token punctuation">}</span> <span class="token operator">?</span> <span class="token constant">U</span> <span class="token operator">:</span> <span class="token builtin">never</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T20</span></span> <span class="token operator">=</span> Bar<span class="token operator">&lt;</span><span class="token punctuation">{</span> <span class="token function-variable function">a</span><span class="token operator">:</span> <span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">,</span> <span class="token function-variable function">b</span><span class="token operator">:</span> <span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span> <span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// string</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T21</span></span> <span class="token operator">=</span> Bar<span class="token operator">&lt;</span><span class="token punctuation">{</span> <span class="token function-variable function">a</span><span class="token operator">:</span> <span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">,</span> <span class="token function-variable function">b</span><span class="token operator">:</span> <span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span> <span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// string &amp; number</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u5F53\u63A8\u65AD\u5177\u6709\u591A\u4E2A\u8C03\u7528\u7B7E\u540D\uFF08\u4F8B\u5982\u51FD\u6570\u91CD\u8F7D\u7C7B\u578B\uFF09\u7684\u7C7B\u578B\u65F6\uFF0C\u7528_\u6700\u540E_\u7684\u7B7E\u540D\uFF08\u5927\u6982\u662F\u6700\u81EA\u7531\u7684\u5305\u542B\u6240\u6709\u60C5\u51B5\u7684\u7B7E\u540D\uFF09\u8FDB\u884C\u63A8\u65AD\u3002 \u65E0\u6CD5\u6839\u636E\u53C2\u6570\u7C7B\u578B\u5217\u8868\u6765\u89E3\u6790\u91CD\u8F7D\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T30</span></span> <span class="token operator">=</span> ReturnType<span class="token operator">&lt;</span><span class="token keyword">typeof</span> foo<span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// string | number</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u65E0\u6CD5\u5728\u6B63\u5E38\u7C7B\u578B\u53C2\u6570\u7684\u7EA6\u675F\u5B50\u8BED\u53E5\u4E2D\u4F7F\u7528<code>infer</code>\u58F0\u660E\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">ReturnType<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span></span> <span class="token keyword">infer</span> <span class="token constant">R</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token constant">R</span><span class="token punctuation">;</span>  <span class="token comment">// \u9519\u8BEF\uFF0C\u4E0D\u652F\u6301</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u4F46\u662F\uFF0C\u53EF\u4EE5\u8FD9\u6837\u8FBE\u5230\u540C\u6837\u7684\u6548\u679C\uFF0C\u5728\u7EA6\u675F\u91CC\u5220\u6389\u7C7B\u578B\u53D8\u91CF\uFF0C\u7528\u6709\u6761\u4EF6\u7C7B\u578B\u66FF\u6362\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">AnyFunction</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">ReturnType<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> AnyFunction<span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">infer</span> <span class="token constant">R</span> <span class="token operator">?</span> <span class="token constant">R</span> <span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="\u9884\u5B9A\u4E49\u7684\u6709\u6761\u4EF6\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u9884\u5B9A\u4E49\u7684\u6709\u6761\u4EF6\u7C7B\u578B" aria-hidden="true">#</a> \u9884\u5B9A\u4E49\u7684\u6709\u6761\u4EF6\u7C7B\u578B</h4><p>TypeScript 2.8\u5728<code>lib.d.ts</code>\u91CC\u589E\u52A0\u4E86\u4E00\u4E9B\u9884\u5B9A\u4E49\u7684\u6709\u6761\u4EF6\u7C7B\u578B\uFF1A</p><ul><li><code>Exclude&lt;T, U&gt;</code> -- \u4ECE<code>T</code>\u4E2D\u5254\u9664\u53EF\u4EE5\u8D4B\u503C\u7ED9<code>U</code>\u7684\u7C7B\u578B\u3002</li><li><code>Extract&lt;T, U&gt;</code> -- \u63D0\u53D6<code>T</code>\u4E2D\u53EF\u4EE5\u8D4B\u503C\u7ED9<code>U</code>\u7684\u7C7B\u578B\u3002</li><li><code>NonNullable&lt;T&gt;</code> -- \u4ECE<code>T</code>\u4E2D\u5254\u9664<code>null</code>\u548C<code>undefined</code>\u3002</li><li><code>ReturnType&lt;T&gt;</code> -- \u83B7\u53D6\u51FD\u6570\u8FD4\u56DE\u503C\u7C7B\u578B\u3002</li><li><code>InstanceType&lt;T&gt;</code> -- \u83B7\u53D6\u6784\u9020\u51FD\u6570\u7C7B\u578B\u7684\u5B9E\u4F8B\u7C7B\u578B\u3002</li></ul><p><strong>Example</strong></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T00</span></span> <span class="token operator">=</span> Exclude<span class="token operator">&lt;</span><span class="token string">&quot;a&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;b&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;c&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;d&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;a&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;c&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;f&quot;</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// &quot;b&quot; | &quot;d&quot;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T01</span></span> <span class="token operator">=</span> Extract<span class="token operator">&lt;</span><span class="token string">&quot;a&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;b&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;c&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;d&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;a&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;c&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;f&quot;</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// &quot;a&quot; | &quot;c&quot;</span>

<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T02</span></span> <span class="token operator">=</span> Exclude<span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">Function</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// string | number</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T03</span></span> <span class="token operator">=</span> Extract<span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">Function</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// () =&gt; void</span>

<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T04</span></span> <span class="token operator">=</span> NonNullable<span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// string | number</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T05</span></span> <span class="token operator">=</span> NonNullable<span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// (() =&gt; string) | string[]</span>

<span class="token keyword">function</span> <span class="token function">f1</span><span class="token punctuation">(</span>s<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span> a<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> b<span class="token operator">:</span> s <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name"><span class="token constant">C</span></span> <span class="token punctuation">{</span>
    x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T10</span></span> <span class="token operator">=</span> ReturnType<span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// string</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T11</span></span> <span class="token operator">=</span> ReturnType<span class="token operator">&lt;</span><span class="token punctuation">(</span>s<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// void</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T12</span></span> <span class="token operator">=</span> ReturnType<span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// {}</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T13</span></span> <span class="token operator">=</span> ReturnType<span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">U</span></span><span class="token punctuation">,</span> <span class="token constant">U</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">number</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// number[]</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T14</span></span> <span class="token operator">=</span> ReturnType<span class="token operator">&lt;</span><span class="token keyword">typeof</span> f1<span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// { a: number, b: string }</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T15</span></span> <span class="token operator">=</span> ReturnType<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// any</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T16</span></span> <span class="token operator">=</span> ReturnType<span class="token operator">&lt;</span><span class="token builtin">never</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// never</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T17</span></span> <span class="token operator">=</span> ReturnType<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// Error</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T18</span></span> <span class="token operator">=</span> ReturnType<span class="token operator">&lt;</span><span class="token builtin">Function</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// Error</span>

<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T20</span></span> <span class="token operator">=</span> InstanceType<span class="token operator">&lt;</span><span class="token keyword">typeof</span> <span class="token constant">C</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// C</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T21</span></span> <span class="token operator">=</span> InstanceType<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// any</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T22</span></span> <span class="token operator">=</span> InstanceType<span class="token operator">&lt;</span><span class="token builtin">never</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// never</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T23</span></span> <span class="token operator">=</span> InstanceType<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// Error</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T24</span></span> <span class="token operator">=</span> InstanceType<span class="token operator">&lt;</span><span class="token builtin">Function</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// Error</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div>`,60),rn=n("\u6CE8\u610F\uFF1A"),un=s("code",null,"Exclude",-1),kn=n("\u7C7B\u578B\u662F"),dn={href:"https://github.com/Microsoft/TypeScript/issues/12215#issuecomment-307871458",target:"_blank",rel:"noopener noreferrer"},bn=n("\u5EFA\u8BAE\u7684"),mn=s("code",null,"Diff",-1),yn=n("\u7C7B\u578B\u7684\u4E00\u79CD\u5B9E\u73B0\u3002\u6211\u4EEC\u4F7F\u7528"),gn=s("code",null,"Exclude",-1),wn=n("\u8FD9\u4E2A\u540D\u5B57\u662F\u4E3A\u4E86\u907F\u514D\u7834\u574F\u5DF2\u7ECF\u5B9A\u4E49\u4E86"),fn=s("code",null,"Diff",-1),vn=n("\u7684\u4EE3\u7801\uFF0C\u5E76\u4E14\u6211\u4EEC\u611F\u89C9\u8FD9\u4E2A\u540D\u5B57\u80FD\u66F4\u597D\u5730\u8868\u8FBE\u7C7B\u578B\u7684\u8BED\u4E49\u3002");function hn(Tn,qn){const e=o("RouterLink"),t=o("ExternalLinkIcon");return l(),r(u,null,[d,s("p",null,[b,m,y,g,w,f,v,h,T,a(e,{to:"/reference/basic-types.html"},{default:c(()=>[q]),_:1}),x,_,P,N,S,F,U,R,E,B,C,s("a",K,[I,a(t)]),L]),A,s("p",null,[j,s("a",D,[M,a(t)]),Y]),X,s("p",null,[z,a(e,{to:"/reference/enums.html#union-enums-and-enum-member-types"},{default:c(()=>[H]),_:1}),V]),J,s("p",null,[O,$,W,G,Q,s("a",Z,[nn,a(t)]),sn,an,pn,tn,en,on,cn]),ln,s("blockquote",null,[s("p",null,[rn,un,kn,s("a",dn,[bn,a(t)]),mn,yn,gn,wn,fn,vn])])],64)}var Pn=k(i,[["render",hn]]);export{Pn as default};
