import{r as a,o as p,c as e,a as s,b as t,F as o,e as c,d as l}from"./app.fed89489.js";import{_ as r}from"./plugin-vue_export-helper.21dcd24c.js";const u={},i=c(`<h1 id="typescript-3-4" tabindex="-1"><a class="header-anchor" href="#typescript-3-4" aria-hidden="true">#</a> TypeScript 3.4</h1><h2 id="\u9876\u7EA7-this-\u73B0\u5728\u6709\u7C7B\u578B\u4E86" tabindex="-1"><a class="header-anchor" href="#\u9876\u7EA7-this-\u73B0\u5728\u6709\u7C7B\u578B\u4E86" aria-hidden="true">#</a> \u9876\u7EA7 <code>this</code> \u73B0\u5728\u6709\u7C7B\u578B\u4E86</h2><p>\u9876\u7EA7 <code>this</code> \u7684\u7C7B\u578B\u73B0\u5728\u88AB\u5206\u914D\u4E3A <code>typeof globalThis</code> \u800C\u4E0D\u662F <code>any</code>\u3002</p><p>\u56E0\u6B64, \u5728 <code>noImplicitAny</code> \u4E0B\u8BBF\u95EE <code>this</code> \u4E0A\u7684\u672A\u77E5\u503C\uFF0C\u4F60\u53EF\u80FD\u6536\u5230\u9519\u8BEF\u63D0\u793A\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u5728 \`noImplicitAny\` \u4E0B\uFF0C\u4EE5\u524D\u53EF\u4EE5\uFF0C\u73B0\u5728\u4E0D\u884C</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>whargarbl <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u8BF7\u6CE8\u610F\uFF0C\u5728 <code>noImplicitThis</code> \u4E0B\u7F16\u8BD1\u7684\u4EE3\u7801\u4E0D\u4F1A\u5728\u6B64\u5904\u9047\u5230\u4EFB\u4F55\u66F4\u6539\u3002</p><h2 id="\u6CDB\u578B\u53C2\u6570\u7684\u4F20\u9012" tabindex="-1"><a class="header-anchor" href="#\u6CDB\u578B\u53C2\u6570\u7684\u4F20\u9012" aria-hidden="true">#</a> \u6CDB\u578B\u53C2\u6570\u7684\u4F20\u9012</h2><p>\u5728\u67D0\u4E9B\u60C5\u51B5\u4E0B\uFF0CTypeScript 3.4 \u7684\u63A8\u65AD\u6539\u8FDB\u53EF\u80FD\u4F1A\u4EA7\u751F\u6CDB\u578B\u7684\u51FD\u6570\uFF0C\u800C\u4E0D\u662F\u90A3\u4E9B\u63A5\u6536\u5E76\u8FD4\u56DE\u5176\u7EA6\u675F\u7684\u51FD\u6570\uFF08\u901A\u5E38\u662F <code>{}</code>\uFF09\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">compose</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">U</span><span class="token punctuation">,</span> <span class="token constant">V</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token function-variable function">f</span><span class="token operator">:</span> <span class="token punctuation">(</span>arg<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">U</span><span class="token punctuation">,</span> <span class="token function-variable function">g</span><span class="token operator">:</span> <span class="token punctuation">(</span>arg<span class="token operator">:</span> <span class="token constant">U</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">V</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">(</span>arg<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">V</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">list</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">box</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token punctuation">{</span> value <span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

<span class="token keyword">let</span> f <span class="token operator">=</span> <span class="token function">compose</span><span class="token punctuation">(</span>list<span class="token punctuation">,</span> box<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>

<span class="token comment">// \u5728 TypeScript 3.4 \u4E2D, &#39;x.value&#39; \u7684\u7C7B\u578B\u4E3A</span>
<span class="token comment">//</span>
<span class="token comment">//   number[]</span>
<span class="token comment">//</span>
<span class="token comment">// \u4F46\u662F\u5728\u4E4B\u524D\u7684\u7248\u672C\u4E2D\u7C7B\u578B\u4E3A</span>
<span class="token comment">//</span>
<span class="token comment">//   {}[]</span>
<span class="token comment">//</span>
<span class="token comment">// \u56E0\u6B64\uFF0C\u63D2\u5165\u4E00\u4E2A \`string\` \u7C7B\u578B\u662F\u9519\u8BEF\u7684</span>
x<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p><code>x</code> \u4E0A\u7684\u663E\u5F0F\u7C7B\u578B\u6CE8\u91CA\u53EF\u4EE5\u6E05\u9664\u8FD9\u4E2A\u9519\u8BEF\u3002</p><h3 id="\u4E0A\u4E0B\u6587\u8FD4\u56DE\u7C7B\u578B\u4F5C\u4E3A\u4E0A\u4E0B\u6587\u53C2\u6570\u7C7B\u578B\u4F20\u5165" tabindex="-1"><a class="header-anchor" href="#\u4E0A\u4E0B\u6587\u8FD4\u56DE\u7C7B\u578B\u4F5C\u4E3A\u4E0A\u4E0B\u6587\u53C2\u6570\u7C7B\u578B\u4F20\u5165" aria-hidden="true">#</a> \u4E0A\u4E0B\u6587\u8FD4\u56DE\u7C7B\u578B\u4F5C\u4E3A\u4E0A\u4E0B\u6587\u53C2\u6570\u7C7B\u578B\u4F20\u5165</h3><p>TypeScript \u73B0\u5728\u4F7F\u7528\u51FD\u6570\u8C03\u7528\u65F6\u4F20\u5165\u7684\u7C7B\u578B\uFF08\u5982\u4E0B\u4F8B\u4E2D\u7684 <code>then</code>\uFF09\u4F5C\u4E3A\u51FD\u6570\u4E0A\u4E0B\u6587\u53C2\u6570\u7C7B\u578B\uFF08\u5982\u4E0B\u4F8B\u4E2D\u7684\u7BAD\u5934\u51FD\u6570\uFF09\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">isEven</span><span class="token punctuation">(</span>prom<span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token punctuation">{</span> success<span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">}</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> prom<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">then</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token punctuation">{</span>success<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">}</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> x <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">?</span>
      <span class="token punctuation">{</span> success<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span> <span class="token operator">:</span>
      <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span> success<span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u8FD9\u901A\u5E38\u662F\u4E00\u79CD\u6539\u8FDB\uFF0C\u4F46\u5728\u4E0A\u9762\u7684\u4F8B\u5B50\u4E2D\uFF0C\u5B83\u5BFC\u81F4 <code>true</code> \u548C <code>false</code> \u83B7\u53D6\u4E0D\u5408\u9700\u8981\u7684\u5B57\u9762\u91CF\u7C7B\u578B\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>Argument of <span class="token builtin class-name">type</span> <span class="token string">&#39;(x: number) =&gt; Promise&lt;{ success: false; }&gt; | { success: true; }&#39;</span> is not assignable to parameter of <span class="token builtin class-name">type</span> <span class="token string">&#39;(value: number) =&gt; { success: false; } | PromiseLike&lt;{ success: false; }&gt;&#39;</span><span class="token builtin class-name">.</span>
  Type <span class="token string">&#39;Promise&lt;{ success: false; }&gt; | { success: true; }&#39;</span> is not assignable to <span class="token builtin class-name">type</span> <span class="token string">&#39;{ success: false; } | PromiseLike&lt;{ success: false; }&gt;&#39;</span><span class="token builtin class-name">.</span>
    Type <span class="token string">&#39;{ success: true; }&#39;</span> is not assignable to <span class="token builtin class-name">type</span> <span class="token string">&#39;{ success: false; } | PromiseLike&lt;{ success: false; }&gt;&#39;</span><span class="token builtin class-name">.</span>
      Type <span class="token string">&#39;{ success: true; }&#39;</span> is not assignable to <span class="token builtin class-name">type</span> <span class="token string">&#39;{ success: false; }&#39;</span><span class="token builtin class-name">.</span>
        Types of property <span class="token string">&#39;success&#39;</span> are incompatible.
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u5408\u9002\u7684\u89E3\u51B3\u65B9\u6CD5\u662F\u5C06\u7C7B\u578B\u53C2\u6570\u6DFB\u52A0\u5230\u9002\u5F53\u7684\u8C03\u7528\u2014\u2014\u672C\u4F8B\u4E2D\u7684 <code>then</code> \u65B9\u6CD5\u8C03\u7528\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">isEven</span><span class="token punctuation">(</span>prom<span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token punctuation">{</span> success<span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">}</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">//               vvvvvvvvvvvvvvvvvv</span>
  <span class="token keyword">return</span> prom<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">then</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token punctuation">{</span>success<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">}</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> x <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">?</span>
      <span class="token punctuation">{</span> success<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span> <span class="token operator">:</span>
      <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span> success<span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="\u5728-strictfunctiontypes-\u4E4B\u5916\u4E00\u81F4\u6027\u63A8\u65AD\u4F18\u5148" tabindex="-1"><a class="header-anchor" href="#\u5728-strictfunctiontypes-\u4E4B\u5916\u4E00\u81F4\u6027\u63A8\u65AD\u4F18\u5148" aria-hidden="true">#</a> \u5728 <code>strictFunctionTypes</code> \u4E4B\u5916\u4E00\u81F4\u6027\u63A8\u65AD\u4F18\u5148</h3><p>\u5728 TypeScript 3.3 \u4E2D\uFF0C\u5173\u95ED <code>--strictFunctionTypes</code> \u9009\u9879\u65F6\uFF0C\u5047\u5B9A\u4F7F\u7528 <code>interface</code> \u58F0\u660E\u7684\u6CDB\u578B\u7C7B\u578B\u5728\u5176\u7C7B\u578B\u53C2\u6570\u65B9\u9762\u59CB\u7EC8\u662F\u534F\u53D8\u7684\u3002\u5BF9\u4E8E\u51FD\u6570\u7C7B\u578B\uFF0C\u901A\u5E38\u65E0\u6CD5\u89C2\u5BDF\u5230\u6B64\u884C\u4E3A\u3002</p><p>\u4F46\u662F\uFF0C\u5BF9\u4E8E\u5E26\u6709 <code>keyof</code> \u72B6\u6001\u7684\u7C7B\u578B\u53C2\u6570\u7684\u6CDB\u578B <code>interface</code> \u7C7B\u578B\u2014\u2014\u9006\u53D8\u7528\u6CD5\u2014\u2014\u8FD9\u4E9B\u7C7B\u578B\u8868\u73B0\u4E0D\u6B63\u786E\u3002</p><p>\u5728 TypeScript 3.4 \u4E2D\uFF0C\u73B0\u5728\u53EF\u4EE5\u5728\u6240\u6709\u60C5\u51B5\u4E0B\u6B63\u786E\u63A2\u6D4B\u4F7F\u7528 <code>interface</code> \u58F0\u660E\u7684\u7C7B\u578B\u7684\u53D8\u52A8\u3002</p><p>\u8FD9\u5BFC\u81F4\u4E00\u4E2A\u53EF\u89C1\u7684\u91CD\u5927\u53D8\u66F4\uFF0C\u53EA\u8981\u6709\u7C7B\u578B\u53C2\u6570\u7684\u63A5\u53E3\u4F7F\u7528\u4E86 <code>keyof</code>\uFF08\u5305\u62EC\u8BF8\u5982 <code>Record&lt;K, T&gt;</code> \u4E4B\u7C7B\u7684\u5730\u65B9\uFF0C\u8FD9\u662F\u6D89\u53CA <code>keyof K</code> \u7684\u7C7B\u578B\u522B\u540D\uFF09\u3002\u4E0B\u4F8B\u5C31\u662F\u8FD9\u6837\u4E00\u4E2A\u53EF\u80FD\u7684\u53D8\u66F4\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">HasX</span> <span class="token punctuation">{</span> x<span class="token operator">:</span> <span class="token builtin">any</span> <span class="token punctuation">}</span>
<span class="token keyword">interface</span> <span class="token class-name">HasY</span> <span class="token punctuation">{</span> y<span class="token operator">:</span> <span class="token builtin">any</span> <span class="token punctuation">}</span>

<span class="token keyword">declare</span> <span class="token keyword">const</span> source<span class="token operator">:</span> HasX <span class="token operator">|</span> HasY<span class="token punctuation">;</span>
<span class="token keyword">declare</span> <span class="token keyword">const</span> properties<span class="token operator">:</span> KeyContainer<span class="token operator">&lt;</span>HasX<span class="token operator">&gt;</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">KeyContainer<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  key<span class="token operator">:</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">readKey</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>source<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> prop<span class="token operator">:</span> KeyContainer<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>source<span class="token punctuation">[</span>prop<span class="token punctuation">.</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u8FD9\u4E2A\u8C03\u7528\u5E94\u8BE5\u88AB\u62D2\u7EDD\uFF0C\u56E0\u4E3A\u6211\u4EEC\u53EF\u80FD\u4F1A\u8FD9\u6837\u505A</span>
<span class="token comment">// \u9519\u8BEF\u5730\u4ECE &#39;HasY&#39; \u4E2D\u8BFB\u53D6 &#39;x&#39;\u3002\u5B83\u73B0\u5728\u6070\u5F53\u7684\u63D0\u793A\u9519\u8BEF\u3002</span>
<span class="token function">readKey</span><span class="token punctuation">(</span>source<span class="token punctuation">,</span> properties<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>\u6B64\u9519\u8BEF\u5F88\u53EF\u80FD\u8868\u660E\u539F\u4EE3\u7801\u5B58\u5728\u95EE\u9898\u3002</p><h2 id="\u53C2\u8003" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003" aria-hidden="true">#</a> \u53C2\u8003</h2>`,25),k={href:"https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#typescript-34",target:"_blank",rel:"noopener noreferrer"},b=l("\u539F\u6587");function m(d,g){const n=a("ExternalLinkIcon");return p(),e(o,null,[i,s("ul",null,[s("li",null,[s("a",k,[b,t(n)])])])],64)}var h=r(u,[["render",m]]);export{h as default};
