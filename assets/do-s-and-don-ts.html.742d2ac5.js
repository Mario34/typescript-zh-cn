import{r as e,o as l,c as r,a as n,b as a,w as t,F as i,e as o,d as s}from"./app.fed89489.js";import{_ as u}from"./plugin-vue_export-helper.21dcd24c.js";const k={},d=o(`<h1 id="\u6700\u4F73\u5B9E\u8DF5" tabindex="-1"><a class="header-anchor" href="#\u6700\u4F73\u5B9E\u8DF5" aria-hidden="true">#</a> \u6700\u4F73\u5B9E\u8DF5</h1><h2 id="\u5E38\u89C4\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u5E38\u89C4\u7C7B\u578B" aria-hidden="true">#</a> \u5E38\u89C4\u7C7B\u578B</h2><h3 id="number-string-boolean-symbol\u548Cobject" tabindex="-1"><a class="header-anchor" href="#number-string-boolean-symbol\u548Cobject" aria-hidden="true">#</a> <code>Number</code>\uFF0C<code>String</code>\uFF0C<code>Boolean</code>\uFF0C<code>Symbol</code>\u548C<code>Object</code></h3><p><em>\u4E0D\u8981</em>\u4F7F\u7528\u4EE5\u4E0B\u7C7B\u578B<code>Number</code>\uFF0C<code>String</code>\uFF0C<code>Boolean</code>\uFF0C<code>Symbol</code>\u6216<code>Object</code>\u3002 \u8FD9\u4E9B\u7C7B\u578B\u8868\u793A\u662F\u975E\u539F\u59CB\u7684\u5C01\u7BB1\u540E\u7684\u5BF9\u8C61\u7C7B\u578B\uFF0C\u5B83\u4EEC\u51E0\u4E4E\u6CA1\u6709\u5728 JavaScript \u4EE3\u7801\u91CC\u88AB\u6B63\u786E\u5730\u4F7F\u7528\u8FC7\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">/* \u9519\u8BEF */</span>
<span class="token keyword">function</span> <span class="token function">reverse</span><span class="token punctuation">(</span>s<span class="token operator">:</span> String<span class="token punctuation">)</span><span class="token operator">:</span> String<span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><em>\u5E94\u8BE5</em>\u4F7F\u7528<code>number</code>\uFF0C<code>string</code>\uFF0C<code>boolean</code>\u548C<code>symbol</code>\u7C7B\u578B\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">/* \u6B63\u786E */</span>
<span class="token keyword">function</span> <span class="token function">reverse</span><span class="token punctuation">(</span>s<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>`,7),b=s("\u4F7F\u7528\u975E\u539F\u59CB\u7684"),m=n("code",null,"object",-1),f=s("\u7C7B\u578B\u6765\u4EE3\u66FF"),y=n("code",null,"Object",-1),h=s("\u7C7B\u578B\uFF08"),v=s("\u5728 TypeScript 2.2 \u4E2D\u65B0\u589E"),g=s("\uFF09"),w=n("h3",{id:"\u6CDB\u578B",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u6CDB\u578B","aria-hidden":"true"},"#"),s(" \u6CDB\u578B")],-1),x=n("em",null,"\u4E0D\u8981",-1),_=s("\u5B9A\u4E49\u6CA1\u6709\u4F7F\u7528\u8FC7\u7C7B\u578B\u53C2\u6570\u7684\u6CDB\u578B\u7C7B\u578B\u3002 \u66F4\u591A\u8BE6\u60C5\u8BF7\u53C2\u8003\uFF1A"),S={href:"https://github.com/Microsoft/TypeScript/wiki/FAQ#why-doesnt-type-inference-work-on-this-interface-interface-foot---",target:"_blank",rel:"noopener noreferrer"},E=s("TypeScript FAQ page"),T=s("\u3002"),O=n("h3",{id:"any",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#any","aria-hidden":"true"},"#"),s(" any")],-1),M=n("p",null,[s("\u8BF7\u5C3D\u91CF\u4E0D\u8981\u4F7F\u7528"),n("code",null,"any"),s("\u7C7B\u578B\uFF0C\u9664\u975E\u4F60\u6B63\u5728\u5C06 JavaScript \u4EE3\u7801\u8FC1\u79FB\u5230 TypeScript \u4EE3\u7801\u3002 \u7F16\u8BD1\u5668\u5B9E\u9645\u4E0A\u4F1A\u5C06"),n("code",null,"any"),s("\u89C6\u4F5C\u201C\u5BF9\u5176\u5173\u95ED\u7C7B\u578B\u68C0\u67E5\u201D\u3002 \u4F7F\u7528\u5B83\u4E0E\u5728\u6BCF\u4E2A\u53D8\u91CF\u524D\u4F7F\u7528"),n("code",null,"@ts-ignore"),s("\u6CE8\u91CA\u662F\u4E00\u6837\u7684\u3002 \u5B83\u53EA\u5728\u9996\u6B21\u5C06 JavaScript \u5DE5\u7A0B\u8FC1\u79FB\u5230 TypeScript \u5DE5\u7A0B\u65F6\u6709\u7528\uFF0C\u56E0\u4E3A\u4F60\u53EF\u4EE5\u628A\u8FD8\u6CA1\u6709\u8FC1\u79FB\u5B8C\u7684\u5B9E\u4F53\u6807\u8BB0\u4E3A"),n("code",null,"any"),s("\u7C7B\u578B\uFF0C\u4F46\u5728\u5B8C\u6574\u7684 TypeScript \u5DE5\u7A0B\u4E2D\uFF0C\u8FD9\u6837\u505A\u5C31\u4F1A\u7981\u7528\u6389\u7C7B\u578B\u68C0\u67E5\u3002")],-1),L=s("\u5982\u679C\u4F60\u4E0D\u6E05\u695A\u8981\u63A5\u6536\u4EC0\u4E48\u7C7B\u578B\u7684\u6570\u636E\uFF0C\u6216\u8005\u4F60\u5E0C\u671B\u63A5\u6536\u4EFB\u610F\u7C7B\u578B\u5E76\u76F4\u63A5\u5411\u4E0B\u4F20\u9012\u800C\u4E0D\u4F7F\u7528\u5B83\uFF0C\u90A3\u4E48\u5C31\u53EF\u4EE5\u4F7F\u7528"),j=n("code",null,"unknown",-1),B=s("\u7C7B\u578B\u3002"),F=o(`<h2 id="\u56DE\u8C03\u51FD\u6570\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u56DE\u8C03\u51FD\u6570\u7C7B\u578B" aria-hidden="true">#</a> \u56DE\u8C03\u51FD\u6570\u7C7B\u578B</h2><h3 id="\u56DE\u8C03\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u56DE\u8C03\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u7C7B\u578B" aria-hidden="true">#</a> \u56DE\u8C03\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u7C7B\u578B</h3><p><em>\u4E0D\u8981</em>\u4E3A\u8FD4\u56DE\u503C\u4F1A\u88AB\u5FFD\u7565\u7684\u56DE\u8C03\u51FD\u6570\u8BBE\u7F6E\u8FD4\u56DE\u503C\u7C7B\u578B<code>any</code>\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">/* \u9519\u8BEF */</span>
<span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token function-variable function">x</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">x</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><em>\u5E94\u8BE5</em>\u4E3A\u8FD4\u56DE\u503C\u4F1A\u88AB\u5FFD\u7565\u7684\u56DE\u8C03\u51FD\u6570\u8BBE\u7F6E\u8FD4\u56DE\u503C\u7C7B\u578B<code>void</code>\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">/* \u6B63\u786E */</span>
<span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token function-variable function">x</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">x</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><em>\u539F\u56E0</em>\uFF1A\u4F7F\u7528<code>void</code>\u76F8\u5BF9\u5B89\u5168\uFF0C\u56E0\u4E3A\u5B83\u80FD\u9632\u6B62\u4E0D\u5C0F\u5FC3\u4F7F\u7528\u4E86\u672A\u7ECF\u68C0\u67E5\u7684<code>x</code>\u7684\u8FD4\u56DE\u503C\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token function-variable function">x</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> k <span class="token operator">=</span> <span class="token function">x</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// oops! meant to do something else</span>
    k<span class="token punctuation">.</span><span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// error, but would be OK if the return type had been &#39;any&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="\u56DE\u8C03\u51FD\u6570\u91CC\u7684\u53EF\u9009\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#\u56DE\u8C03\u51FD\u6570\u91CC\u7684\u53EF\u9009\u53C2\u6570" aria-hidden="true">#</a> \u56DE\u8C03\u51FD\u6570\u91CC\u7684\u53EF\u9009\u53C2\u6570</h3><p><em>\u4E0D\u8981</em>\u5728\u56DE\u8C03\u51FD\u6570\u91CC\u4F7F\u7528\u53EF\u9009\u53C2\u6570\uFF0C\u9664\u975E\u8FD9\u662F\u4F60\u60F3\u8981\u7684\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">/* \u9519\u8BEF */</span>
<span class="token keyword">interface</span> <span class="token class-name">Fetcher</span> <span class="token punctuation">{</span>
    <span class="token function">getObject</span><span class="token punctuation">(</span><span class="token function-variable function">done</span><span class="token operator">:</span> <span class="token punctuation">(</span>data<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> elapsedTime<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u8FD9\u91CC\u6709\u5177\u4F53\u7684\u610F\u4E49\uFF1A<code>done</code>\u56DE\u8C03\u51FD\u6570\u53EF\u4EE5\u7528 1 \u4E2A\u53C2\u6570\u6216 2 \u4E2A\u53C2\u6570\u8C03\u7528\u3002 \u4EE3\u7801\u7684\u5927\u610F\u662F\u8BF4\u8BE5\u56DE\u8C03\u51FD\u6570\u4E0D\u5173\u6CE8\u662F\u5426\u6709<code>elapsedTime</code>\u53C2\u6570\uFF0C \u4F46\u662F\u4E0D\u9700\u8981\u628A\u8FD9\u4E2A\u53C2\u6570\u5B9A\u4E49\u4E3A\u53EF\u9009\u53C2\u6570\u6765\u8FBE\u5230\u6B64\u76EE\u7684 -- \u56E0\u4E3A\u603B\u662F\u5141\u8BB8\u63D0\u4F9B\u4E00\u4E2A\u63A5\u6536\u8F83\u5C11\u53C2\u6570\u7684\u56DE\u8C03\u51FD\u6570\u3002</p><p><em>\u5E94\u8BE5</em>\u5C06\u56DE\u8C03\u51FD\u6570\u5B9A\u4E49\u4E3A\u65E0\u53EF\u9009\u53C2\u6570\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">/* \u6B63\u786E */</span>
<span class="token keyword">interface</span> <span class="token class-name">Fetcher</span> <span class="token punctuation">{</span>
    <span class="token function">getObject</span><span class="token punctuation">(</span><span class="token function-variable function">done</span><span class="token operator">:</span> <span class="token punctuation">(</span>data<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> elapsedTime<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="\u91CD\u8F7D\u4E0E\u56DE\u8C03\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u91CD\u8F7D\u4E0E\u56DE\u8C03\u51FD\u6570" aria-hidden="true">#</a> \u91CD\u8F7D\u4E0E\u56DE\u8C03\u51FD\u6570</h3><p><em>\u4E0D\u8981</em>\u56E0\u56DE\u8C03\u51FD\u6570\u7684\u53C2\u6570\u6570\u91CF\u4E0D\u540C\u800C\u7F16\u5199\u4E0D\u540C\u7684\u91CD\u8F7D\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">/* WRONG */</span>
<span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token function">beforeAll</span><span class="token punctuation">(</span><span class="token function-variable function">action</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">,</span> timeout<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token function">beforeAll</span><span class="token punctuation">(</span>
    <span class="token function-variable function">action</span><span class="token operator">:</span> <span class="token punctuation">(</span>done<span class="token operator">:</span> DoneFn<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">,</span>
    timeout<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><em>\u5E94\u8BE5</em>\u53EA\u4E3A\u6700\u5927\u6570\u91CF\u53C2\u6570\u7684\u60C5\u51B5\u7F16\u5199\u4E00\u4E2A\u91CD\u8F7D\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">/* \u6B63\u786E */</span>
<span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token function">beforeAll</span><span class="token punctuation">(</span>
    <span class="token function-variable function">action</span><span class="token operator">:</span> <span class="token punctuation">(</span>done<span class="token operator">:</span> DoneFn<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">,</span>
    timeout<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><em>\u539F\u56E0</em>\uFF1A\u56DE\u8C03\u51FD\u6570\u603B\u662F\u5141\u8BB8\u5FFD\u7565\u67D0\u4E2A\u53C2\u6570\u7684\uFF0C\u56E0\u6B64\u6CA1\u5FC5\u8981\u4E3A\u7F3A\u5C11\u53EF\u9009\u53C2\u6570\u7684\u60C5\u51B5\u7F16\u5199\u91CD\u8F7D\u3002 \u4E3A\u7F3A\u5C11\u53EF\u9009\u53C2\u6570\u7684\u60C5\u51B5\u63D0\u4F9B\u91CD\u8F7D\u53EF\u80FD\u4F1A\u5BFC\u81F4\u7C7B\u578B\u9519\u8BEF\u7684\u56DE\u8C03\u51FD\u6570\u88AB\u4F20\u5165\uFF0C\u56E0\u4E3A\u5B83\u4F1A\u5339\u914D\u5230\u7B2C\u4E00\u4E2A\u91CD\u8F7D\u3002</p><h2 id="\u51FD\u6570\u91CD\u8F7D" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u91CD\u8F7D" aria-hidden="true">#</a> \u51FD\u6570\u91CD\u8F7D</h2><h3 id="\u987A\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u987A\u5E8F" aria-hidden="true">#</a> \u987A\u5E8F</h3><p><em>\u4E0D\u8981</em>\u628A\u6A21\u7CCA\u7684\u91CD\u8F7D\u653E\u5728\u5177\u4F53\u7684\u91CD\u8F7D\u524D\u9762\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">/* \u9519\u8BEF */</span>
<span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
<span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span>x<span class="token operator">:</span> HTMLElement<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span>x<span class="token operator">:</span> HTMLDivElement<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> myElem<span class="token operator">:</span> HTMLDivElement<span class="token punctuation">;</span>
<span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token function">fn</span><span class="token punctuation">(</span>myElem<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// x: any, wat?</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><em>\u5E94\u8BE5</em>\u5C06\u91CD\u8F7D\u6392\u5E8F\uFF0C\u628A\u5177\u4F53\u7684\u6392\u5728\u6A21\u7CCA\u7684\u4E4B\u524D\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">/* \u6B63\u786E */</span>
<span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span>x<span class="token operator">:</span> HTMLDivElement<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span>x<span class="token operator">:</span> HTMLElement<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> myElem<span class="token operator">:</span> HTMLDivElement<span class="token punctuation">;</span>
<span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token function">fn</span><span class="token punctuation">(</span>myElem<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// x: string, :)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><em>\u539F\u56E0</em>\uFF1A\u5F53\u89E3\u6790\u51FD\u6570\u8C03\u7528\u7684\u65F6\u5019\uFF0CTypeScript \u4F1A\u9009\u62E9<em>\u5339\u914D\u5230\u7684\u7B2C\u4E00\u4E2A\u91CD\u8F7D</em>\u3002 \u5F53\u4F4D\u4E8E\u524D\u9762\u7684\u91CD\u8F7D\u6BD4\u540E\u9762\u7684\u201C\u66F4\u6A21\u7CCA\u201D\uFF0C\u90A3\u4E48\u540E\u9762\u7684\u4F1A\u88AB\u9690\u85CF\u4E14\u4E0D\u4F1A\u88AB\u9009\u7528\u3002</p><h3 id="\u4F7F\u7528\u53EF\u9009\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528\u53EF\u9009\u53C2\u6570" aria-hidden="true">#</a> \u4F7F\u7528\u53EF\u9009\u53C2\u6570</h3><p><em>\u4E0D\u8981</em>\u56E0\u4E3A\u53EA\u6709\u672B\u5C3E\u53C2\u6570\u4E0D\u540C\u800C\u7F16\u5199\u4E0D\u540C\u7684\u91CD\u8F7D\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">/* WRONG */</span>
<span class="token keyword">interface</span> <span class="token class-name">Example</span> <span class="token punctuation">{</span>
    <span class="token function">diff</span><span class="token punctuation">(</span>one<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
    <span class="token function">diff</span><span class="token punctuation">(</span>one<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> two<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
    <span class="token function">diff</span><span class="token punctuation">(</span>one<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> two<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> three<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><em>\u5E94\u8BE5</em>\u5C3D\u53EF\u80FD\u4F7F\u7528\u53EF\u9009\u53C2\u6570\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">/* OK */</span>
<span class="token keyword">interface</span> <span class="token class-name">Example</span> <span class="token punctuation">{</span>
    <span class="token function">diff</span><span class="token punctuation">(</span>one<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> two<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> three<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u6CE8\u610F\uFF0C\u8FD9\u53EA\u5728\u8FD4\u56DE\u503C\u7C7B\u578B\u76F8\u540C\u7684\u60C5\u51B5\u662F\u6CA1\u95EE\u9898\u7684\u3002</p><p><em>\u539F\u56E0</em>\uFF1A\u6709\u4EE5\u4E0B\u4E24\u4E2A\u91CD\u8981\u539F\u56E0\u3002</p><p>TypeScript \u89E3\u6790\u7B7E\u540D\u517C\u5BB9\u6027\u65F6\u4F1A\u67E5\u770B\u662F\u5426\u67D0\u4E2A\u76EE\u6807\u7B7E\u540D\u80FD\u591F\u4F7F\u7528\u539F\u53C2\u6570\u8C03\u7528\uFF0C <em>\u4E14\u5141\u8BB8\u989D\u5916\u7684\u53C2\u6570</em>\u3002 \u4E0B\u9762\u7684\u4EE3\u7801\u4EC5\u5728\u7B7E\u540D\u88AB\u6B63\u786E\u5730\u4F7F\u7528\u53EF\u9009\u53C2\u6570\u5B9A\u4E49\u65F6\u624D\u4F1A\u66B4\u9732\u51FA\u4E00\u4E2A bug\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token function-variable function">x</span><span class="token operator">:</span> <span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> c<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">var</span> x<span class="token operator">:</span> Example<span class="token punctuation">;</span>
<span class="token comment">// When written with overloads, OK -- used first overload</span>
<span class="token comment">// When written with optionals, correctly an error</span>
<span class="token function">fn</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>diff<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u7B2C\u4E8C\u4E2A\u539F\u56E0\u662F\u5F53\u4F7F\u7528\u4E86 TypeScript \u201C\u4E25\u683C\u68C0\u67E5 null\u201D \u7684\u7279\u6027\u65F6\u3002 \u56E0\u4E3A\u672A\u6307\u5B9A\u7684\u53C2\u6570\u5728 JavaScript \u91CC\u8868\u793A\u4E3A<code>undefined</code>\uFF0C\u901A\u5E38\u660E\u786E\u5730\u4E3A\u53EF\u9009\u53C2\u6570\u4F20\u5165\u4E00\u4E2A<code>undefined</code>\u4E0D\u4F1A\u6709\u95EE\u9898\u3002 \u8FD9\u6BB5\u4EE3\u7801\u5728\u4E25\u683C <code>null</code> \u6A21\u5F0F\u4E0B\u53EF\u4EE5\u5DE5\u4F5C\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">var</span> x<span class="token operator">:</span> Example<span class="token punctuation">;</span>
<span class="token comment">// When written with overloads, incorrectly an error because of passing &#39;undefined&#39; to &#39;string&#39;</span>
<span class="token comment">// When written with optionals, correctly OK</span>
x<span class="token punctuation">.</span><span class="token function">diff</span><span class="token punctuation">(</span><span class="token string">&quot;something&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span> <span class="token operator">?</span> <span class="token keyword">undefined</span> <span class="token operator">:</span> <span class="token string">&quot;hour&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="\u4F7F\u7528\u8054\u5408\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528\u8054\u5408\u7C7B\u578B" aria-hidden="true">#</a> \u4F7F\u7528\u8054\u5408\u7C7B\u578B</h3><p><em>\u4E0D\u8981</em>\u4EC5\u56E0\u67D0\u4E2A\u7279\u5B9A\u4F4D\u7F6E\u4E0A\u7684\u53C2\u6570\u7C7B\u578B\u4E0D\u540C\u800C\u5B9A\u4E49\u91CD\u8F7D\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">/* \u9519\u8BEF */</span>
<span class="token keyword">interface</span> <span class="token class-name">Moment</span> <span class="token punctuation">{</span>
  <span class="token function">utcOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  <span class="token function">utcOffset</span><span class="token punctuation">(</span>b<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> Moment<span class="token punctuation">;</span>
  <span class="token function">utcOffset</span><span class="token punctuation">(</span>b<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> Moment<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><em>\u5E94\u8BE5</em>\u5C3D\u53EF\u80FD\u5730\u4F7F\u7528\u8054\u5408\u7C7B\u578B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">/* \u6B63\u786E */</span>
<span class="token keyword">interface</span> <span class="token class-name">Moment</span> <span class="token punctuation">{</span>
  <span class="token function">utcOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  <span class="token function">utcOffset</span><span class="token punctuation">(</span>b<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> Moment<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u6CE8\u610F\uFF0C\u6211\u4EEC\u6CA1\u6709\u8BA9<code>b</code>\u6210\u4E3A\u53EF\u9009\u7684\uFF0C\u56E0\u4E3A\u7B7E\u540D\u7684\u8FD4\u56DE\u503C\u7C7B\u578B\u4E0D\u540C\u3002</p><p><em>\u539F\u56E0</em>\uFF1A\u8FD9\u5BF9\u4E8E\u90A3\u4E9B\u4E3A\u8BE5\u51FD\u6570\u4F20\u5165\u4E86\u503C\u7684\u4F7F\u7528\u8005\u6765\u8BF4\u5F88\u91CD\u8981\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// When written with separate overloads, incorrectly an error</span>
  <span class="token comment">// When written with union types, correctly OK</span>
  <span class="token keyword">return</span> <span class="token function">moment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">utcOffset</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>`,46);function N(W,D){const p=e("RouterLink"),c=e("ExternalLinkIcon");return l(),r(i,null,[d,n("p",null,[b,m,f,y,h,a(p,{to:"/release-notes/typeScript-2.2.html#object%E7%B1%BB%E5%9E%8B"},{default:t(()=>[v]),_:1}),g]),w,n("p",null,[x,_,n("a",S,[E,a(c)]),T]),O,M,n("p",null,[L,a(p,{to:"/handbook/basic-types.html#unknown"},{default:t(()=>[j]),_:1}),B]),F],64)}var K=u(k,[["render",N]]);export{K as default};
