import{r as t,o,c,a as s,b as p,F as l,d as n,e}from"./app.fed89489.js";import{_ as r}from"./plugin-vue_export-helper.21dcd24c.js";const u={},i=s("h1",{id:"typescript-3-7",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#typescript-3-7","aria-hidden":"true"},"#"),n(" TypeScript 3.7")],-1),k=s("h2",{id:"\u53EF\u9009\u94FE-optional-chaining",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#\u53EF\u9009\u94FE-optional-chaining","aria-hidden":"true"},"#"),n(" \u53EF\u9009\u94FE\uFF08Optional Chaining\uFF09")],-1),d={href:"http://www.typescriptlang.org/play/#example/optional-chaining",target:"_blank",rel:"noopener noreferrer"},b=n("Playground"),m=n("\u5728\u6211\u4EEC\u7684 issue \u5217\u8868\u4E0A\uFF0C\u53EF\u9009\u94FE\u662F "),y={href:"https://github.com/microsoft/TypeScript/issues/16",target:"_blank",rel:"noopener noreferrer"},g=n("issue #16"),h=n("\u3002\u611F\u53D7\u4E00\u4E0B\uFF0C\u4ECE\u90A3\u4E4B\u540E TypeScript \u7684 issue \u5217\u8868\u4E2D\u65B0\u589E\u4E86 23,000 \u6761 issues\u3002"),f=e(`<p>\u53EF\u9009\u94FE\u7684\u6838\u5FC3\u662F\uFF0C\u5728\u6211\u4EEC\u7F16\u5199\u4EE3\u7801\u4E2D\uFF0C\u5F53\u9047\u5230 <code>null</code> \u6216 <code>undefined</code>\uFF0CTypeScript \u53EF\u4EE5\u7ACB\u5373\u505C\u6B62\u89E3\u6790\u4E00\u90E8\u5206\u8868\u8FBE\u5F0F\u3002 \u53EF\u9009\u94FE\u7684\u5173\u952E\u70B9\u662F\u4E00\u4E2A\u4E3A <em>\u53EF\u9009\u5C5E\u6027\u8BBF\u95EE</em> \u63D0\u4F9B\u7684\u65B0\u7684\u8FD0\u7B97\u7B26 <code>?.</code>\u3002 \u6BD4\u5982\u6211\u4EEC\u53EF\u4EE5\u8FD9\u6837\u5199\u4EE3\u7801\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> x <span class="token operator">=</span> foo<span class="token operator">?.</span>bar<span class="token punctuation">.</span><span class="token function">baz</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u610F\u601D\u662F\uFF0C\u5F53 <code>foo</code> \u6709\u5B9A\u4E49\u65F6\uFF0C\u6267\u884C <code>foo.bar.baz()</code> \u7684\u8BA1\u7B97\uFF1B\u4F46\u662F\u5F53 <code>foo</code> \u662F <code>null</code> \u6216 <code>undefined</code> \u65F6\uFF0C\u505C\u6B62\u540E\u7EED\u7684\u89E3\u6790\uFF0C\u76F4\u63A5\u8FD4\u56DE <code>undefined</code>\u3002</p><p>\u66F4\u660E\u786E\u5730\u8BF4\uFF0C\u4E0A\u9762\u7684\u4EE3\u7801\u548C\u4E0B\u9762\u7684\u4EE3\u7801\u7B49\u4EF7\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token punctuation">(</span>foo <span class="token operator">===</span> <span class="token keyword">null</span> <span class="token operator">||</span> foo <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token operator">?</span>
    <span class="token keyword">undefined</span> <span class="token operator">:</span>
    foo<span class="token punctuation">.</span>bar<span class="token punctuation">.</span><span class="token function">baz</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u6CE8\u610F\uFF0C\u5F53 <code>bar</code> \u662F <code>null</code> \u6216 <code>undefined</code>\uFF0C\u6211\u4EEC\u7684\u4EE3\u7801\u8BBF\u95EE <code>baz</code> \u4F9D\u7136\u4F1A\u62A5\u9519\u3002 \u540C\u7406\uFF0C\u5F53 <code>baz</code> \u662F <code>null</code> \u6216 <code>undefined</code>\uFF0C\u5728\u8C03\u7528\u65F6\u4E5F\u4F1A\u62A5\u9519\u3002 <code>?.</code> \u53EA\u68C0\u67E5\u5B83 <em>\u5DE6\u8FB9</em> \u7684\u503C\u662F\u4E0D\u662F <code>null</code> \u6216 <code>undefined</code>\uFF0C\u4E0D\u68C0\u67E5\u540E\u7EED\u7684\u5C5E\u6027\u3002</p><p>\u4F60\u4F1A\u53D1\u73B0\u81EA\u5DF1\u53EF\u4EE5\u4F7F\u7528 <code>?.</code> \u6765\u66FF\u6362\u7528\u4E86 <code>&amp;&amp;</code> \u7684\u5927\u91CF\u7A7A\u503C\u68C0\u67E5\u4EE3\u7801\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u4EE5\u524D</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>foo <span class="token operator">&amp;&amp;</span> foo<span class="token punctuation">.</span>bar <span class="token operator">&amp;&amp;</span> foo<span class="token punctuation">.</span>bar<span class="token punctuation">.</span>baz<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u4EE5\u540E</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>foo<span class="token operator">?.</span>bar<span class="token operator">?.</span>baz<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u6CE8\u610F\uFF0C<code>?.</code> \u4E0E <code>&amp;&amp;</code> \u7684\u884C\u4E3A\u7565\u6709\u4E0D\u540C\uFF0C\u56E0\u4E3A <code>&amp;&amp;</code> \u4F1A\u4F5C\u7528\u5728\u6240\u6709\u201C\u5047\u201D\u503C\u4E0A\uFF08\u4F8B\u5982\uFF0C\u7A7A\u5B57\u7B26\u4E32\u3001<code>0</code>\u3001<code>NaN</code> \u4EE5\u53CA <code>false</code>\uFF09\uFF0C\u4F46 <code>?.</code> \u662F\u4E00\u4E2A\u4EC5\u4F5C\u7528\u4E8E\u7ED3\u6784\u4E0A\u7684\u7279\u6027\u3002 \u5B83\u4E0D\u4F1A\u5728\u6709\u6548\u6570\u636E\uFF08\u6BD4\u5982 <code>0</code> \u6216\u7A7A\u5B57\u7B26\u4E32\uFF09\u4E0A\u8FDB\u884C\u77ED\u8DEF\u8BA1\u7B97\u3002</p><p>\u53EF\u9009\u94FE\u8FD8\u5305\u62EC\u4E24\u4E2A\u53E6\u5916\u7684\u7528\u6CD5\u3002 \u9996\u5148\u662F <em>\u53EF\u9009\u5143\u7D20\u8BBF\u95EE</em>\uFF0C\u8868\u73B0\u7C7B\u4F3C\u4E8E\u53EF\u9009\u5C5E\u6027\u8BBF\u95EE\uFF0C\u4F46\u662F\u4E5F\u5141\u8BB8\u6211\u4EEC\u8BBF\u95EE\u975E\u6807\u8BC6\u7B26\u5C5E\u6027\uFF08\u4F8B\u5982\uFF1A\u4EFB\u610F\u5B57\u7B26\u4E32\u3001\u6570\u5B57\u548C symbol\uFF09\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * \u5982\u679C arr \u662F\u4E00\u4E2A\u6570\u7EC4\uFF0C\u8FD4\u56DE\u7B2C\u4E00\u4E2A\u5143\u7D20
 * \u5426\u5219\u8FD4\u56DE undefined
 */</span>
<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">tryGetFirstElement</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>arr<span class="token operator">?</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> arr<span class="token operator">?.</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token comment">// \u7B49\u4EF7\u4E8E\uFF1A</span>
    <span class="token comment">//   return (arr === null || arr === undefined) ?</span>
    <span class="token comment">//       undefined :</span>
    <span class="token comment">//       arr[0];</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u53E6\u4E00\u4E2A\u662F <em>\u53EF\u9009\u8C03\u7528</em>\uFF0C\u5224\u65AD\u6761\u4EF6\u662F\u5F53\u8BE5\u8868\u8FBE\u5F0F\u4E0D\u662F <code>null</code> \u6216 <code>undefined</code>\uFF0C\u6211\u4EEC\u5C31\u53EF\u4EE5\u8C03\u7528\u5B83\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">makeRequest</span><span class="token punctuation">(</span>url<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> log<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>msg<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    log<span class="token operator">?.</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Request started at </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toISOString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u57FA\u672C\u7B49\u4EF7\u4E8E\uFF1A</span>
    <span class="token comment">//   if (log != null) {</span>
    <span class="token comment">//       log(\`Request started at \${new Date().toISOString()}\`);</span>
    <span class="token comment">//   }</span>

    <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    log<span class="token operator">?.</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Request finished at at </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toISOString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u53EF\u9009\u94FE\u7684\u201C\u77ED\u8DEF\u8BA1\u7B97\u201D\u884C\u4E3A\u4EC5\u9650\u4E8E\u5C5E\u6027\u8BBF\u95EE\u3001\u8C03\u7528\u3001\u5143\u7D20\u8BBF\u95EE\u2014\u2014\u5B83\u4E0D\u4F1A\u5EF6\u4F38\u5230\u540E\u7EED\u7684\u8868\u8FBE\u5F0F\u4E2D\u3002 \u4E5F\u5C31\u662F\u8BF4\uFF0C</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> result <span class="token operator">=</span> foo<span class="token operator">?.</span>bar <span class="token operator">/</span> <span class="token function">someComputation</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u53EF\u9009\u94FE\u4E0D\u4F1A\u963B\u6B62\u9664\u6CD5\u8FD0\u7B97\u6216 <code>someComputation()</code> \u7684\u8FDB\u884C\u3002 \u4E0A\u9762\u8FD9\u6BB5\u4EE3\u7801\u5B9E\u9645\u4E0A\u7B49\u4EF7\u4E8E\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> temp <span class="token operator">=</span> <span class="token punctuation">(</span>foo <span class="token operator">===</span> <span class="token keyword">null</span> <span class="token operator">||</span> foo <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token operator">?</span>
    <span class="token keyword">undefined</span> <span class="token operator">:</span>
    foo<span class="token punctuation">.</span>bar<span class="token punctuation">;</span>

<span class="token keyword">let</span> result <span class="token operator">=</span> temp <span class="token operator">/</span> <span class="token function">someComputation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u5F53\u7136\uFF0C\u8FD9\u53EF\u80FD\u4F1A\u4F7F\u5F97 <code>undefined</code> \u53C2\u4E0E\u4E86\u9664\u6CD5\u8FD0\u7B97\uFF0C\u5BFC\u81F4\u5728 <code>strictNullChecks</code> \u7F16\u8BD1\u9009\u9879\u4E0B\u4EA7\u751F\u62A5\u9519\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">barPercentage</span><span class="token punctuation">(</span>foo<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">{</span> bar<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> foo<span class="token operator">?.</span>bar <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">;</span>
    <span class="token comment">//     ~~~~~~~~</span>
    <span class="token comment">// Error: Object is possibly undefined.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,19),_=n("\u60F3\u4E86\u89E3\u66F4\u591A\u7EC6\u8282\uFF0C\u4F60\u53EF\u4EE5 "),w={href:"https://github.com/tc39/proposal-optional-chaining/",target:"_blank",rel:"noopener noreferrer"},v=n("\u68C0\u9605\u5B8C\u6574\u7684\u8349\u6848"),S=n(" \u4EE5\u53CA "),x={href:"https://github.com/microsoft/TypeScript/pull/33294",target:"_blank",rel:"noopener noreferrer"},T=n("\u67E5\u770B\u539F\u59CB\u7684 PR"),q=n("\u3002"),A=s("h2",{id:"\u7A7A\u503C\u5408\u5E76-nullish-coalescing",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#\u7A7A\u503C\u5408\u5E76-nullish-coalescing","aria-hidden":"true"},"#"),n(" \u7A7A\u503C\u5408\u5E76\uFF08Nullish Coalescing\uFF09")],-1),D={href:"http://www.typescriptlang.org/play/#example/nullish-coalescing",target:"_blank",rel:"noopener noreferrer"},J=n("Playground"),O=e(`<p><em>\u7A7A\u503C\u5408\u5E76\u8FD0\u7B97\u7B26</em> \u662F\u53E6\u4E00\u4E2A\u5373\u5C06\u5230\u6765\u7684 ECMAScript \u7279\u6027\uFF08\u4E0E\u53EF\u9009\u94FE\u4E00\u8D77\uFF09\uFF0C\u6211\u4EEC\u7684\u56E2\u961F\u4E5F\u53C2\u4E0E\u4E86 TC39 \u7684\u7684\u8BA8\u8BBA\u5DE5\u4F5C\u3002</p><p>\u4F60\u53EF\u4EE5\u8003\u8651\u4F7F\u7528 <code>??</code> \u8FD0\u7B97\u7B26\u6765\u5B9E\u73B0\uFF1A\u5F53\u5B57\u6BB5\u662F <code>null</code> \u6216 <code>undefined</code> \u65F6\uFF0C\u201C\u56DE\u9000\u201D\u5230\u9ED8\u8BA4\u503C\u3002 \u6BD4\u5982\u6211\u4EEC\u53EF\u4EE5\u8FD9\u6837\u5199\u4EE3\u7801\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> x <span class="token operator">=</span> foo <span class="token operator">??</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u8FD9\u79CD\u65B0\u65B9\u5F0F\u7684\u610F\u601D\u662F\uFF0C\u5F53 <code>foo</code> \u201C\u5B58\u5728\u201D\u65F6 x \u7B49\u4E8E foo\uFF1B \u4F46\u5047\u5982 <code>foo</code> \u662F <code>null</code> \u6216 <code>undefined</code> \uFF0Cx \u7B49\u4E8E <code>bar()</code> \u7684\u8BA1\u7B97\u7ED3\u679C\u3002</p><p>\u540C\u6837\u7684\uFF0C\u4E0A\u9762\u7684\u4EE3\u7801\u53EF\u4EE5\u5199\u51FA\u7B49\u4EF7\u4EE3\u7801\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token punctuation">(</span>foo <span class="token operator">!==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> foo <span class="token operator">!==</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token operator">?</span>
    foo <span class="token operator">:</span>
    <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>`,6),C=n("\u5F53\u5C1D\u8BD5\u4F7F\u7528\u9ED8\u8BA4\u503C\u65F6\uFF0C"),N=s("code",null,"??",-1),j=n(" \u8FD0\u7B97\u7B26\u53EF\u4EE5\u4EE3\u66FF "),F=s("code",null,"||",-1),P=n(" \u7684\u4F5C\u7528\u3002 \u4F8B\u5982\uFF0C\u4E0B\u9762\u7684\u4EE3\u7801\u7247\u6BB5\u5C1D\u8BD5\u83B7\u53D6\u4E0A\u4E00\u6B21\u50A8\u5B58\u5728 "),E={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Window/localStorage",target:"_blank",rel:"noopener noreferrer"},U=s("code",null,"localStorage",-1),V=n(" \u4E2D\u7684 volume\uFF08\u5982\u679C\u5B83\u5DF2\u4FDD\u5B58\uFF09; \u4F46\u662F\u56E0\u4E3A\u4F7F\u7528\u4E86 "),I=s("code",null,"||",-1),R=n(" \uFF0C\u7559\u4E0B\u4E00\u4E2A bug\u3002"),z=e(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">initializeAudio</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> volume <span class="token operator">=</span> localStorage<span class="token punctuation">.</span>volume <span class="token operator">||</span> <span class="token number">0.5</span>

    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u5982\u679C <code>localStorage.volume</code> \u7684\u503C\u662F <code>0</code>\uFF0C\u8FD9\u6BB5\u4EE3\u7801\u5C06\u4F1A\u628A volume \u7684\u503C\u8BBE\u7F6E\u4E3A <code>0.5</code>\uFF0C\u8FD9\u662F\u4E00\u4E2A\u610F\u5916\u60C5\u51B5\u3002 \u800C <code>??</code> \u907F\u514D\u4E86\u5C06 <code>0</code>\u3001<code>NaN</code> \u548C <code>&quot;&quot;</code> \u89C6\u4E3A\u5047\u503C\u7684\u610F\u5916\u60C5\u51B5\u3002</p>`,2),W=n("\u6211\u4EEC\u975E\u5E38\u611F\u8C22\u793E\u533A\u6210\u5458 "),B={href:"https://github.com/Kingwl",target:"_blank",rel:"noopener noreferrer"},H=n("Wenlu Wang"),L=n(" \u548C "),M={href:"https://github.com/dragomirtitian",target:"_blank",rel:"noopener noreferrer"},$=n("Titian Cernicova Dragomir"),K=n(" \u5B9E\u73B0\u4E86\u8FD9\u4E2A\u7279\u6027\uFF01 \u60F3\u4E86\u89E3\u66F4\u591A\u7EC6\u8282\uFF0C\u4F60\u53EF\u4EE5 "),Q={href:"https://github.com/microsoft/TypeScript/pull/32883",target:"_blank",rel:"noopener noreferrer"},G=n("\u67E5\u770B\u4ED6\u4EEC\u7684 PR"),X=n(" \u548C "),Y={href:"https://github.com/tc39/proposal-nullish-coalescing/",target:"_blank",rel:"noopener noreferrer"},Z=n("\u7A7A\u503C\u5408\u5E76\u8349\u6848\u7684 Repo"),nn=n("\u3002"),sn=s("h2",{id:"\u65AD\u8A00\u51FD\u6570",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#\u65AD\u8A00\u51FD\u6570","aria-hidden":"true"},"#"),n(" \u65AD\u8A00\u51FD\u6570")],-1),an={href:"http://www.typescriptlang.org/play/#example/assertion-functions",target:"_blank",rel:"noopener noreferrer"},pn=n("Playground"),en=e(`<p>\u6709\u4E00\u7C7B\u7279\u5B9A\u7684\u51FD\u6570\uFF0C\u7528\u4E8E\u5728\u51FA\u73B0\u975E\u9884\u671F\u7ED3\u679C\u65F6\u629B\u51FA\u4E00\u4E2A\u9519\u8BEF\u3002 \u8FD9\u6837\u7684\u51FD\u6570\u53EB\u505A\u201C\u65AD\u8A00\u201D\u51FD\u6570\uFF08Assertion Function\uFF09\u3002 \u6BD4\u65B9\u8BF4\uFF0CNode.js \u4E2D\u5C31\u6709\u4E00\u4E2A\u540D\u4E3A <code>assert</code> \u7684\u65AD\u8A00\u51FD\u6570\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">assert</span><span class="token punctuation">(</span>someValue <span class="token operator">===</span> <span class="token number">42</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u5728\u4E0A\u9762\u7684\u4F8B\u5B50\u4E2D\uFF0C\u5982\u679C <code>someValue</code> \u4E0D\u7B49\u4E8E 42\uFF0C\u90A3\u4E48 <code>assert</code> \u5C31\u4F1A\u629B\u51FA\u4E00\u4E2A <code>AssertionError</code> \u9519\u8BEF\u3002</p><p>\u5728 JavaScript \u4E2D\uFF0C\u65AD\u8A00\u7ECF\u5E38\u88AB\u7528\u4E8E\u9632\u6B62\u4E0D\u6B63\u786E\u4F20\u53C2\u3002 \u4E3E\u4E2A\u4F8B\u5B50\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">multiply</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">assert</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> x <span class="token operator">===</span> <span class="token string">&quot;number&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">assert</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> y <span class="token operator">===</span> <span class="token string">&quot;number&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> x <span class="token operator">*</span> y<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u5F88\u9057\u61BE\uFF0C\u5728 TypeScript \u4E2D\uFF0C\u8FD9\u4E9B\u68C0\u67E5\u6CA1\u529E\u6CD5\u6B63\u786E\u7F16\u7801\u3002 \u5BF9\u4E8E\u7C7B\u578B\u5BBD\u677E\u7684\u4EE3\u7801\uFF0C\u610F\u5473\u7740 TypeScript \u68C0\u67E5\u5F97\u66F4\u5C11\uFF0C\u800C\u5BF9\u4E8E\u66F4\u52A0\u89C4\u8303\u7684\u4EE3\u7801\uFF0C\u901A\u5E38\u8FEB\u4F7F\u4F7F\u7528\u8005\u6DFB\u52A0\u7C7B\u578B\u65AD\u8A00\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">yell</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">assert</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> str <span class="token operator">===</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">toUppercase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u7CDF\u4E86\uFF01\u6211\u4EEC\u62FC\u9519\u4E86 &#39;toUpperCase&#39;\u3002</span>
    <span class="token comment">// \u5982\u679C TypeScript \u4F9D\u7136\u80FD\u68C0\u67E5\u51FA\u6765\u5C31\u592A\u68D2\u4E86\uFF01</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u6709\u4E00\u4E2A\u66FF\u4EE3\u7684\u5199\u6CD5\uFF0C\u53EF\u4EE5\u8BA9 TypeScript \u80FD\u591F\u5206\u6790\u51FA\u95EE\u9898\uFF0C\u4E0D\u8FC7\u8FD9\u6837\u5E76\u4E0D\u65B9\u4FBF\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">yell</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> str <span class="token operator">!==</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">&quot;str should have been a string.&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u53D1\u73B0\u9519\u8BEF\uFF01</span>
    <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">toUppercase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u5F52\u6839\u7ED3\u5E95\uFF0CTypeScript \u7684\u76EE\u6807\u662F\u4EE5\u6700\u5C0F\u7684\u6539\u52A8\u4E3A\u73B0\u5B58\u7684 JavaScript \u7ED3\u6784\u6DFB\u52A0\u4E0A\u7C7B\u578B\u58F0\u660E\u3002 \u56E0\u6B64\uFF0CTypeScript 3.7 \u5F15\u5165\u4E86\u4E00\u4E2A\u79F0\u4E3A\u201C\u65AD\u8A00\u7B7E\u540D\u201D\u7684\u65B0\u6982\u5FF5\uFF0C\u7528\u4E8E\u6A21\u62DF\u8FD9\u4E9B\u65AD\u8A00\u51FD\u6570\u3002</p><p>\u7B2C\u4E00\u79CD\u65AD\u8A00\u7B7E\u540D\u6A21\u62DF\u4E86 Node \u4E2D <code>assert</code> \u51FD\u6570\u7684\u529F\u80FD\u3002 \u5B83\u786E\u4FDD\u5728\u65AD\u8A00\u7684\u8303\u56F4\u5185\uFF0C\u65E0\u8BBA\u4EC0\u4E48\u5224\u65AD\u6761\u4EF6\u90FD\u4E3A\u5FC5\u987B\u771F\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">assert</span><span class="token punctuation">(</span>condition<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> msg<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">asserts</span> condition <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>condition<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AssertionError</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><code>asserts condition</code> \u8868\u793A\uFF1A\u5982\u679C <code>assert</code> \u51FD\u6570\u6210\u529F\u8FD4\u56DE\uFF0C\u5219\u4F20\u5165\u7684 <code>condition</code> \u53C2\u6570\u5FC5\u987B\u4E3A\u771F\uFF08\u5426\u5219\u5B83\u5E94\u8BE5\u629B\u51FA\u4E00\u4E2A Error\uFF09\u3002 \u8FD9\u610F\u5473\u7740\u5BF9\u4E8E\u540C\u4F5C\u7528\u57DF\u4E2D\u7684\u540E\u7EED\u4EE3\u7801\uFF0C\u6761\u4EF6\u5FC5\u987B\u4E3A\u771F\u3002 \u56DE\u5230\u4F8B\u5B50\u4E0A\uFF0C\u7528\u8FD9\u4E2A\u65AD\u8A00\u51FD\u6570\u610F\u5473\u7740\u6211\u4EEC <em>\u80FD\u591F</em> \u6355\u83B7\u4E4B\u524D <code>yell</code> \u793A\u4F8B\u4E2D\u7684\u9519\u8BEF\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">yell</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">assert</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> str <span class="token operator">===</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">toUppercase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//         ~~~~~~~~~~~</span>
    <span class="token comment">// error: Property &#39;toUppercase&#39; does not exist on type &#39;string&#39;.</span>
    <span class="token comment">//        Did you mean &#39;toUpperCase&#39;?</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">assert</span><span class="token punctuation">(</span>condition<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> msg<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">asserts</span> condition <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>condition<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AssertionError</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>\u53E6\u4E00\u79CD\u7C7B\u578B\u7684\u65AD\u8A00\u7B7E\u540D\u4E0D\u901A\u8FC7\u68C0\u67E5\u6761\u4EF6\u8BED\u53E5\u5B9E\u73B0\uFF0C\u800C\u662F\u5728 TypeScript \u91CC\u663E\u5F0F\u6307\u5B9A\u67D0\u4E2A\u53D8\u91CF\u6216\u5C5E\u6027\u5177\u6709\u4E0D\u540C\u7684\u7C7B\u578B\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">assertIsString</span><span class="token punctuation">(</span>val<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">asserts</span> val <span class="token keyword">is</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> val <span class="token operator">!==</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AssertionError</span><span class="token punctuation">(</span><span class="token string">&quot;Not a string!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u8FD9\u91CC\u7684 <code>asserts val is string</code> \u4FDD\u8BC1\u4E86\u5728 <code>assertIsString</code> \u8C03\u7528\u4E4B\u540E\uFF0C\u4F20\u5165\u7684\u4EFB\u4F55\u53D8\u91CF\u90FD\u6709\u53EF\u4EE5\u88AB\u89C6\u4E3A\u662F <code>string</code> \u7C7B\u578B\u7684\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">yell</span><span class="token punctuation">(</span>str<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">assertIsString</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u73B0\u5728 TypeScript \u77E5\u9053 &#39;str&#39; \u662F\u4E00\u4E2A &#39;string&#39;\u3002</span>

    <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">toUppercase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//         ~~~~~~~~~~~</span>
    <span class="token comment">// error: Property &#39;toUppercase&#39; does not exist on type &#39;string&#39;.</span>
    <span class="token comment">//        Did you mean &#39;toUpperCase&#39;?</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u8FD9\u4E9B\u65AD\u8A00\u65B9\u6CD5\u7B7E\u540D\u7C7B\u4F3C\u4E8E\u7C7B\u578B\u8C13\u8BCD\uFF08type predicate\uFF09\u7B7E\u540D\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">isString</span><span class="token punctuation">(</span>val<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> val <span class="token keyword">is</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">typeof</span> val <span class="token operator">===</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">yell</span><span class="token punctuation">(</span>str<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isString</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">toUppercase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">throw</span> <span class="token string">&quot;Oops!&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u5C31\u50CF\u7C7B\u578B\u8C13\u8BCD\u7B7E\u540D\u4E00\u6837\uFF0C\u8FD9\u4E9B\u65AD\u8A00\u7B7E\u540D\u5177\u6709\u6E05\u6670\u7684\u8868\u73B0\u529B\u3002 \u6211\u4EEC\u53EF\u4EE5\u7528\u5B83\u4EEC\u8868\u8FBE\u4E00\u4E9B\u975E\u5E38\u590D\u6742\u7684\u60F3\u6CD5\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">assertIsDefined</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>val<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">asserts</span> val <span class="token keyword">is</span> NonNullable<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>val <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">||</span> val <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AssertionError</span><span class="token punctuation">(</span>
            <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Expected &#39;val&#39; to be defined, but received </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>val<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>`,22),tn=n("\u60F3\u4E86\u89E3\u66F4\u591A\u65AD\u8A00\u7B7E\u540D\u7684\u7EC6\u8282\uFF0C\u53EF\u4EE5 "),on={href:"https://github.com/microsoft/TypeScript/pull/32695",target:"_blank",rel:"noopener noreferrer"},cn=n("\u67E5\u770B\u539F\u59CB\u7684 PR"),ln=n("\u3002"),rn=s("h2",{id:"\u66F4\u597D\u5730\u652F\u6301\u8FD4\u56DE-never-\u7684\u51FD\u6570",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#\u66F4\u597D\u5730\u652F\u6301\u8FD4\u56DE-never-\u7684\u51FD\u6570","aria-hidden":"true"},"#"),n(" \u66F4\u597D\u5730\u652F\u6301\u8FD4\u56DE "),s("code",null,"never"),n(" \u7684\u51FD\u6570")],-1),un=s("p",null,[n("\u4F5C\u4E3A\u65AD\u8A00\u7B7E\u540D\u5B9E\u73B0\u7684\u4E00\u90E8\u5206\uFF0CTypeScript \u9700\u8981\u7F16\u7801\u66F4\u591A\u5173\u4E8E\u8C03\u7528\u4F4D\u7F6E\u548C\u8C03\u7528\u51FD\u6570\u7684\u7EC6\u8282\u3002 \u8FD9\u7ED9\u4E86\u6211\u4EEC\u673A\u4F1A\u6269\u5C55\u5BF9\u53E6\u4E00\u7C7B\u51FD\u6570\u7684\u652F\u6301\u2014\u2014\u8FD4\u56DE "),s("code",null,"never"),n(" \u7684\u51FD\u6570\u3002")],-1),kn=n("\u8FD4\u56DE "),dn=s("code",null,"never",-1),bn=n(" \u7684\u51FD\u6570\uFF0C\u5373\u6C38\u8FDC\u4E0D\u4F1A\u8FD4\u56DE\u7684\u51FD\u6570\u3002 \u5B83\u8868\u660E\u629B\u51FA\u4E86\u5F02\u5E38\u3001\u89E6\u53D1\u4E86\u505C\u6B62\u9519\u8BEF\u6761\u4EF6\u3001\u6216\u7A0B\u5E8F\u9000\u51FA\u7684\u60C5\u51B5\u3002 \u4F8B\u5982\uFF0C"),mn={href:"https://github.com/DefinitelyTyped/DefinitelyTyped/blob/5299d372a220584e75a031c13b3d555607af13f8/types/node/globals.d.ts#l874",target:"_blank",rel:"noopener noreferrer"},yn=s("code",null,"@types/node",-1),gn=n(" \u4E2D\u7684 "),hn=s("code",null,"process.exit(...)",-1),fn=n(" \u5C31\u88AB\u6307\u5B9A\u4E3A\u8FD4\u56DE "),_n=s("code",null,"never",-1),wn=n("\u3002"),vn=e(`<p>\u4E3A\u4E86\u786E\u4FDD\u51FD\u6570\u6C38\u8FDC\u4E0D\u4F1A\u6F5C\u5728\u5730\u8FD4\u56DE <code>undefined</code>\u3001\u6216\u8005\u4ECE\u6240\u6709\u4EE3\u7801\u8DEF\u5F84\u4E2D\u6709\u6548\u5730\u8FD4\u56DE\uFF0CTypeScript \u9700\u8981\u501F\u52A9\u4E00\u4E9B\u8BED\u6CD5\u6807\u5FD7\u2014\u2014\u51FD\u6570\u7ED3\u5C3E\u5904\u7684 <code>return</code> \u6216 <code>throw</code>\u3002 \u8FD9\u6837\uFF0C\u4F7F\u7528\u8005\u5C31\u4F1A\u53D1\u73B0\u81EA\u5DF1\u7684\u4EE3\u7801\u5728\u201C\u8FD4\u56DE\u201D\u4E00\u4E2A\u505C\u673A\u51FD\u6570\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">dispatch</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> SomeType <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> x <span class="token operator">===</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">doThingWithString</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> x <span class="token operator">===</span> <span class="token string">&quot;number&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">doThingWithNumber</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> process<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u73B0\u5728\uFF0C\u8FD9\u4E9B\u8FD4\u56DE <code>never</code> \u7684\u51FD\u6570\u88AB\u8C03\u7528\u65F6\uFF0CTypeScript \u80FD\u8BC6\u522B\u51FA\u5B83\u4EEC\u5C06\u5F71\u54CD\u4EE3\u7801\u6267\u884C\u6D41\u7A0B\uFF0C\u540C\u65F6\u8BF4\u660E\u539F\u56E0\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">dispatch</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> SomeType <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> x <span class="token operator">===</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">doThingWithString</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> x <span class="token operator">===</span> <span class="token string">&quot;number&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">doThingWithNumber</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    process<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>`,4),Sn=n("\u4F60\u53EF\u4EE5\u548C\u5728\u65AD\u8A00\u51FD\u6570\u7684 "),xn={href:"https://github.com/microsoft/TypeScript/pull/32695",target:"_blank",rel:"noopener noreferrer"},Tn=n("\u540C\u4E00\u4E2A PR \u4E2D\u67E5\u770B\u66F4\u591A\u7EC6\u8282"),qn=n("\u3002"),An=s("h2",{id:"\u66F4\u52A0-\u9012\u5F52\u7684\u7C7B\u578B\u522B\u540D",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#\u66F4\u52A0-\u9012\u5F52\u7684\u7C7B\u578B\u522B\u540D","aria-hidden":"true"},"#"),n(" \uFF08\u66F4\u52A0\uFF09\u9012\u5F52\u7684\u7C7B\u578B\u522B\u540D")],-1),Dn={href:"http://www.typescriptlang.org/play/#example/recursive-type-references",target:"_blank",rel:"noopener noreferrer"},Jn=n("Playground"),On=e(`<p>\u7C7B\u578B\u522B\u540D\u5728\u201C\u9012\u5F52\u201D\u5F15\u7528\u65B9\u9762\u4E00\u76F4\u5B58\u5728\u5C40\u9650\u6027\u3002 \u539F\u56E0\u662F\uFF0C\u7C7B\u578B\u522B\u540D\u5FC5\u987B\u80FD\u7528\u5B83\u4EE3\u8868\u7684\u4E1C\u897F\u6765\u4EE3\u66FF\u81EA\u5DF1\u3002 \u8FD9\u5728\u67D0\u4E9B\u60C5\u51B5\u4E0B\u662F\u4E0D\u53EF\u80FD\u7684\uFF0C\u56E0\u6B64\u7F16\u8BD1\u5668\u4F1A\u62D2\u7EDD\u67D0\u4E9B\u9012\u5F52\u522B\u540D\uFF0C\u6BD4\u5982\u4E0B\u9762\u8FD9\u4E2A\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Foo</span> <span class="token operator">=</span> Foo<span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u8FD9\u662F\u4E00\u4E2A\u5408\u7406\u7684\u9650\u5236\uFF0C\u56E0\u4E3A\u4EFB\u4F55\u5BF9 <code>Foo</code> \u7684\u4F7F\u7528\u90FD\u53EF\u4EE5\u66FF\u6362\u4E3A <code>Foo</code>\uFF0C\u540C\u65F6\u8FD9\u4E2A <code>Foo</code> \u80FD\u591F\u66FF\u6362\u4E3A <code>Foo</code>\uFF0C\u800C\u8FD9\u4E2A <code>Foo</code> \u5E94\u8BE5\u2026\u2026\uFF08\u4EA7\u751F\u4E86\u65E0\u9650\u5FAA\u73AF\uFF09\u5E0C\u671B\u4F60\u7406\u89E3\u5230\u8FD9\u4E2A\u610F\u601D\u4E86\uFF01 \u5230\u6700\u540E\uFF0C\u6CA1\u6709\u7C7B\u578B\u53EF\u4EE5\u7528\u6765\u4EE3\u66FF <code>Foo</code>\u3002</p>`,3),Cn={href:"https://en.wikipedia.org/w/index.php?title=Recursive_data_type&oldid=913091335#in_type_synonyms",target:"_blank",rel:"noopener noreferrer"},Nn=n("\u5176\u4ED6\u8BED\u8A00\u4E5F\u662F\u8FD9\u4E48\u5904\u7406\u7C7B\u578B\u522B\u540D\u7684"),jn=n("\uFF0C\u4F46\u662F\u5B83\u786E\u5B9E\u4F1A\u4EA7\u751F\u4E00\u4E9B\u4EE4\u4EBA\u56F0\u60D1\u7684\u60C5\u5F62\uFF0C\u5F71\u54CD\u7C7B\u578B\u522B\u540D\u7684\u4F7F\u7528\u3002 \u4F8B\u5982\uFF0C\u5728 TypeScript 3.6 \u548C\u66F4\u4F4E\u7684\u7248\u672C\u4E2D\uFF0C\u4E0B\u9762\u7684\u4EE3\u7801\u4F1A\u62A5\u9519\uFF1A"),Fn=e(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">ValueOrArray<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token operator">|</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span>ValueOrArray<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">;</span>
<span class="token comment">//   ~~~~~~~~~~~~</span>
<span class="token comment">// error: Type alias &#39;ValueOrArray&#39; circularly references itself.</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u8FD9\u5F88\u4EE4\u4EBA\u56F0\u60D1\uFF0C\u56E0\u4E3A\u4F7F\u7528\u8005\u603B\u662F\u53EF\u4EE5\u7528\u63A5\u53E3\u6765\u7F16\u5199\u5177\u6709\u76F8\u540C\u4F5C\u7528\u7684\u4EE3\u7801\uFF0C\u90A3\u4E48\u4ECE\u6280\u672F\u4E0A\u8BB2\u8FD9\u6CA1\u4EC0\u4E48\u95EE\u9898\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">ValueOrArray<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token operator">|</span> ArrayOfValueOrArray<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">ArrayOfValueOrArray<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">Array</span><span class="token operator">&lt;</span>ValueOrArray<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;&gt;</span></span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u56E0\u4E3A\u63A5\u53E3\uFF08\u4EE5\u53CA\u5176\u4ED6\u5BF9\u8C61 type\uFF09\u5F15\u5165\u4E86\u4E00\u4E2A\u95F4\u63A5\u7684\u5C42\u7EA7\uFF0C\u5E76\u4E14\u5B83\u4EEC\u7684\u5B8C\u6574\u7ED3\u6784\u4E0D\u9700\u8981\u7ACB\u5373\u5EFA\u7ACB\uFF0C\u6240\u4EE5 TypeScript \u53EF\u4EE5\u5904\u7406\u8FD9\u79CD\u7ED3\u6784\u3002</p><p>\u4F46\u662F\uFF0C\u5BF9\u4E8E\u4F7F\u7528\u8005\u800C\u8A00\uFF0C\u5F15\u5165\u63A5\u53E3\u7684\u65B9\u6848\u5E76\u4E0D\u76F4\u89C2\u3002 \u5E76\u4E14\uFF0C\u7528\u4E86 <code>Array</code> \u7684\u521D\u59CB\u7248 <code>ValueOrArray</code> \u6CA1\u4EC0\u4E48\u539F\u5219\u6027\u95EE\u9898\u3002 \u5982\u679C\u7F16\u8BD1\u5668\u591A\u4E00\u70B9\u201C\u60F0\u6027\u201D\uFF0C\u5E76\u4E14\u53EA\u6309\u9700\u8BA1\u7B97 <code>Array</code> \u7684\u7C7B\u578B\u53C2\u6570\uFF0C\u90A3\u4E48 TypeScript \u5C31\u53EF\u4EE5\u6B63\u786E\u5730\u8868\u793A\u51FA\u8FD9\u4E9B\u4E86\u3002</p><p>\u8FD9\u6B63\u662F TypeScript 3.7 \u5F15\u5165\u7684\u3002 \u5728\u7C7B\u578B\u522B\u540D\u7684\u201C\u9876\u5C42\u201D\uFF0CTypeScript \u5C06\u63A8\u8FDF\u89E3\u6790\u7C7B\u578B\u53C2\u6570\u4EE5\u4FBF\u652F\u6301\u8FD9\u4E9B\u6A21\u5F0F\u3002</p><p>\u8FD9\u610F\u5473\u7740\uFF0C\u7528\u4E8E\u8868\u793A JSON \u7684\u4EE5\u4E0B\u4EE3\u7801\u2026\u2026</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Json</span> <span class="token operator">=</span>
    <span class="token operator">|</span> <span class="token builtin">string</span>
    <span class="token operator">|</span> <span class="token builtin">number</span>
    <span class="token operator">|</span> <span class="token builtin">boolean</span>
    <span class="token operator">|</span> <span class="token keyword">null</span>
    <span class="token operator">|</span> JsonObject
    <span class="token operator">|</span> JsonArray<span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">JsonObject</span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span>property<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> Json<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">JsonArray</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">Array</span><span class="token operator">&lt;</span>Json<span class="token operator">&gt;</span></span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u7EC8\u4E8E\u53EF\u4EE5\u91CD\u5199\u6210\u4E0D\u9700\u8981\u501F\u52A9 interface \u7684\u5F62\u5F0F\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Json</span> <span class="token operator">=</span>
    <span class="token operator">|</span> <span class="token builtin">string</span>
    <span class="token operator">|</span> <span class="token builtin">number</span>
    <span class="token operator">|</span> <span class="token builtin">boolean</span>
    <span class="token operator">|</span> <span class="token keyword">null</span>
    <span class="token operator">|</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>property<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> Json <span class="token punctuation">}</span>
    <span class="token operator">|</span> Json<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u8FD9\u4E2A\u65B0\u7684\u673A\u5236\u8BA9\u6211\u4EEC\u5728\u5143\u7EC4\u4E2D\uFF0C\u540C\u6837\u4E5F\u53EF\u4EE5\u9012\u5F52\u5730\u4F7F\u7528\u7C7B\u578B\u522B\u540D\u3002 \u4E0B\u9762\u7684 TypeScript \u4EE3\u7801\u5728\u4EE5\u524D\u4F1A\u62A5\u9519\uFF0C\u4F46\u73B0\u5728\u662F\u5408\u6CD5\u7684\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">VirtualNode</span> <span class="token operator">=</span>
    <span class="token operator">|</span> <span class="token builtin">string</span>
    <span class="token operator">|</span> <span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">any</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token operator">...</span>VirtualNode<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> myNode<span class="token operator">:</span> VirtualNode <span class="token operator">=</span>
    <span class="token punctuation">[</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> id<span class="token operator">:</span> <span class="token string">&quot;parent&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">[</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> id<span class="token operator">:</span> <span class="token string">&quot;first-child&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;I&#39;m the first child&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">[</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> id<span class="token operator">:</span> <span class="token string">&quot;second-child&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;I&#39;m the second child&quot;</span><span class="token punctuation">]</span>
    <span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>`,12),Pn=n("\u60F3\u4E86\u89E3\u66F4\u591A\u7EC6\u8282\uFF0C\u4F60\u53EF\u4EE5 "),En={href:"https://github.com/microsoft/TypeScript/pull/33050",target:"_blank",rel:"noopener noreferrer"},Un=n("\u67E5\u770B\u539F\u59CB\u7684 PR"),Vn=n("\u3002"),In=e(`<h2 id="declaration-\u548C-allowjs" tabindex="-1"><a class="header-anchor" href="#declaration-\u548C-allowjs" aria-hidden="true">#</a> <code>--declaration</code> \u548C <code>--allowJs</code></h2><p><code>--declaration</code> \u9009\u9879\u5141\u8BB8\u6211\u4EEC\u4ECE TypeScript \u6E90\u6587\u4EF6\uFF08\u8BF8\u5982 <code>.ts</code> \u548C <code>.tsx</code> \u6587\u4EF6\uFF09\u751F\u6210 <code>.d.ts</code> \u6587\u4EF6\uFF08\u58F0\u660E\u6587\u4EF6\uFF09\u3002 <code>.d.ts</code> \u6587\u4EF6\u7684\u91CD\u8981\u6027\u6709\u51E0\u4E2A\u65B9\u9762\uFF1A</p><p>\u9996\u5148\uFF0C\u5B83\u4EEC\u4F7F\u5F97 TypeScript \u80FD\u591F\u5BF9\u5916\u90E8\u9879\u76EE\u8FDB\u884C\u7C7B\u578B\u68C0\u67E5\uFF0C\u540C\u65F6\u907F\u514D\u91CD\u590D\u68C0\u67E5\u5176\u6E90\u4EE3\u7801\u3002 \u53E6\u4E00\u65B9\u9762\uFF0C\u5B83\u4EEC\u4F7F\u5F97 TypeScript \u80FD\u591F\u4E0E\u73B0\u5B58\u7684 JavaScript \u5E93\u76F8\u4E92\u914D\u5408\uFF0C\u5373\u4F7F\u8FD9\u4E9B\u5E93\u6784\u5EFA\u65F6\u5E76\u672A\u4F7F\u7528 TypeScript\u3002 \u6700\u540E\uFF0C\u8FD8\u6709\u4E00\u4E2A\u901A\u5E38\u88AB\u5FFD\u7565\u7684\u597D\u5904\uFF1A\u5728\u4F7F\u7528\u652F\u6301 TypeScript \u7684\u7F16\u8F91\u5668\u65F6\uFF0CTypeScript <em>\u548C</em> JavaScript \u4F7F\u7528\u8005\u90FD\u53EF\u4EE5\u4ECE\u8FD9\u4E9B\u6587\u4EF6\u4E2D\u53D7\u76CA\uFF0C\u4F8B\u5982\u66F4\u9AD8\u7EA7\u7684\u81EA\u52A8\u5B8C\u6210\u3002</p><p>\u4E0D\u5E78\u7684\u662F\uFF0C<code>--declaration</code> \u4E0D\u80FD\u4E0E <code>--allowJs</code> \u9009\u9879\u4E00\u8D77\u4F7F\u7528\uFF0C<code>--allowJs</code> \u9009\u9879\u5141\u8BB8\u6DF7\u5408\u4F7F\u7528 TypeScript \u548C JavaScript \u6587\u4EF6\u3002 \u8FD9\u662F\u4E00\u4E2A\u4EE4\u4EBA\u6CAE\u4E27\u7684\u9650\u5236\uFF0C\u56E0\u4E3A\u5B83\u610F\u5473\u7740\u4F7F\u7528\u8005\u5728\u8FC1\u79FB\u4EE3\u7801\u5E93\u65F6\u65E0\u6CD5\u4F7F\u7528 <code>--declaration</code> \u9009\u9879\uFF0C\u5373\u4F7F\u4EE3\u7801\u5305\u542B\u4E86 JSDoc \u6CE8\u91CA\u3002 TypeScript 3.7 \u5BF9\u6B64\u8FDB\u884C\u4E86\u6539\u8FDB\uFF0C\u5141\u8BB8\u8FD9\u4E24\u4E2A\u9009\u9879\u4E00\u8D77\u4F7F\u7528\uFF01</p><p>\u8FD9\u4E2A\u529F\u80FD\u6700\u5927\u7684\u5F71\u54CD\u53EF\u80FD\u6BD4\u8F83\u5FAE\u5999\uFF1A\u5728 TypeScript 3.7 \u4E2D\uFF0C\u7F16\u5199\u5E26\u6709 JSDoc \u6CE8\u91CA\u7684 JavaScript \u5E93\uFF0C\u4E5F\u80FD\u5E2E\u52A9 TypeScript \u7684\u4F7F\u7528\u8005\u3002</p><p>\u5B83\u7684\u5B9E\u73B0\u539F\u7406\u662F\uFF0C\u5728\u542F\u7528 <code>allowJs</code> \u65F6\uFF0CTypeScript \u4F1A\u5C3D\u53EF\u80FD\u5730\u5206\u6790\u5E76\u7406\u89E3\u5E38\u89C1\u7684 JavaScript \u6A21\u5F0F\uFF1B\u7136\u800C\uFF0C\u7528 JavaScript \u8868\u8FBE\u7684\u67D0\u4E9B\u6A21\u5F0F\u770B\u8D77\u6765\u4E0D\u4E00\u5B9A\u50CF\u5B83\u4EEC\u5728 TypeScript \u4E2D\u7684\u7B49\u6548\u5F62\u5F0F\u3002 \u542F\u7528 <code>declaration</code> \u9009\u9879\u540E\uFF0CTypeScript \u4F1A\u5C3D\u529B\u8BC6\u522B JSDoc \u6CE8\u91CA\u548C CommonJS \u5F62\u5F0F\u7684\u6A21\u5757\u8F93\u51FA\uFF0C\u5E76\u8F6C\u6362\u4E3A\u6709\u6548\u7684\u7C7B\u578B\u58F0\u660E\u8F93\u51FA\u5230 <code>.d.ts</code> \u6587\u4EF6\u4E0A\u3002</p><p>\u6BD4\u5982\u4E0B\u9762\u8FD9\u4E2A\u4EE3\u7801\u7247\u6BB5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> assert <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;assert&quot;</span><span class="token punctuation">)</span>

module<span class="token punctuation">.</span>exports<span class="token punctuation">.</span>blurImage <span class="token operator">=</span> blurImage<span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * Produces a blurred image from an input buffer.
 * 
 * <span class="token keyword">@param</span> <span class="token parameter">input</span> <span class="token punctuation">{</span>Uint8Array<span class="token punctuation">}</span>
 * <span class="token keyword">@param</span> <span class="token parameter">width</span> <span class="token punctuation">{</span>number<span class="token punctuation">}</span>
 * <span class="token keyword">@param</span> <span class="token parameter">height</span> <span class="token punctuation">{</span>number<span class="token punctuation">}</span>
 */</span>
<span class="token keyword">function</span> <span class="token function">blurImage</span><span class="token punctuation">(</span><span class="token parameter">input<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> numPixels <span class="token operator">=</span> width <span class="token operator">*</span> height <span class="token operator">*</span> <span class="token number">4</span><span class="token punctuation">;</span>
    <span class="token function">assert</span><span class="token punctuation">(</span>input<span class="token punctuation">.</span>length <span class="token operator">===</span> numPixels<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span>numPixels<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// TODO</span>

    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>\u5C06\u4F1A\u751F\u6210\u5982\u4E0B <code>.d.ts</code> \u6587\u4EF6</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * Produces a blurred image from an input buffer.
 *
 * <span class="token keyword">@param</span> <span class="token parameter">input</span> <span class="token punctuation">{</span>Uint8Array<span class="token punctuation">}</span>
 * <span class="token keyword">@param</span> <span class="token parameter">width</span> <span class="token punctuation">{</span>number<span class="token punctuation">}</span>
 * <span class="token keyword">@param</span> <span class="token parameter">height</span> <span class="token punctuation">{</span>number<span class="token punctuation">}</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">blurImage</span><span class="token punctuation">(</span>input<span class="token operator">:</span> Uint8Array<span class="token punctuation">,</span> width<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> height<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> Uint8Array<span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u9664\u4E86\u57FA\u672C\u7684\u5E26\u6709 <code>@param</code> \u6807\u8BB0\u7684\u51FD\u6570\uFF0C\u4E5F\u652F\u6301\u5176\u4ED6\u60C5\u5F62, \u8BF7\u770B\u4E0B\u9762\u8FD9\u4E2A\u4F8B\u5B50\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@callback</span> Job
 * <span class="token keyword">@returns</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">void</span><span class="token punctuation">}</span></span>
 */</span>

<span class="token doc-comment comment">/** Queues work */</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">Worker</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">maxDepth <span class="token operator">=</span> <span class="token number">10</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>started <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>depthLimit <span class="token operator">=</span> maxDepth<span class="token punctuation">;</span>
        <span class="token doc-comment comment">/**
         * NOTE: queued jobs may add more items to queue
         * <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span>Job<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span>
         */</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>queue <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token doc-comment comment">/**
     * Adds a work item to the queue
     * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Job<span class="token punctuation">}</span></span> <span class="token parameter">work</span> 
     */</span>
    <span class="token function">push</span><span class="token punctuation">(</span><span class="token parameter">work</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>queue<span class="token punctuation">.</span>length <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>depthLimit<span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Queue full!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>work<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token doc-comment comment">/**
     * Starts the queue if it has not yet started
     */</span>
    <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>started<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>started <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>queue<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span>Job<span class="token punctuation">}</span></span> */</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>queue<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><p>\u4F1A\u751F\u6210\u5982\u4E0B <code>.d.ts</code> \u6587\u4EF6\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@callback</span> Job
 * <span class="token keyword">@returns</span> <span class="token punctuation">{</span>void<span class="token punctuation">}</span>
 */</span>
<span class="token doc-comment comment">/** Queues work */</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">Worker</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span>maxDepth<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    started<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
    depthLimit<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * NOTE: queued jobs may add more items to queue
     * <span class="token keyword">@type</span> <span class="token punctuation">{</span>Job[]<span class="token punctuation">}</span>
     */</span>
    queue<span class="token operator">:</span> Job<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * Adds a work item to the queue
     * <span class="token keyword">@param</span> <span class="token punctuation">{</span>Job<span class="token punctuation">}</span> work
     */</span>
    <span class="token function">push</span><span class="token punctuation">(</span>work<span class="token operator">:</span> Job<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * Starts the queue if it has not yet started
     */</span>
    <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">type</span> <span class="token class-name">Job</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><p>\u6CE8\u610F\uFF0C\u5F53\u540C\u65F6\u542F\u7528\u8FD9\u4E24\u4E2A\u9009\u9879\u65F6\uFF0CTypeScript \u4E0D\u4E00\u5B9A\u5FC5\u987B\u5F97\u7F16\u8BD1\u6210 <code>.js</code> \u6587\u4EF6\u3002 \u5982\u679C\u53EA\u662F\u7B80\u5355\u7684\u60F3\u8BA9 TypeScript \u521B\u5EFA <code>.d.ts</code> \u6587\u4EF6\uFF0C\u4F60\u53EF\u4EE5\u542F\u7528 <code>--emitDeclarationOnly</code> \u7F16\u8BD1\u9009\u9879\u3002</p>`,15),Rn=n("\u60F3\u4E86\u89E3\u66F4\u591A\u7EC6\u8282\uFF0C\u4F60\u53EF\u4EE5 "),zn={href:"https://github.com/microsoft/TypeScript/pull/32372",target:"_blank",rel:"noopener noreferrer"},Wn=n("\u67E5\u770B\u539F\u59CB\u7684 PR"),Bn=n("\u3002"),Hn=e(`<h2 id="usedefineforclassfields-\u7F16\u8BD1\u9009\u9879\u548C-declare-\u5C5E\u6027\u4FEE\u9970\u7B26" tabindex="-1"><a class="header-anchor" href="#usedefineforclassfields-\u7F16\u8BD1\u9009\u9879\u548C-declare-\u5C5E\u6027\u4FEE\u9970\u7B26" aria-hidden="true">#</a> <code>useDefineForClassFields</code> \u7F16\u8BD1\u9009\u9879\u548C <code>declare</code> \u5C5E\u6027\u4FEE\u9970\u7B26</h2><p>\u5F53\u5728 TypeScript \u4E2D\u5199\u7C7B\u516C\u5171\u5B57\u6BB5\u65F6\uFF0C\u6211\u4EEC\u5C3D\u529B\u4FDD\u8BC1\u4EE5\u4E0B\u4EE3\u7801</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name"><span class="token constant">C</span></span> <span class="token punctuation">{</span>
    foo <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
    bar<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u7B49\u4EF7\u4E8E\u6784\u9020\u51FD\u6570\u4E2D\u7684\u76F8\u4F3C\u8BED\u53E5</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name"><span class="token constant">C</span></span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>foo <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u4E0D\u5E78\u7684\u662F\uFF0C\u867D\u7136\u8FD9\u7B26\u5408\u8BE5\u63D0\u6848\u65E9\u671F\u7684\u53D1\u5C55\u65B9\u5411\uFF0C\u4F46\u7C7B\u516C\u5171\u5B57\u6BB5\u6781\u6709\u53EF\u80FD\u4EE5\u4E0D\u540C\u7684\u65B9\u5F0F\u8FDB\u884C\u6807\u51C6\u5316\u3002 \u6240\u4EE5\u53D6\u800C\u4EE3\u4E4B\u7684\uFF0C\u539F\u59CB\u4EE3\u7801\u793A\u4F8B\u53EF\u80FD\u9700\u8981\u8FDB\u884C\u8131\u7CD6\u5904\u7406\uFF0C\u53D8\u6210\u7C7B\u4F3C\u4E0B\u9762\u7684\u4EE3\u7801\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name"><span class="token constant">C</span></span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string">&quot;foo&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
            enumerable<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
            configurable<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
            writable<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
            value<span class="token operator">:</span> <span class="token number">100</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string">&quot;bar&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
            enumerable<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
            configurable<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
            writable<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
            value<span class="token operator">:</span> <span class="token keyword">void</span> <span class="token number">0</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>\u5F53\u7136\uFF0CTypeScript 3.7 \u5728\u9ED8\u8BA4\u60C5\u51B5\u4E0B\u7684\u7F16\u8BD1\u7ED3\u679C\u4E0E\u4E4B\u524D\u7248\u672C\u6CA1\u6709\u53D8\u5316\uFF0C\u6211\u4EEC\u589E\u91CF\u5730\u53D1\u5E03\u6539\u52A8\uFF0C\u4EE5\u4FBF\u5E2E\u52A9\u4F7F\u7528\u8005\u51CF\u5C11\u672A\u6765\u6F5C\u5728\u7684\u7834\u574F\u6027\u53D8\u66F4\u3002 \u6211\u4EEC\u63D0\u4F9B\u4E86\u4E00\u4E2A\u65B0\u7684\u7F16\u8BD1\u9009\u9879 <code>useDefineForClassFields</code>\uFF0C\u6839\u636E\u4E00\u4E9B\u65B0\u7684\u68C0\u67E5\u903B\u8F91\u4F7F\u7528\u4E0A\u9762\u8FD9\u79CD\u7F16\u8BD1\u6A21\u5F0F\u3002</p><p>\u6700\u5927\u7684\u4E24\u4E2A\u6539\u53D8\u5982\u4E0B\uFF1A</p><ul><li>\u58F0\u660E\u901A\u8FC7 <code>Object.defineProperty</code> \u5B8C\u6210\u3002</li><li>\u58F0\u660E <em>\u603B\u662F</em> \u88AB\u521D\u59CB\u5316\u4E3A <code>undefined</code>\uFF0C\u5373\u4F7F\u539F\u6709\u4EE3\u7801\u4E2D\u6CA1\u6709\u663E\u5F0F\u7684\u521D\u59CB\u503C\u3002</li></ul><p>\u5BF9\u4E8E\u73B0\u5B58\u7684\u542B\u6709\u7EE7\u627F\u7684\u4EE3\u7801\uFF0C\u8FD9\u53EF\u80FD\u4F1A\u9020\u6210\u4E00\u4E9B\u95EE\u9898\u3002\u9996\u5148\uFF0C\u57FA\u7C7B\u7684 <code>set</code> \u8BBF\u95EE\u5668\u4E0D\u518D\u88AB\u89E6\u53D1\u2014\u2014\u5B83\u4EEC\u5C06\u88AB\u5B8C\u5168\u8986\u5199\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">Base</span> <span class="token punctuation">{</span>
    <span class="token keyword">set</span> <span class="token function">data</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;data changed to &quot;</span> <span class="token operator">+</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Derived</span> <span class="token keyword">extends</span> <span class="token class-name">Base</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5F53\u542F\u7528 &#39;useDefineForClassFields&#39; \u65F6</span>
    <span class="token comment">// \u4E0D\u518D\u89E6\u53D1 &#39;console.log&#39;</span>
    data <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u5176\u6B21\uFF0C\u57FA\u7C7B\u4E2D\u7684\u5C5E\u6027\u8BBE\u5B9A\u4E5F\u5C06\u4E0D\u8D77\u4F5C\u7528\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span> animalStuff<span class="token operator">:</span> <span class="token builtin">any</span> <span class="token punctuation">}</span>
<span class="token keyword">interface</span> <span class="token class-name">Dog</span> <span class="token keyword">extends</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span> dogStuff<span class="token operator">:</span> <span class="token builtin">any</span> <span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">AnimalHouse</span> <span class="token punctuation">{</span>
    resident<span class="token operator">:</span> Animal<span class="token punctuation">;</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span>animal<span class="token operator">:</span> Animal<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>resident <span class="token operator">=</span> animal<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">DogHouse</span> <span class="token keyword">extends</span> <span class="token class-name">AnimalHouse</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5F53\u542F\u7528 &#39;useDefineForClassFields&#39; \u65F6</span>
    <span class="token comment">// \u8C03\u7528 &#39;super()&#39; \u540E</span>
    <span class="token comment">// &#39;resident&#39; \u53EA\u4F1A\u88AB\u521D\u59CB\u5316\u6210 &#39;undefined&#39;\uFF01</span>
    resident<span class="token operator">:</span> Dog<span class="token punctuation">;</span>

    <span class="token function">constructor</span><span class="token punctuation">(</span>dog<span class="token operator">:</span> Dog<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>dog<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>\u8FD9\u4E24\u4E2A\u95EE\u9898\u5F52\u7ED3\u4E3A\uFF0C\u7EE7\u627F\u65F6\u6DF7\u5408\u8986\u5199\u5C5E\u6027\u4E0E\u8BBF\u95EE\u5668\uFF0C\u4EE5\u53CA\u5C5E\u6027\u4E0D\u5E26\u521D\u59CB\u503C\u7684\u91CD\u65B0\u58F0\u660E\u3002</p><p>\u4E3A\u4E86\u68C0\u6D4B\u8FD9\u4E2A\u8BBF\u95EE\u5668\u7684\u95EE\u9898\uFF0CTypeScript 3.7 \u73B0\u5728\u53EF\u4EE5\u5728 <code>.d.ts</code> \u6587\u4EF6\u4E2D\u7F16\u8BD1\u51FA <code>get</code>/<code>set</code>\uFF0C\u8FD9\u6837 TypeScript \u5C31\u80FD\u68C0\u67E5\u51FA\u8BBF\u95EE\u5668\u8986\u5199\u7684\u60C5\u51B5\u3002</p><p>\u5BF9\u4E8E\u6539\u53D8\u7C7B\u5B57\u6BB5\u7684\u4EE3\u7801\uFF0C\u5C06\u5B57\u6BB5\u521D\u59CB\u5316\u5199\u6210\u6784\u9020\u51FD\u6570\u5185\u7684\u8BED\u53E5\uFF0C\u5C31\u53EF\u4EE5\u89E3\u51B3\u6B64\u95EE\u9898\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">Base</span> <span class="token punctuation">{</span>
    <span class="token keyword">set</span> <span class="token function">data</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;data changed to &quot;</span> <span class="token operator">+</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Derived</span> <span class="token keyword">extends</span> <span class="token class-name">Base</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        data <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u800C\u89E3\u51B3\u7B2C\u4E8C\u4E2A\u95EE\u9898\uFF0C\u4F60\u53EF\u4EE5\u663E\u5F0F\u5730\u63D0\u4F9B\u4E00\u4E2A\u521D\u59CB\u503C\uFF0C\u6216\u6DFB\u52A0\u4E00\u4E2A<code>declare</code> \u4FEE\u9970\u7B26\u6765\u8868\u793A\u8FD9\u4E2A\u5C5E\u6027\u4E0D\u8981\u88AB\u7F16\u8BD1\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span> animalStuff<span class="token operator">:</span> <span class="token builtin">any</span> <span class="token punctuation">}</span>
<span class="token keyword">interface</span> <span class="token class-name">Dog</span> <span class="token keyword">extends</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span> dogStuff<span class="token operator">:</span> <span class="token builtin">any</span> <span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">AnimalHouse</span> <span class="token punctuation">{</span>
    resident<span class="token operator">:</span> Animal<span class="token punctuation">;</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span>animal<span class="token operator">:</span> Animal<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>resident <span class="token operator">=</span> animal<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">DogHouse</span> <span class="token keyword">extends</span> <span class="token class-name">AnimalHouse</span> <span class="token punctuation">{</span>
    <span class="token keyword">declare</span> resident<span class="token operator">:</span> Dog<span class="token punctuation">;</span>
<span class="token comment">//  ^^^^^^^</span>
<span class="token comment">// &#39;resident&#39; now has a &#39;declare&#39; modifier,</span>
<span class="token comment">// and won&#39;t produce any output code.</span>

    <span class="token function">constructor</span><span class="token punctuation">(</span>dog<span class="token operator">:</span> Dog<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>dog<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>\u76EE\u524D\uFF0C\u53EA\u6709\u5F53\u7F16\u8BD1\u76EE\u6807\u662F ES5 \u53CA\u4EE5\u4E0A\u65F6 <code>useDefineForClassFields</code> \u624D\u53EF\u7528\uFF0C\u56E0\u4E3A ES3 \u4E2D\u4E0D\u652F\u6301 <code>Object.defineProperty</code>\u3002 \u8981\u68C0\u67E5\u7C7B\u4F3C\u7684\u95EE\u9898\uFF0C\u4F60\u53EF\u4EE5\u521B\u5EFA\u4E00\u4E2A\u5206\u79BB\u7684\u9879\u76EE\uFF0C\u8BBE\u5B9A\u7F16\u8BD1\u76EE\u6807\u4E3A ES5 \u5E76\u4F7F\u7528 <code>--noEmit</code> \u6765\u907F\u514D\u5B8C\u5168\u6784\u5EFA\u3002</p>`,21),Ln=n("\u60F3\u4E86\u89E3\u66F4\u591A\u7EC6\u8282\uFF0C\u4F60\u53EF\u4EE5 "),Mn={href:"https://github.com/microsoft/TypeScript/pull/33509",target:"_blank",rel:"noopener noreferrer"},$n=n("\u53BB\u539F\u59CB\u7684 PR \u67E5\u770B\u8FD9\u4E9B\u6539\u52A8"),Kn=n("\u3002"),Qn=e('<p>\u6211\u4EEC\u5F3A\u70C8\u5EFA\u8BAE\u4F7F\u7528\u8005\u5C1D\u8BD5 <code>useDefineForClassFields</code>\uFF0C\u5E76\u5728 issues \u6216\u4E0B\u9762\u7684\u8BC4\u8BBA\u533A\u57DF\u4E2D\u63D0\u4F9B\u53CD\u9988\u3002 \u5E94\u8BE5\u78B0\u5230\u7F16\u8BD1\u9009\u9879\u5728\u4F7F\u7528\u96BE\u5EA6\u4E0A\u7684\u53CD\u9988\uFF0C\u8FD9\u6837\u6211\u4EEC\u5C31\u80FD\u591F\u4E86\u89E3\u5982\u4F55\u4F7F\u8FC1\u79FB\u53D8\u5F97\u66F4\u5BB9\u6613\u3002</p><h2 id="\u5229\u7528\u9879\u76EE\u5F15\u7528\u5B9E\u73B0\u65E0\u6784\u5EFA\u7F16\u8F91" tabindex="-1"><a class="header-anchor" href="#\u5229\u7528\u9879\u76EE\u5F15\u7528\u5B9E\u73B0\u65E0\u6784\u5EFA\u7F16\u8F91" aria-hidden="true">#</a> \u5229\u7528\u9879\u76EE\u5F15\u7528\u5B9E\u73B0\u65E0\u6784\u5EFA\u7F16\u8F91</h2><p>TypeScript \u7684\u9879\u76EE\u5F15\u7528\u529F\u80FD\uFF0C\u4E3A\u6211\u4EEC\u63D0\u4F9B\u4E86\u4E00\u79CD\u7B80\u5355\u7684\u65B9\u6CD5\u6765\u5206\u89E3\u4EE3\u7801\u5E93\uFF0C\u4ECE\u800C\u4F7F\u7F16\u8BD1\u901F\u5EA6\u66F4\u5FEB\u3002 \u9057\u61BE\u7684\u662F\uFF0C\u5F53\u6211\u4EEC\u7F16\u8F91\u4E00\u4E2A\u4F9D\u8D56\u672A\u66FE\u6784\u5EFA\uFF08\u6216\u8005\u6784\u5EFA\u7ED3\u679C\u8FC7\u65F6\uFF09\u7684\u9879\u76EE\u65F6\uFF0C\u4F53\u9A8C\u4E0D\u597D\u3002</p><p>\u5728 TypeScript 3.7 \u4E2D\uFF0C\u5F53\u6253\u5F00\u4E00\u4E2A\u5E26\u6709\u4F9D\u8D56\u7684\u9879\u76EE\u65F6\uFF0CTypeScript \u5C06\u81EA\u52A8\u5207\u6362\u4E3A\u4F7F\u7528\u4F9D\u8D56\u4E2D\u7684 <code>.ts</code>/<code>.tsx</code> \u6E90\u7801\u6587\u4EF6\u3002 \u8FD9\u610F\u5473\u7740\u5728\u5E26\u6709\u5916\u90E8\u5F15\u7528\u7684\u9879\u76EE\u4E2D\uFF0C\u4EE3\u7801\u7684\u4FEE\u6539\u4F1A\u5373\u65F6\u540C\u6B65\u548C\u751F\u6548\uFF0C\u7F16\u7801\u4F53\u9A8C\u4F1A\u5F97\u5230\u63D0\u5347\u3002 \u4F60\u4E5F\u53EF\u4EE5\u9002\u5F53\u5730\u6253\u5F00\u7F16\u8BD1\u5668\u9009\u9879 <code>disableSourceOfProjectReferenceRedirect</code> \u6765\u7981\u7528\u8FD9\u4E2A\u5F15\u7528\u7684\u529F\u80FD\uFF0C\u56E0\u4E3A\u5728\u8D85\u5927\u578B\u9879\u76EE\u4E2D\u8FD9\u4E2A\u529F\u80FD\u53EF\u80FD\u4F1A\u5F71\u54CD\u6027\u80FD\u3002</p>',4),Gn=n("\u4F60\u53EF\u4EE5 "),Xn={href:"https://github.com/microsoft/TypeScript/pull/32028",target:"_blank",rel:"noopener noreferrer"},Yn=n("\u9605\u8BFB\u8FD9\u4E2A PR \u6765\u4E86\u89E3\u8FD9\u4E2A\u6539\u52A8\u7684\u66F4\u591A\u7EC6\u8282"),Zn=n("\u3002"),ns=e(`<h2 id="\u68C0\u67E5\u672A\u8C03\u7528\u7684\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u68C0\u67E5\u672A\u8C03\u7528\u7684\u51FD\u6570" aria-hidden="true">#</a> \u68C0\u67E5\u672A\u8C03\u7528\u7684\u51FD\u6570</h2><p>\u4E00\u4E2A\u5E38\u89C1\u4E14\u5371\u9669\u7684\u9519\u8BEF\u662F\uFF1A\u5FD8\u8BB0\u8C03\u7528\u4E00\u4E2A\u51FD\u6570\uFF0C\u7279\u522B\u662F\u5F53\u8BE5\u51FD\u6570\u4E0D\u9700\u8981\u53C2\u6570\uFF0C\u6216\u8005\u5B83\u7684\u547D\u540D\u5BB9\u6613\u88AB\u8BEF\u8BA4\u4E3A\u662F\u4E00\u4E2A\u5C5E\u6027\u800C\u4E0D\u662F\u51FD\u6570\u65F6\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
    <span class="token function">isAdministrator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
    <span class="token function">notify</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
    doNotDisturb<span class="token operator">?</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u4E4B\u540E\u2026</span>

<span class="token comment">// \u6709\u95EE\u9898\u7684\u4EE3\u7801\uFF0C\u522B\u7528\uFF01</span>
<span class="token keyword">function</span> <span class="token function">doAdminThing</span><span class="token punctuation">(</span>user<span class="token operator">:</span> User<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u7CDF\u4E86\uFF01</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>user<span class="token punctuation">.</span>isAdministrator<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">sudo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">editTheConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AccessDeniedError</span><span class="token punctuation">(</span><span class="token string">&quot;User is not an admin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>\u5728\u8FD9\u6BB5\u4EE3\u7801\u4E2D\uFF0C\u6211\u4EEC\u5FD8\u4E86\u8C03\u7528 <code>isAdministrator</code>\uFF0C\u5BFC\u81F4\u8BE5\u4EE3\u7801\u9519\u8BEF\u5730\u5141\u8BB8\u975E\u7BA1\u7406\u5458\u7528\u6237\u4FEE\u6539\u914D\u7F6E\uFF01</p><p>\u5728 TypeScript 3.7 \u4E2D\uFF0C\u5B83\u4F1A\u88AB\u8BC6\u522B\u6210\u4E00\u4E2A\u6F5C\u5728\u7684\u9519\u8BEF\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">doAdminThing</span><span class="token punctuation">(</span>user<span class="token operator">:</span> User<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>user<span class="token punctuation">.</span>isAdministrator<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//  ~~~~~~~~~~~~~~~~~~~~</span>
    <span class="token comment">// error! This condition will always return true since the function is always defined.</span>
    <span class="token comment">//        Did you mean to call it instead?</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u8FD9\u4E2A\u68C0\u67E5\u529F\u80FD\u662F\u4E00\u4E2A\u7834\u574F\u6027\u53D8\u66F4\uFF0C\u57FA\u4E8E\u8FD9\u4E2A\u56E0\u7D20\uFF0C\u68C0\u67E5\u4F1A\u975E\u5E38\u4FDD\u5B88\u3002 \u56E0\u6B64\u5BF9\u8FD9\u7C7B\u9519\u8BEF\u7684\u63D0\u793A\u4EC5\u9650\u4E8E <code>if</code> \u6761\u4EF6\u8BED\u53E5\u4E2D\u3002\u5F53\u95EE\u9898\u51FD\u6570\u662F\u53EF\u9009\u5C5E\u6027\u3001\u6216\u672A\u5F00\u542F <code>strictNullChecks</code> \u9009\u9879\u3001\u6216\u8BE5\u51FD\u6570\u5728 <code>if</code> \u7684\u4EE3\u7801\u5757\u4E2D\u6709\u88AB\u8C03\u7528\uFF0C\u5728\u8FD9\u4E9B\u60C5\u51B5\u4E0B\u4E0D\u4F1A\u88AB\u89C6\u4E3A\u9519\u8BEF\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
    <span class="token function">isAdministrator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
    <span class="token function">notify</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
    doNotDisturb<span class="token operator">?</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">issueNotification</span><span class="token punctuation">(</span>user<span class="token operator">:</span> User<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>user<span class="token punctuation">.</span>doNotDisturb<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// OK\uFF0C\u5C5E\u6027\u662F\u53EF\u9009\u7684</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>user<span class="token punctuation">.</span>notify<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// OK\uFF0C\u8C03\u7528\u4E86\u8BE5\u51FD\u6570</span>
        user<span class="token punctuation">.</span><span class="token function">notify</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>\u5982\u679C\u4F60\u6253\u7B97\u5BF9\u8BE5\u51FD\u6570\u8FDB\u884C\u6D4B\u8BD5\u4F46\u4E0D\u8C03\u7528\u5B83\uFF0C\u4F60\u53EF\u4EE5\u4FEE\u6539\u5B83\u7684\u7C7B\u578B\u5B9A\u4E49\uFF0C\u8BA9\u5B83\u53EF\u80FD\u662F <code>undefined</code>/<code>null</code>\uFF0C\u6216\u4F7F\u7528 <code>!!</code> \u6765\u7F16\u5199\u7C7B\u4F3C <code>if (!!user.isAdministrator)</code> \u7684\u4EE3\u7801\uFF0C\u8868\u793A\u4EE3\u7801\u903B\u8F91\u786E\u5B9E\u662F\u8FD9\u6837\u7684\u3002</p>`,9),ss=n("\u6211\u4EEC\u975E\u5E38\u611F\u8C22\u793E\u533A\u6210\u5458 "),as={href:"https://github.com/jwbay",target:"_blank",rel:"noopener noreferrer"},ps=n("@jwbay"),es=n(" \u63D0\u51FA\u4E86 "),ts={href:"https://github.com/microsoft/TypeScript/pull/32802",target:"_blank",rel:"noopener noreferrer"},os=n("\u8FD9\u4E2A\u95EE\u9898\u7684\u6982\u5FF5"),cs=n(" \u5E76\u6301\u7EED\u8DDF\u8FDB\u5B9E\u73B0\u4E86 "),ls={href:"https://github.com/microsoft/TypeScript/pull/33178",target:"_blank",rel:"noopener noreferrer"},rs=n("\u8FD9\u4E2A\u9700\u6C42\u7684\u5F53\u524D\u7248\u672C"),us=n("\u3002"),is=s("h2",{id:"typescript-\u6587\u4EF6\u4E2D\u7684-ts-nocheck",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#typescript-\u6587\u4EF6\u4E2D\u7684-ts-nocheck","aria-hidden":"true"},"#"),n(" TypeScript \u6587\u4EF6\u4E2D\u7684 "),s("code",null,"// @ts-nocheck")],-1),ks=s("p",null,[n("TypeScript 3.7 \u5141\u8BB8\u6211\u4EEC\u5728 TypeScript \u6587\u4EF6\u7684\u9876\u90E8\u6DFB\u52A0\u4E00\u884C "),s("code",null,"// @ts-nocheck"),n(" \u6CE8\u91CA\u6765\u5173\u95ED\u8BED\u4E49\u68C0\u67E5\u3002 \u8FD9\u4E2A\u6CE8\u91CA\u539F\u672C\u53EA\u5728 "),s("code",null,"checkJs"),n(" \u9009\u9879\u542F\u7528\u65F6\u7684 JavaScript \u6E90\u6587\u4EF6\u4E2D\u6709\u6548\uFF0C\u4F46\u6211\u4EEC\u6269\u5C55\u4E86\u5B83\uFF0C\u8BA9\u5B83\u80FD\u591F\u652F\u6301 TypeScript \u6587\u4EF6\uFF0C\u8FD9\u6837\u6240\u6709\u4F7F\u7528\u8005\u5728\u8FC1\u79FB\u7684\u65F6\u5019\u4F1A\u66F4\u65B9\u4FBF\u3002")],-1),ds=s("h2",{id:"\u5206\u53F7\u683C\u5F0F\u5316\u9009\u9879",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#\u5206\u53F7\u683C\u5F0F\u5316\u9009\u9879","aria-hidden":"true"},"#"),n(" \u5206\u53F7\u683C\u5F0F\u5316\u9009\u9879")],-1),bs=n("JavaScript \u6709\u4E00\u4E2A\u81EA\u52A8\u5206\u53F7\u63D2\u5165\uFF08ASI\uFF0Cautomatic semicolon insertion\uFF09\u89C4\u5219\uFF0CTypeScript \u5185\u7F6E\u7684\u683C\u5F0F\u5316\u7A0B\u5E8F\u73B0\u5728\u80FD\u652F\u6301\u5728\u53EF\u9009\u7684\u5C3E\u5206\u53F7\u4F4D\u7F6E\u63D2\u5165\u6216\u5220\u9664\u5206\u53F7\u3002\u8BE5\u8BBE\u7F6E\u73B0\u5728\u5728 "),ms={href:"https://code.visualstudio.com/insiders/",target:"_blank",rel:"noopener noreferrer"},ys=n("Visual Studio Code Insiders"),gs=n(" \uFF0C\u4EE5\u53CA Visual Studio 16.4 Preview 2 \u4E2D\u7684\u201C\u5DE5\u5177\u9009\u9879\u201D\u83DC\u5355\u4E2D\u53EF\u7528\u3002"),hs=e('<img width="833" alt="New semicolon formatter option in VS Code" src="https://user-images.githubusercontent.com/3277153/65913194-10066e80-e395-11e9-8a3a-4f7305c397d5.png"><p>\u5C06\u503C\u8BBE\u5B9A\u4E3A \u201Cinsert\u201D \u6216 \u201Cremove\u201D \u540C\u65F6\u4E5F\u4F1A\u5F71\u54CD\u81EA\u52A8\u5BFC\u5165\u3001\u7C7B\u578B\u63D0\u53D6\u3001\u4EE5\u53CA\u5176\u4ED6 TypeScript \u670D\u52A1\u63D0\u4F9B\u7684\u81EA\u52A8\u751F\u6210\u4EE3\u7801\u7684\u683C\u5F0F\u3002\u5C06\u8BBE\u7F6E\u4FDD\u7559\u4E3A\u9ED8\u8BA4\u503C \u201Cignore\u201D \u53EF\u4EE5\u4F7F\u751F\u6210\u4EE3\u7801\u7684\u5206\u53F7\u81EA\u52A8\u914D\u7F6E\u5339\u914D\u5F53\u524D\u6587\u4EF6\u7684\u98CE\u683C\u3002</p><h2 id="_3-7-\u7684\u7834\u574F\u6027\u53D8\u66F4" tabindex="-1"><a class="header-anchor" href="#_3-7-\u7684\u7834\u574F\u6027\u53D8\u66F4" aria-hidden="true">#</a> 3.7 \u7684\u7834\u574F\u6027\u53D8\u66F4</h2><h3 id="dom-\u53D8\u66F4" tabindex="-1"><a class="header-anchor" href="#dom-\u53D8\u66F4" aria-hidden="true">#</a> DOM \u53D8\u66F4</h3>',4),fs={href:"https://github.com/microsoft/TypeScript/pull/33627",target:"_blank",rel:"noopener noreferrer"},_s=s("code",null,"lib.dom.d.ts",-1),ws=n(" \u4E2D\u7684\u7C7B\u578B\u58F0\u660E\u5DF2\u66F4\u65B0"),vs=n("\u3002 \u8FD9\u4E9B\u53D8\u66F4\u5927\u90E8\u5206\u662F\u4E0E\u7A7A\u503C\u68C0\u67E5\u6709\u5173\u7684\u68C0\u6D4B\u51C6\u786E\u6027\u53D8\u66F4\uFF0C\u6700\u7EC8\u7684\u5F71\u54CD\u53D6\u51B3\u4E8E\u4F60\u7684\u4EE3\u7801\u5E93\u3002"),Ss=e(`<h3 id="\u7C7B\u5B57\u6BB5\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u5B57\u6BB5\u5904\u7406" aria-hidden="true">#</a> \u7C7B\u5B57\u6BB5\u5904\u7406</h3><p><a href="#usedefineforclassfields-%e7%bc%96%e8%af%91%e9%80%89%e9%a1%b9%e5%92%8c-declare-%e5%b1%9e%e6%80%a7%e4%bf%ae%e9%a5%b0%e7%ac%a6">\u6B63\u5982\u4E0A\u6587\u63D0\u5230\u7684</a>\uFF0CTypeScript 3.7 \u73B0\u5728\u80FD\u591F\u5728 <code>.d.ts</code> \u6587\u4EF6\u4E2D\u7F16\u8BD1\u51FA <code>get</code>/<code>set</code>\uFF0C\u8FD9\u53EF\u80FD\u5BF9 3.5 \u548C\u66F4\u4F4E\u7248\u672C\u7684 TypeScript \u4F7F\u7528\u8005\u6765\u8BF4\u662F\u7834\u574F\u6027\u53D8\u66F4\u3002 TypeScript 3.6 \u7684\u4F7F\u7528\u8005\u4E0D\u4F1A\u53D7\u5F71\u54CD\uFF0C\u56E0\u4E3A\u8BE5\u7248\u672C\u5BF9\u8FD9\u4E2A\u529F\u80FD\u5DF2\u7ECF\u8FDB\u884C\u4E86\u9884\u517C\u5BB9\u3002</p><p><code>useDefineForClassFields</code> \u9009\u9879\u867D\u7136\u81EA\u8EAB\u6CA1\u6709\u7834\u574F\u6027\u53D8\u66F4\uFF0C\u4F46\u4E0D\u6392\u9664\u4EE5\u4E0B\u60C5\u5F62\uFF1A</p><ul><li>\u5728\u6D3E\u751F\u7C7B\u4E2D\u7528\u5C5E\u6027\u58F0\u660E\u8986\u76D6\u4E86\u57FA\u7C7B\u7684\u8BBF\u95EE\u5668</li><li>\u8986\u76D6\u58F0\u660E\u5C5E\u6027\uFF0C\u4F46\u662F\u6CA1\u6709\u521D\u59CB\u503C</li></ul><p>\u8981\u4E86\u89E3\u5168\u90E8\u7684\u5F71\u54CD\uFF0C\u8BF7\u67E5\u770B <a href="#usedefineforclassfields-%e7%bc%96%e8%af%91%e9%80%89%e9%a1%b9%e5%92%8c-declare-%e5%b1%9e%e6%80%a7%e4%bf%ae%e9%a5%b0%e7%ac%a6">\u4E0A\u9762\u5173\u4E8E <code>useDefineForClassFields</code> \u7684\u7AE0\u8282</a>\u3002</p><h3 id="\u51FD\u6570\u771F\u503C\u68C0\u67E5" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u771F\u503C\u68C0\u67E5" aria-hidden="true">#</a> \u51FD\u6570\u771F\u503C\u68C0\u67E5</h3><p>\u6B63\u5982\u4E0A\u6587\u63D0\u5230\u7684\uFF0C\u73B0\u5728\u5F53\u51FD\u6570\u5728 <code>if</code> \u6761\u4EF6\u8BED\u53E5\u4E2D\u672A\u88AB\u8C03\u7528\u65F6 TypeScript \u4F1A\u62A5\u9519\u3002 \u5F53 <code>if</code> \u6761\u4EF6\u8BED\u53E5\u4E2D\u5224\u65AD\u7684\u662F\u51FD\u6570\u65F6\u5C06\u4F1A\u62A5\u9519\uFF0C\u9664\u975E\u7B26\u5408\u4EE5\u4E0B\u60C5\u5F62\uFF1A</p><ul><li>\u8BE5\u51FD\u6570\u662F\u53EF\u9009\u5C5E\u6027</li><li>\u672A\u5F00\u542F <code>strictNullChecks</code> \u9009\u9879</li><li>\u8BE5\u51FD\u6570\u5728 <code>if</code> \u7684\u4EE3\u7801\u5757\u4E2D\u6709\u88AB\u8C03\u7528</li></ul><h3 id="\u672C\u5730\u548C\u5BFC\u5165\u7684\u7C7B\u578B\u58F0\u660E\u73B0\u5728\u4F1A\u4EA7\u751F\u51B2\u7A81" tabindex="-1"><a class="header-anchor" href="#\u672C\u5730\u548C\u5BFC\u5165\u7684\u7C7B\u578B\u58F0\u660E\u73B0\u5728\u4F1A\u4EA7\u751F\u51B2\u7A81" aria-hidden="true">#</a> \u672C\u5730\u548C\u5BFC\u5165\u7684\u7C7B\u578B\u58F0\u660E\u73B0\u5728\u4F1A\u4EA7\u751F\u51B2\u7A81</h3><p>TypeScript \u4E4B\u524D\u6709\u4E00\u4E2A bug\uFF0C\u5BFC\u81F4\u5141\u8BB8\u4EE5\u4E0B\u4EE3\u7801\u7ED3\u6784\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// ./someOtherModule.ts</span>
<span class="token keyword">interface</span> <span class="token class-name">SomeType</span> <span class="token punctuation">{</span>
    y<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// ./myModule.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> SomeType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./someOtherModule&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">SomeType</span> <span class="token punctuation">{</span>
    x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span>arg<span class="token operator">:</span> SomeType<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arg<span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Error! &#39;x&#39; doesn&#39;t exist on &#39;SomeType&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>\u8FD9\u91CC\uFF0C<code>SomeType</code> \u540C\u65F6\u6765\u6E90\u4E8E <code>import</code> \u58F0\u660E\u548C\u672C\u5730 <code>interface</code> \u58F0\u660E\u3002 \u51FA\u4EBA\u610F\u6599\u7684\u662F\uFF0C\u5728\u6A21\u5757\u5185\u90E8\uFF0C<code>SomeType</code> \u53EA\u4F1A\u6307\u5411 <code>import</code> \u7684\u5B9A\u4E49\uFF0C\u800C\u672C\u5730\u58F0\u660E\u7684 <code>SomeType</code> \u4EC5\u5728\u53E6\u4E00\u4E2A\u6587\u4EF6\u7684\u5BFC\u5165\u4E2D\u8D77\u6548\u3002 \u8FD9\u5F88\u4EE4\u4EBA\u56F0\u60D1\uFF0C\u6211\u4EEC\u5BF9\u7C7B\u4F3C\u7684\u4E2A\u4F8B\u8FDB\u884C\u7684\u8C03\u67E5\u8868\u660E\uFF0C\u5E7F\u5927\u5F00\u53D1\u8005\u901A\u5E38\u7406\u89E3\u7684\u60C5\u51B5\u4E0D\u4E00\u6837\u3002</p>`,12),xs=n("\u5728 TypeScript 3.7 \u4E2D\uFF0C"),Ts={href:"https://github.com/microsoft/TypeScript/pull/31231",target:"_blank",rel:"noopener noreferrer"},qs=n("\u8FD9\u4E2A\u95EE\u9898\u4E2D\u7684\u91CD\u590D\u58F0\u660E\u73B0\u5728\u53EF\u4EE5\u88AB\u6B63\u786E\u5730\u8BC6\u522B\u4E3A\u4E00\u4E2A\u9519\u8BEF"),As=n("\u3002 \u5408\u7406\u7684\u4FEE\u590D\u65B9\u6848\u53D6\u51B3\u4E8E\u5F00\u53D1\u8005\u7684\u539F\u59CB\u610F\u56FE\uFF0C\u5E76\u5E94\u8BE5\u9010\u6848\u89E3\u51B3\u3002 \u901A\u5E38\uFF0C\u547D\u540D\u51B2\u7A81\u4E0D\u662F\u6545\u610F\u7684\uFF0C\u6700\u597D\u7684\u529E\u6CD5\u662F\u91CD\u547D\u540D\u5BFC\u5165\u7684\u90A3\u4E2A\u7C7B\u578B\u3002 \u5982\u679C\u662F\u8981\u6269\u5C55\u5BFC\u5165\u7684\u7C7B\u578B\uFF0C\u5219\u53EF\u4EE5\u7F16\u5199\u6A21\u5757\u6269\u5C55\uFF08module augmentation\uFF09\u6765\u4EE3\u66FF\u3002"),Ds=s("h3",{id:"_3-7-api-\u53D8\u5316",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_3-7-api-\u53D8\u5316","aria-hidden":"true"},"#"),n(" 3.7 API \u53D8\u5316")],-1),Js=s("p",null,[n("\u4E3A\u4E86\u5B9E\u73B0\u4E0A\u6587\u4E2D\u63D0\u5230\u7684\u9012\u5F52\u7684\u7C7B\u578B\u522B\u540D\u6A21\u5F0F\uFF0C"),s("code",null,"TypeReference"),n(" \u63A5\u53E3\u5DF2\u7ECF\u79FB\u9664\u4E86 "),s("code",null,"typeArguments"),n(" \u5C5E\u6027\u3002\u5F00\u53D1\u8005\u5E94\u8BE5\u5728 "),s("code",null,"TypeChecker"),n(" \u5B9E\u4F8B\u4E0A\u4F7F\u7528 "),s("code",null,"getTypeArguments"),n(" \u51FD\u6570\u6765\u4EE3\u66FF\u3002")],-1);function Os(Cs,Ns){const a=t("ExternalLinkIcon");return o(),c(l,null,[i,k,s("p",null,[s("a",d,[b,p(a)])]),s("p",null,[m,s("a",y,[g,p(a)]),h]),f,s("p",null,[_,s("a",w,[v,p(a)]),S,s("a",x,[T,p(a)]),q]),A,s("p",null,[s("a",D,[J,p(a)])]),O,s("p",null,[C,N,j,F,P,s("a",E,[U,p(a)]),V,I,R]),z,s("p",null,[W,s("a",B,[H,p(a)]),L,s("a",M,[$,p(a)]),K,s("a",Q,[G,p(a)]),X,s("a",Y,[Z,p(a)]),nn]),sn,s("p",null,[s("a",an,[pn,p(a)])]),en,s("p",null,[tn,s("a",on,[cn,p(a)]),ln]),rn,un,s("p",null,[kn,dn,bn,s("a",mn,[yn,gn,hn,p(a)]),fn,_n,wn]),vn,s("p",null,[Sn,s("a",xn,[Tn,p(a)]),qn]),An,s("p",null,[s("a",Dn,[Jn,p(a)])]),On,s("p",null,[s("a",Cn,[Nn,p(a)]),jn]),Fn,s("p",null,[Pn,s("a",En,[Un,p(a)]),Vn]),In,s("p",null,[Rn,s("a",zn,[Wn,p(a)]),Bn]),Hn,s("p",null,[Ln,s("a",Mn,[$n,p(a)]),Kn]),Qn,s("p",null,[Gn,s("a",Xn,[Yn,p(a)]),Zn]),ns,s("p",null,[ss,s("a",as,[ps,p(a)]),es,s("a",ts,[os,p(a)]),cs,s("a",ls,[rs,p(a)]),us]),is,ks,ds,s("p",null,[bs,s("a",ms,[ys,p(a)]),gs]),hs,s("p",null,[s("a",fs,[_s,ws,p(a)]),vs]),Ss,s("p",null,[xs,s("a",Ts,[qs,p(a)]),As]),Ds,Js],64)}var Ps=r(u,[["render",Os]]);export{Ps as default};
