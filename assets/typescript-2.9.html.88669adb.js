import{r as t,o,c,a as s,b as e,F as l,e as a,d as n}from"./app.0186264c.js";import{_ as r}from"./plugin-vue_export-helper.21dcd24c.js";const i={},u=a(`<h1 id="typescript-2-9" tabindex="-1"><a class="header-anchor" href="#typescript-2-9" aria-hidden="true">#</a> TypeScript 2.9</h1><h2 id="keyof\u548C\u6620\u5C04\u7C7B\u578B\u652F\u6301\u7528number\u548Csymbol\u547D\u540D\u7684\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#keyof\u548C\u6620\u5C04\u7C7B\u578B\u652F\u6301\u7528number\u548Csymbol\u547D\u540D\u7684\u5C5E\u6027" aria-hidden="true">#</a> <code>keyof</code>\u548C\u6620\u5C04\u7C7B\u578B\u652F\u6301\u7528<code>number</code>\u548C<code>symbol</code>\u547D\u540D\u7684\u5C5E\u6027</h2><p>TypeScript 2.9\u589E\u52A0\u4E86\u5728\u7D22\u5F15\u7C7B\u578B\u548C\u6620\u5C04\u7C7B\u578B\u4E0A\u652F\u6301\u7528<code>number</code>\u548C<code>symbol</code>\u547D\u540D\u5C5E\u6027\u3002 \u5728\u4E4B\u524D\uFF0C<code>keyof</code>\u64CD\u4F5C\u7B26\u548C\u6620\u5C04\u7C7B\u578B\u53EA\u652F\u6301<code>string</code>\u547D\u540D\u7684\u5C5E\u6027\u3002</p><p>\u6539\u52A8\u5305\u62EC\uFF1A</p><ul><li>\u5BF9\u67D0\u4E9B\u7C7B\u578B<code>T</code>\uFF0C\u7D22\u5F15\u7C7B\u578B<code>keyof T</code>\u662F<code>string | number | symbol</code>\u7684\u5B50\u7C7B\u578B\u3002</li><li>\u6620\u5C04\u7C7B\u578B<code>{ [P in K]: XXX }</code>\uFF0C\u5176\u4E2D<code>K</code>\u5141\u8BB8\u662F\u53EF\u4EE5\u8D4B\u503C\u7ED9<code>string | number | symbol</code>\u7684\u4EFB\u4F55\u503C\u3002</li><li>\u9488\u5BF9\u6CDB\u578B<code>T</code>\u7684\u5BF9\u8C61\u7684<code>for...in</code>\u8BED\u53E5\uFF0C\u8FED\u4EE3\u53D8\u91CF\u63A8\u65AD\u7C7B\u578B\u4E4B\u524D\u4E3A<code>keyof T</code>\uFF0C\u73B0\u5728\u662F<code>Extract&lt;keyof T, string&gt;</code>\u3002\uFF08\u6362\u53E5\u8BDD\u8BF4\uFF0C\u662F<code>keyof T</code>\u7684\u5B50\u96C6\uFF0C\u5B83\u4EC5\u5305\u542B\u7C7B\u5B57\u7B26\u4E32\u7684\u503C\u3002\uFF09</li></ul><p>\u5BF9\u4E8E\u5BF9\u8C61\u7C7B\u578B<code>X</code>\uFF0C<code>keyof X</code>\u5C06\u6309\u4EE5\u4E0B\u65B9\u5F0F\u89E3\u6790\uFF1A</p><ul><li>\u5982\u679C<code>X</code>\u5E26\u6709\u5B57\u7B26\u4E32\u7D22\u5F15\u7B7E\u540D\uFF0C\u5219<code>keyof X</code>\u4E3A<code>string</code>\uFF0C<code>number</code>\u548C\u8868\u793Asymbol-like\u5C5E\u6027\u7684\u5B57\u9762\u91CF\u7C7B\u578B\u7684\u8054\u5408\uFF0C\u5426\u5219</li><li>\u5982\u679C<code>X</code>\u5E26\u6709\u6570\u5B57\u7D22\u5F15\u7B7E\u540D\uFF0C\u5219<code>keyof X</code>\u4E3A<code>number</code>\u548C\u8868\u793Astring-like\u548Csymbol-like\u5C5E\u6027\u7684\u5B57\u9762\u91CF\u7C7B\u578B\u7684\u8054\u5408\uFF0C\u5426\u5219</li><li><code>keyof X</code>\u4E3A\u8868\u793Astring-like\uFF0Cnumber-like\u548Csymbol-like\u5C5E\u6027\u7684\u5B57\u9762\u91CF\u7C7B\u578B\u7684\u8054\u5408\u3002</li></ul><p>\u5728\u4F55\u5904\uFF1A</p><ul><li>\u5BF9\u8C61\u7C7B\u578B\u7684string-like\u5C5E\u6027\uFF0C\u662F\u90A3\u4E9B\u4F7F\u7528\u6807\u8BC6\u7B26\uFF0C\u5B57\u7B26\u4E32\u5B57\u9762\u91CF\u6216\u8BA1\u7B97\u540E\u503C\u4E3A\u5B57\u7B26\u4E32\u5B57\u9762\u91CF\u7C7B\u578B\u7684\u5C5E\u6027\u540D\u6240\u58F0\u660E\u7684\u3002</li><li>\u5BF9\u8C61\u7C7B\u578B\u7684number-like\u5C5E\u6027\u662F\u90A3\u4E9B\u4F7F\u7528\u6570\u5B57\u5B57\u9762\u91CF\u6216\u8BA1\u7B97\u540E\u503C\u4E3A\u6570\u5B57\u5B57\u9762\u91CF\u7C7B\u578B\u7684\u5C5E\u6027\u540D\u6240\u58F0\u660E\u7684\u3002</li><li>\u5BF9\u8C61\u7C7B\u578B\u7684symbol-like\u5C5E\u6027\u662F\u90A3\u4E9B\u4F7F\u7528\u8BA1\u7B97\u540E\u503C\u4E3Asymbol\u5B57\u9762\u91CF\u7C7B\u578B\u7684\u5C5E\u6027\u540D\u6240\u58F0\u660E\u7684\u3002</li></ul><p>\u5BF9\u4E8E\u6620\u5C04\u7C7B\u578B<code>{ [P in K]: XXX }</code>\uFF0C<code>K</code>\u7684\u6BCF\u4E2A\u5B57\u7B26\u4E32\u5B57\u9762\u91CF\u7C7B\u578B\u90FD\u4F1A\u5F15\u5165\u4E00\u4E2A\u540D\u5B57\u4E3A\u5B57\u7B26\u4E32\u7684\u5C5E\u6027\uFF0C<code>K</code>\u7684\u6BCF\u4E2A\u6570\u5B57\u5B57\u9762\u91CF\u7C7B\u578B\u90FD\u4F1A\u5F15\u5165\u4E00\u4E2A\u540D\u5B57\u4E3A\u6570\u5B57\u7684\u5C5E\u6027\uFF0C<code>K</code>\u7684\u6BCF\u4E2Asymbol\u5B57\u9762\u91CF\u7C7B\u578B\u90FD\u4F1A\u5F15\u5165\u4E00\u4E2A\u540D\u5B57\u4E3Asymbol\u7684\u5C5E\u6027\u3002 \u5E76\u4E14\uFF0C\u5982\u679C<code>K</code>\u5305\u542B<code>string</code>\u7C7B\u578B\uFF0C\u90A3\u4E2A\u540C\u65F6\u4E5F\u4F1A\u5F15\u5165\u5B57\u7B26\u4E32\u7D22\u5F15\u7C7B\u578B\uFF0C\u5982\u679C<code>K</code>\u5305\u542B<code>number</code>\u7C7B\u578B\uFF0C\u90A3\u4E2A\u540C\u65F6\u4E5F\u4F1A\u5F15\u5165\u6570\u5B57\u7D22\u5F15\u7C7B\u578B\u3002</p><h3 id="\u4F8B\u5B50" tabindex="-1"><a class="header-anchor" href="#\u4F8B\u5B50" aria-hidden="true">#</a> \u4F8B\u5B50</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> c <span class="token operator">=</span> <span class="token string">&quot;c&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> d <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> e <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token keyword">enum</span> <span class="token constant">E1</span> <span class="token punctuation">{</span> <span class="token constant">A</span><span class="token punctuation">,</span> <span class="token constant">B</span><span class="token punctuation">,</span> <span class="token constant">C</span> <span class="token punctuation">}</span>
<span class="token keyword">const</span> <span class="token keyword">enum</span> <span class="token constant">E2</span> <span class="token punctuation">{</span> <span class="token constant">A</span> <span class="token operator">=</span> <span class="token string">&quot;A&quot;</span><span class="token punctuation">,</span> <span class="token constant">B</span> <span class="token operator">=</span> <span class="token string">&quot;B&quot;</span><span class="token punctuation">,</span> <span class="token constant">C</span> <span class="token operator">=</span> <span class="token string">&quot;C&quot;</span> <span class="token punctuation">}</span>

<span class="token keyword">type</span> <span class="token class-name">Foo</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    a<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>       <span class="token comment">// String-like name</span>
    <span class="token number">5</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>       <span class="token comment">// Number-like name</span>
    <span class="token punctuation">[</span>c<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>     <span class="token comment">// String-like name</span>
    <span class="token punctuation">[</span>d<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>     <span class="token comment">// Number-like name</span>
    <span class="token punctuation">[</span>e<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>     <span class="token comment">// Symbol-like name</span>
    <span class="token punctuation">[</span><span class="token constant">E1</span><span class="token punctuation">.</span><span class="token constant">A</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>  <span class="token comment">// Number-like name</span>
    <span class="token punctuation">[</span><span class="token constant">E2</span><span class="token punctuation">.</span><span class="token constant">A</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>  <span class="token comment">// String-like name</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">K1</span></span> <span class="token operator">=</span> <span class="token keyword">keyof</span> Foo<span class="token punctuation">;</span>  <span class="token comment">// &quot;a&quot; | 5 | &quot;c&quot; | 10 | typeof e | E1.A | E2.A</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">K2</span></span> <span class="token operator">=</span> Extract<span class="token operator">&lt;</span><span class="token keyword">keyof</span> Foo<span class="token punctuation">,</span> <span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// &quot;a&quot; | &quot;c&quot; | E2.A</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">K3</span></span> <span class="token operator">=</span> Extract<span class="token operator">&lt;</span><span class="token keyword">keyof</span> Foo<span class="token punctuation">,</span> <span class="token builtin">number</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// 5 | 10 | E1.A</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">K4</span></span> <span class="token operator">=</span> Extract<span class="token operator">&lt;</span><span class="token keyword">keyof</span> Foo<span class="token punctuation">,</span> <span class="token builtin">symbol</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// typeof e</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>\u73B0\u5728\u901A\u8FC7\u5728\u952E\u503C\u7C7B\u578B\u91CC\u5305\u542B<code>number</code>\u7C7B\u578B\uFF0C<code>keyof</code>\u5C31\u80FD\u53CD\u6620\u51FA\u6570\u5B57\u7D22\u5F15\u7B7E\u540D\u7684\u5B58\u5728\uFF0C\u56E0\u6B64\u50CF<code>Partial&lt;T&gt;</code>\u548C<code>Readonly&lt;T&gt;</code>\u7684\u6620\u5C04\u7C7B\u578B\u80FD\u591F\u6B63\u786E\u5730\u5904\u7406\u5E26\u6570\u5B57\u7D22\u5F15\u7B7E\u540D\u7684\u5BF9\u8C61\u7C7B\u578B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Arrayish<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    length<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
    <span class="token punctuation">[</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> <span class="token class-name">ReadonlyArrayish<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> Readonly<span class="token operator">&lt;</span>Arrayish<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">;</span>

<span class="token keyword">declare</span> <span class="token keyword">const</span> map<span class="token operator">:</span> ReadonlyArrayish<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> n <span class="token operator">=</span> map<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
<span class="token keyword">let</span> x <span class="token operator">=</span> map<span class="token punctuation">[</span><span class="token number">123</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">// Previously of type any (or an error with --noImplicitAny)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u6B64\u5916\uFF0C\u7531\u4E8E<code>keyof</code>\u652F\u6301\u7528<code>number</code>\u548C<code>symbol</code>\u547D\u540D\u7684\u952E\u503C\uFF0C\u73B0\u5728\u53EF\u4EE5\u5BF9\u5BF9\u8C61\u7684\u6570\u5B57\u5B57\u9762\u91CF\uFF08\u5982\u6570\u5B57\u679A\u4E3E\u7C7B\u578B\uFF09\u548C\u552F\u4E00\u7684symbol\u5C5E\u6027\u7684\u8BBF\u95EE\u8FDB\u884C\u62BD\u8C61\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token keyword">enum</span> Enum <span class="token punctuation">{</span> <span class="token constant">A</span><span class="token punctuation">,</span> <span class="token constant">B</span><span class="token punctuation">,</span> <span class="token constant">C</span> <span class="token punctuation">}</span>

<span class="token keyword">const</span> enumToStringMap <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span>Enum<span class="token punctuation">.</span><span class="token constant">A</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token string">&quot;Name A&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span>Enum<span class="token punctuation">.</span><span class="token constant">B</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token string">&quot;Name B&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span>Enum<span class="token punctuation">.</span><span class="token constant">C</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token string">&quot;Name C&quot;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> sym1 <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> sym2 <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> sym3 <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> symbolToNumberMap <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span>sym1<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span>sym2<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span>sym3<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token number">3</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">KE</span></span> <span class="token operator">=</span> <span class="token keyword">keyof</span> <span class="token keyword">typeof</span> enumToStringMap<span class="token punctuation">;</span>     <span class="token comment">// Enum (i.e. Enum.A | Enum.B | Enum.C)</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">KS</span></span> <span class="token operator">=</span> <span class="token keyword">keyof</span> <span class="token keyword">typeof</span> symbolToNumberMap<span class="token punctuation">;</span>   <span class="token comment">// typeof sym1 | typeof sym2 | typeof sym3</span>

<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">getValue</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>obj<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token constant">K</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">K</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> x1 <span class="token operator">=</span> <span class="token function">getValue</span><span class="token punctuation">(</span>enumToStringMap<span class="token punctuation">,</span> Enum<span class="token punctuation">.</span><span class="token constant">C</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// Returns &quot;Name C&quot;</span>
<span class="token keyword">let</span> x2 <span class="token operator">=</span> <span class="token function">getValue</span><span class="token punctuation">(</span>symbolToNumberMap<span class="token punctuation">,</span> sym3<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// Returns 3</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><p>\u8FD9\u662F\u4E00\u4E2A\u7834\u574F\u6027\u6539\u52A8\uFF1B\u4E4B\u524D\uFF0C<code>keyof</code>\u64CD\u4F5C\u7B26\u548C\u6620\u5C04\u7C7B\u578B\u53EA\u652F\u6301<code>string</code>\u547D\u540D\u7684\u5C5E\u6027\u3002 \u90A3\u4E9B\u628A\u603B\u662F\u628A<code>keyof T</code>\u7684\u7C7B\u578B\u5F53\u505A<code>string</code>\u7684\u4EE3\u7801\u73B0\u5728\u4F1A\u62A5\u9519\u3002</p><h3 id="\u4F8B\u5B50-1" tabindex="-1"><a class="header-anchor" href="#\u4F8B\u5B50-1" aria-hidden="true">#</a> \u4F8B\u5B50</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">useKey</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>o<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> k<span class="token operator">:</span> <span class="token constant">K</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> name<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> k<span class="token punctuation">;</span>  <span class="token comment">// \u9519\u8BEF\uFF1Akeyof T\u4E0D\u80FD\u8D4B\u503C\u7ED9\u5B57\u7B26\u4E32</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="\u63A8\u8350" tabindex="-1"><a class="header-anchor" href="#\u63A8\u8350" aria-hidden="true">#</a> \u63A8\u8350</h3><ul><li><p>\u5982\u679C\u51FD\u6570\u53EA\u80FD\u5904\u7406\u5B57\u7B26\u4E32\u547D\u540D\u5C5E\u6027\u7684\u952E\uFF0C\u5728\u58F0\u660E\u91CC\u4F7F\u7528<code>Extract&lt;keyof T, string&gt;</code>\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">useKey</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">K</span> <span class="token keyword">extends</span> Extract<span class="token operator">&lt;</span><span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">,</span> <span class="token builtin">string</span><span class="token operator">&gt;&gt;</span></span></span><span class="token punctuation">(</span>o<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> k<span class="token operator">:</span> <span class="token constant">K</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> name<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> k<span class="token punctuation">;</span>  <span class="token comment">// OK</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li><li><p>\u5982\u679C\u51FD\u6570\u80FD\u5904\u7406\u4EFB\u4F55\u5C5E\u6027\u7684\u952E\uFF0C\u90A3\u4E48\u53EF\u4EE5\u5728\u4E0B\u6E38\u8FDB\u884C\u6539\u52A8\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">useKey</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>o<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> k<span class="token operator">:</span> <span class="token constant">K</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> name<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">symbol</span> <span class="token operator">=</span> k<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li><li><p>\u5426\u5219\uFF0C\u4F7F\u7528<code>--keyofStringsOnly</code>\u7F16\u8BD1\u5668\u9009\u9879\u6765\u7981\u7528\u65B0\u7684\u884C\u4E3A\u3002</p></li></ul><h2 id="jsx\u5143\u7D20\u91CC\u7684\u6CDB\u578B\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#jsx\u5143\u7D20\u91CC\u7684\u6CDB\u578B\u53C2\u6570" aria-hidden="true">#</a> JSX\u5143\u7D20\u91CC\u7684\u6CDB\u578B\u53C2\u6570</h2><p>JSX\u5143\u7D20\u73B0\u5728\u5141\u8BB8\u4F20\u5165\u7C7B\u578B\u53C2\u6570\u5230\u6CDB\u578B\u7EC4\u4EF6\u91CC\u3002</p><h3 id="\u4F8B\u5B50-2" tabindex="-1"><a class="header-anchor" href="#\u4F8B\u5B50-2" aria-hidden="true">#</a> \u4F8B\u5B50</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">GenericComponent<span class="token operator">&lt;</span><span class="token constant">P</span><span class="token operator">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">React</span><span class="token punctuation">.</span>Component<span class="token operator">&lt;</span><span class="token constant">P</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    internalProp<span class="token operator">:</span> <span class="token constant">P</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> <span class="token class-name">Props</span> <span class="token operator">=</span> <span class="token punctuation">{</span> a<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> b<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> x <span class="token operator">=</span> <span class="token operator">&lt;</span>GenericComponent<span class="token operator">&lt;</span>Props<span class="token operator">&gt;</span> a<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">10</span><span class="token punctuation">}</span> b<span class="token operator">=</span><span class="token string">&quot;hi&quot;</span><span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// OK</span>

<span class="token keyword">const</span> y <span class="token operator">=</span> <span class="token operator">&lt;</span>GenericComponent<span class="token operator">&lt;</span>Props<span class="token operator">&gt;</span> a<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">10</span><span class="token punctuation">}</span> b<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">20</span><span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// Error</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="\u6CDB\u578B\u6807\u8BB0\u6A21\u7248\u91CC\u7684\u6CDB\u578B\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#\u6CDB\u578B\u6807\u8BB0\u6A21\u7248\u91CC\u7684\u6CDB\u578B\u53C2\u6570" aria-hidden="true">#</a> \u6CDB\u578B\u6807\u8BB0\u6A21\u7248\u91CC\u7684\u6CDB\u578B\u53C2\u6570</h2><p>\u6807\u8BB0\u6A21\u7248\u662FECMAScript 2015\u5F15\u5165\u7684\u4E00\u79CD\u8C03\u7528\u5F62\u5F0F\u3002 \u7C7B\u4F3C\u8C03\u7528\u8868\u8FBE\u5F0F\uFF0C\u53EF\u4EE5\u5728\u6807\u8BB0\u6A21\u7248\u91CC\u4F7F\u7528\u6CDB\u578B\u51FD\u6570\uFF0CTypeScript\u4F1A\u63A8\u65AD\u4F7F\u7528\u7684\u7C7B\u578B\u53C2\u6570\u3002</p><p>TypeScript 2.9\u5141\u8BB8\u4F20\u5165\u6CDB\u578B\u53C2\u6570\u5230\u6807\u8BB0\u6A21\u7248\u5B57\u7B26\u4E32\u3002</p><h3 id="\u4F8B\u5B50-3" tabindex="-1"><a class="header-anchor" href="#\u4F8B\u5B50-3" aria-hidden="true">#</a> \u4F8B\u5B50</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">styledComponent</span><span class="token generic class-name"><span class="token operator">&lt;</span>Props<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>strs<span class="token operator">:</span> TemplateStringsArray<span class="token punctuation">)</span><span class="token operator">:</span> Component<span class="token operator">&lt;</span>Props<span class="token operator">&gt;</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">MyProps</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

styledComponent<span class="token operator">&lt;</span>MyProps<span class="token operator">&gt;</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
  font-size: 1.5em;
  text-align: center;
  color: palevioletred;
</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>

<span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">tag</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>strs<span class="token operator">:</span> TemplateStringsArray<span class="token punctuation">,</span> <span class="token operator">...</span>args<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>

<span class="token comment">// inference fails because &#39;number&#39; and &#39;string&#39; are both candidates that conflict</span>
<span class="token keyword">let</span> a <span class="token operator">=</span> tag<span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token operator">&gt;</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token number">100</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token string">&quot;hello&quot;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h2 id="import\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#import\u7C7B\u578B" aria-hidden="true">#</a> <code>import</code>\u7C7B\u578B</h2><p>\u6A21\u5757\u53EF\u4EE5\u5BFC\u5165\u5728\u5176\u5B83\u6A21\u5757\u91CC\u58F0\u660E\u7684\u7C7B\u578B\u3002\u4F46\u662F\u975E\u6A21\u5757\u7684\u5168\u5C40\u811A\u672C\u4E0D\u80FD\u8BBF\u95EE\u6A21\u5757\u91CC\u58F0\u660E\u7684\u7C7B\u578B\u3002\u8FD9\u91CC\uFF0C<code>import</code>\u7C7B\u578B\u767B\u573A\u4E86\u3002</p><p>\u5728\u7C7B\u578B\u6CE8\u91CA\u7684\u4F4D\u7F6E\u4F7F\u7528<code>import(&quot;mod&quot;)</code>\uFF0C\u5C31\u53EF\u4EE5\u8BBF\u95EE\u4E00\u4E2A\u6A21\u5757\u548C\u5B83\u5BFC\u51FA\u7684\u58F0\u660E\uFF0C\u800C\u4E0D\u5FC5\u5BFC\u5165\u5B83\u3002</p><h3 id="\u4F8B\u5B50-4" tabindex="-1"><a class="header-anchor" href="#\u4F8B\u5B50-4" aria-hidden="true">#</a> \u4F8B\u5B50</h3><p>\u5728\u4E00\u4E2A\u6A21\u5757\u6587\u4EF6\u91CC\uFF0C\u6709\u4E00\u4E2A<code>Pet</code>\u7C7B\u7684\u58F0\u660E\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// module.d.ts</span>

<span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">class</span> <span class="token class-name">Pet</span> <span class="token punctuation">{</span>
   name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u5B83\u53EF\u4EE5\u88AB\u7528\u5728\u975E\u6A21\u5757\u6587\u4EF6<code>global-script.ts</code>\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// global-script.ts</span>

<span class="token keyword">function</span> <span class="token function">adopt</span><span class="token punctuation">(</span>p<span class="token operator">:</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&quot;./module&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Pet<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Adopting </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>p<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">...</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u5B83\u4E5F\u53EF\u4EE5\u88AB\u653E\u5728<code>.js</code>\u6587\u4EF6\u7684JSDoc\u6CE8\u91CA\u91CC\uFF0C\u6765\u5F15\u7528\u6A21\u5757\u91CC\u7684\u7C7B\u578B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// a.js</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token parameter">p</span> <span class="token punctuation">{</span> import(&quot;./module&quot;).Pet <span class="token punctuation">}</span>
 */</span>
<span class="token keyword">function</span> <span class="token function">walk</span><span class="token punctuation">(</span><span class="token parameter">p</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Walking </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>p<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">...</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="\u653E\u5F00\u58F0\u660E\u751F\u6210\u65F6\u53EF\u89C1\u6027\u89C4\u5219" tabindex="-1"><a class="header-anchor" href="#\u653E\u5F00\u58F0\u660E\u751F\u6210\u65F6\u53EF\u89C1\u6027\u89C4\u5219" aria-hidden="true">#</a> \u653E\u5F00\u58F0\u660E\u751F\u6210\u65F6\u53EF\u89C1\u6027\u89C4\u5219</h2><p>\u968F\u7740<code>import</code>\u7C7B\u578B\u7684\u5230\u6765\uFF0C\u8BB8\u591A\u5728\u58F0\u660E\u6587\u4EF6\u751F\u6210\u9636\u6BB5\u62A5\u7684\u53EF\u89C1\u6027\u9519\u8BEF\u53EF\u4EE5\u88AB\u7F16\u8BD1\u5668\u6B63\u786E\u5730\u5904\u7406\uFF0C\u800C\u4E0D\u9700\u8981\u6539\u53D8\u8F93\u5165\u3002</p><p>\u4F8B\u5982\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createHash <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;crypto&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> hash <span class="token operator">=</span> <span class="token function">createHash</span><span class="token punctuation">(</span><span class="token string">&quot;sha256&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//           ^^^^</span>
<span class="token comment">// Exported variable &#39;hash&#39; has or is using name &#39;Hash&#39; from external module &quot;crypto&quot; but cannot be named.</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>TypeScript 2.9\u4E0D\u4F1A\u62A5\u9519\uFF0C\u751F\u6210\u6587\u4EF6\u5982\u4E0B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">const</span> hash<span class="token operator">:</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&quot;crypto&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Hash<span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="\u652F\u6301import-meta" tabindex="-1"><a class="header-anchor" href="#\u652F\u6301import-meta" aria-hidden="true">#</a> \u652F\u6301<code>i<wbr>mport.meta</code></h2>`,47),k=n("TypeScript 2.9\u5F15\u5165\u5BF9"),d=s("code",null,[n("i"),s("wbr"),n("mport.meta")],-1),m=n("\u7684\u652F\u6301\uFF0C\u5B83\u662F\u5F53\u524D"),b={href:"https://github.com/tc39/proposal-import-meta",target:"_blank",rel:"noopener noreferrer"},y=n("TC39\u5EFA\u8BAE"),g=n("\u91CC\u7684\u4E00\u4E2A\u5143\u5C5E\u6027\u3002"),h=a(`<p><code>i<wbr>mport.meta</code>\u7C7B\u578B\u662F\u5168\u5C40\u7684<code>ImportMeta</code>\u7C7B\u578B\uFF0C\u5B83\u5728<code>lib.es5.d.ts</code>\u91CC\u5B9A\u4E49\u3002 \u8FD9\u4E2A\u63A5\u53E3\u5730\u4F7F\u7528\u5341\u5206\u6709\u9650\u3002 \u6DFB\u52A0\u4F17\u6240\u5468\u77E5\u7684Node\u548C\u6D4F\u89C8\u5668\u5C5E\u6027\u9700\u8981\u8FDB\u884C\u63A5\u53E3\u5408\u5E76\uFF0C\u8FD8\u6709\u53EF\u80FD\u9700\u8981\u6839\u636E\u4E0A\u4E0B\u6587\u6765\u589E\u52A0\u5168\u5C40\u7A7A\u95F4\u3002</p><h3 id="\u4F8B\u5B50-5" tabindex="-1"><a class="header-anchor" href="#\u4F8B\u5B50-5" aria-hidden="true">#</a> \u4F8B\u5B50</h3><p>\u5047\u8BBE<code>__dirname</code>\u6C38\u8FDC\u5B58\u5728\u4E8E<code>i<wbr>mport.meta</code>\uFF0C\u90A3\u4E48\u53EF\u4EE5\u901A\u8FC7\u91CD\u65B0\u5F00\u653E<code>ImportMeta</code>\u63A5\u53E3\u6765\u8FDB\u884C\u58F0\u660E\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// node.d.ts</span>
<span class="token keyword">interface</span> <span class="token class-name">ImportMeta</span> <span class="token punctuation">{</span>
    __dirname<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u7528\u6CD5\u5982\u4E0B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>__dirname <span class="token comment">// Has type &#39;string&#39;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><code>i<wbr>mport.meta</code>\u4EC5\u5728\u8F93\u51FA\u76EE\u6807\u4E3A<code>ESNext</code>\u6A21\u5757\u548CECMAScript\u65F6\u624D\u751F\u6548\u3002</p><h2 id="\u65B0\u7684-resolvejsonmodule" tabindex="-1"><a class="header-anchor" href="#\u65B0\u7684-resolvejsonmodule" aria-hidden="true">#</a> \u65B0\u7684<code>--resolveJsonModule</code></h2><p>\u5728Node.js\u5E94\u7528\u91CC\u7ECF\u5E38\u9700\u8981\u4F7F\u7528<code>.json</code>\u3002TypeScript 2.9\u7684<code>--resolveJsonModule</code>\u5141\u8BB8\u4ECE<code>.json</code>\u6587\u4EF6\u91CC\u5BFC\u5165\uFF0C\u83B7\u53D6\u7C7B\u578B\u3002</p><h3 id="\u4F8B\u5B50-6" tabindex="-1"><a class="header-anchor" href="#\u4F8B\u5B50-6" aria-hidden="true">#</a> \u4F8B\u5B50</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// settings.json</span>

<span class="token punctuation">{</span>
    <span class="token string-property property">&quot;repo&quot;</span><span class="token operator">:</span> <span class="token string">&quot;TypeScript&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;dry&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;debug&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// a.ts</span>

<span class="token keyword">import</span> settings <span class="token keyword">from</span> <span class="token string">&quot;./settings.json&quot;</span><span class="token punctuation">;</span>

settings<span class="token punctuation">.</span>debug <span class="token operator">===</span> <span class="token boolean">true</span><span class="token punctuation">;</span>  <span class="token comment">// OK</span>
settings<span class="token punctuation">.</span>dry <span class="token operator">===</span> <span class="token number">2</span><span class="token punctuation">;</span>  <span class="token comment">// Error: Operator &#39;===&#39; cannot be applied boolean and number</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// tsconfig.json</span>

<span class="token punctuation">{</span>
    <span class="token string-property property">&quot;compilerOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;module&quot;</span><span class="token operator">:</span> <span class="token string">&quot;commonjs&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;resolveJsonModule&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;esModuleInterop&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="\u9ED8\u8BA4-pretty\u8F93\u51FA" tabindex="-1"><a class="header-anchor" href="#\u9ED8\u8BA4-pretty\u8F93\u51FA" aria-hidden="true">#</a> \u9ED8\u8BA4<code>--pretty</code>\u8F93\u51FA</h2>`,14),f=n("\u4ECETypeScript 2.9\u5F00\u59CB\uFF0C\u5982\u679C\u5E94\u7528\u652F\u6301\u5F69\u8272\u6587\u5B57\uFF0C\u90A3\u4E48\u9519\u8BEF\u8F93\u51FA\u65F6\u4F1A\u9ED8\u8BA4\u5E94\u7528"),w=s("code",null,"--pretty",-1),v=n("\u3002 TypeScript\u4F1A\u68C0\u67E5\u8F93\u51FA\u6D41\u662F\u5426\u8BBE\u7F6E\u4E86"),x={href:"https://nodejs.org/api/tty.html",target:"_blank",rel:"noopener noreferrer"},q=s("code",null,"isTty",-1),T=n("\u5C5E\u6027\u3002"),_=a('<p>\u4F7F\u7528<code>--pretty false</code>\u547D\u4EE4\u884C\u9009\u9879\u6216<code>tsconfig.json</code>\u91CC\u8BBE\u7F6E<code>&quot;pretty&quot;: false</code>\u6765\u7981\u7528<code>--pretty</code>\u8F93\u51FA\u3002</p><h2 id="\u65B0\u7684-declarationmap" tabindex="-1"><a class="header-anchor" href="#\u65B0\u7684-declarationmap" aria-hidden="true">#</a> \u65B0\u7684<code>--declarationMap</code></h2><p>\u968F\u7740<code>--declaration</code>\u4E00\u8D77\u542F\u7528<code>--declarationMap</code>\uFF0C\u7F16\u8BD1\u5668\u5728\u751F\u6210<code>.d.ts</code>\u7684\u540C\u65F6\u8FD8\u4F1A\u751F\u6210<code>.d.ts.map</code>\u3002 \u8BED\u8A00\u670D\u52A1\u73B0\u5728\u4E5F\u80FD\u591F\u7406\u89E3\u8FD9\u4E9Bmap\u6587\u4EF6\uFF0C\u5C06\u58F0\u660E\u6587\u4EF6\u6620\u5C04\u5230\u6E90\u7801\u3002</p><p>\u6362\u53E5\u8BDD\u8BF4\uFF0C\u5728\u542F\u7528\u4E86<code>--declarationMap</code>\u540E\u751F\u6210\u7684<code>.d.ts</code>\u6587\u4EF6\u91CC\u70B9\u51FBgo-to-definition\uFF0C\u5C06\u4F1A\u5BFC\u822A\u5230\u6E90\u6587\u4EF6\u91CC\u7684\u4F4D\u7F6E\uFF08<code>.ts</code>\uFF09\uFF0C\u800C\u4E0D\u662F\u5BFC\u822A\u5230<code>.d.ts</code>\u6587\u4EF6\u91CC\u3002</p>',4);function E(S,K){const p=t("ExternalLinkIcon");return o(),c(l,null,[u,s("p",null,[k,d,m,s("a",b,[y,e(p)]),g]),h,s("p",null,[f,w,v,s("a",x,[q,e(p)]),T]),_],64)}var C=r(i,[["render",E]]);export{C as default};
