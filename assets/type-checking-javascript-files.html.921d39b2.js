import{r as p,o as e,c as t,a as o,b as c,w as l,F as r,e as s,d as n}from"./app.fed89489.js";import{_ as u}from"./plugin-vue_export-helper.21dcd24c.js";const i={},k=s(`<h1 id="javascript\u6587\u4EF6\u91CC\u7684\u7C7B\u578B\u68C0\u67E5" tabindex="-1"><a class="header-anchor" href="#javascript\u6587\u4EF6\u91CC\u7684\u7C7B\u578B\u68C0\u67E5" aria-hidden="true">#</a> JavaScript\u6587\u4EF6\u91CC\u7684\u7C7B\u578B\u68C0\u67E5</h1><p>TypeScript 2.3\u4EE5\u540E\u7684\u7248\u672C\u652F\u6301\u4F7F\u7528<code>--checkJs</code>\u5BF9<code>.js</code>\u6587\u4EF6\u8FDB\u884C\u7C7B\u578B\u68C0\u67E5\u548C\u9519\u8BEF\u63D0\u793A\u3002</p><p>\u4F60\u53EF\u4EE5\u901A\u8FC7\u6DFB\u52A0<code>// @ts-nocheck</code>\u6CE8\u91CA\u6765\u5FFD\u7565\u7C7B\u578B\u68C0\u67E5\uFF1B\u76F8\u53CD\uFF0C\u4F60\u53EF\u4EE5\u901A\u8FC7\u53BB\u6389<code>--checkJs</code>\u8BBE\u7F6E\u5E76\u6DFB\u52A0\u4E00\u4E2A<code>// @ts-check</code>\u6CE8\u91CA\u6765\u9009\u5219\u68C0\u67E5\u67D0\u4E9B<code>.js</code>\u6587\u4EF6\u3002 \u4F60\u8FD8\u53EF\u4EE5\u4F7F\u7528<code>// @ts-ignore</code>\u6765\u5FFD\u7565\u672C\u884C\u7684\u9519\u8BEF\u3002 \u5982\u679C\u4F60\u4F7F\u7528\u4E86<code>tsconfig.json</code>\uFF0CJS\u68C0\u67E5\u5C06\u9075\u7167\u4E00\u4E9B\u4E25\u683C\u68C0\u67E5\u6807\u8BB0\uFF0C\u5982<code>noImplicitAny</code>\uFF0C<code>strictNullChecks</code>\u7B49\u3002 \u4F46\u56E0\u4E3AJS\u68C0\u67E5\u662F\u76F8\u5BF9\u5BBD\u677E\u7684\uFF0C\u5728\u4F7F\u7528\u4E25\u683C\u6807\u8BB0\u65F6\u53EF\u80FD\u4F1A\u6709\u4E9B\u51FA\u4E4E\u610F\u6599\u7684\u60C5\u51B5\u3002</p><p>\u5BF9\u6BD4<code>.js</code>\u6587\u4EF6\u548C<code>.ts</code>\u6587\u4EF6\u5728\u7C7B\u578B\u68C0\u67E5\u4E0A\u7684\u5DEE\u5F02\uFF0C\u6709\u5982\u4E0B\u51E0\u70B9\u9700\u8981\u6CE8\u610F\uFF1A</p><h3 id="\u7528jsdoc\u7C7B\u578B\u8868\u793A\u7C7B\u578B\u4FE1\u606F" tabindex="-1"><a class="header-anchor" href="#\u7528jsdoc\u7C7B\u578B\u8868\u793A\u7C7B\u578B\u4FE1\u606F" aria-hidden="true">#</a> \u7528JSDoc\u7C7B\u578B\u8868\u793A\u7C7B\u578B\u4FE1\u606F</h3><p><code>.js</code>\u6587\u4EF6\u91CC\uFF0C\u7C7B\u578B\u53EF\u4EE5\u548C\u5728<code>.ts</code>\u6587\u4EF6\u91CC\u4E00\u6837\u88AB\u63A8\u65AD\u51FA\u6765\u3002 \u540C\u6837\u5730\uFF0C\u5F53\u7C7B\u578B\u4E0D\u80FD\u88AB\u63A8\u65AD\u65F6\uFF0C\u5B83\u4EEC\u53EF\u4EE5\u901A\u8FC7JSDoc\u6765\u6307\u5B9A\uFF0C\u5C31\u597D\u6BD4\u5728<code>.ts</code>\u6587\u4EF6\u91CC\u90A3\u6837\u3002 \u5982\u540CTypeScript\uFF0C<code>--noImplicitAny</code>\u4F1A\u5728\u7F16\u8BD1\u5668\u65E0\u6CD5\u63A8\u65AD\u7C7B\u578B\u7684\u4F4D\u7F6E\u62A5\u9519\u3002 \uFF08\u9664\u4E86\u5BF9\u8C61\u5B57\u9762\u91CF\u7684\u60C5\u51B5\uFF1B\u540E\u9762\u4F1A\u8BE6\u7EC6\u4ECB\u7ECD\uFF09</p><p>JSDoc\u6CE8\u89E3\u4FEE\u9970\u7684\u58F0\u660E\u4F1A\u88AB\u8BBE\u7F6E\u4E3A\u8FD9\u4E2A\u58F0\u660E\u7684\u7C7B\u578B\u3002\u6BD4\u5982\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> */</span>
<span class="token keyword">var</span> x<span class="token punctuation">;</span>

x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>      <span class="token comment">// OK</span>
x <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>  <span class="token comment">// Error: boolean is not assignable to number</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,8),m=n("\u4F60\u53EF\u4EE5\u5728\u8FD9\u91CC\u627E\u5230\u6240\u6709JSDoc\u652F\u6301\u7684\u6A21\u5F0F\uFF0C"),d=n("JSDoc\u6587\u6863"),b=n("\u3002"),y=s(`<h3 id="\u5C5E\u6027\u7684\u63A8\u65AD\u6765\u81EA\u4E8E\u7C7B\u5185\u7684\u8D4B\u503C\u8BED\u53E5" tabindex="-1"><a class="header-anchor" href="#\u5C5E\u6027\u7684\u63A8\u65AD\u6765\u81EA\u4E8E\u7C7B\u5185\u7684\u8D4B\u503C\u8BED\u53E5" aria-hidden="true">#</a> \u5C5E\u6027\u7684\u63A8\u65AD\u6765\u81EA\u4E8E\u7C7B\u5185\u7684\u8D4B\u503C\u8BED\u53E5</h3><p>ES2015\u6CA1\u63D0\u4F9B\u58F0\u660E\u7C7B\u5C5E\u6027\u7684\u65B9\u6CD5\u3002\u5C5E\u6027\u662F\u52A8\u6001\u8D4B\u503C\u7684\uFF0C\u5C31\u50CF\u5BF9\u8C61\u5B57\u9762\u91CF\u4E00\u6837\u3002</p><p>\u5728<code>.js</code>\u6587\u4EF6\u91CC\uFF0C\u7F16\u8BD1\u5668\u4ECE\u7C7B\u5185\u90E8\u7684\u5C5E\u6027\u8D4B\u503C\u8BED\u53E5\u6765\u63A8\u65AD\u5C5E\u6027\u7C7B\u578B\u3002 \u5C5E\u6027\u7684\u7C7B\u578B\u662F\u5728\u6784\u9020\u51FD\u6570\u91CC\u8D4B\u7684\u503C\u7684\u7C7B\u578B\uFF0C\u9664\u975E\u5B83\u6CA1\u5728\u6784\u9020\u51FD\u6570\u91CC\u5B9A\u4E49\u6216\u8005\u5728\u6784\u9020\u51FD\u6570\u91CC\u662F<code>undefined</code>\u6216<code>null</code>\u3002 \u82E5\u662F\u8FD9\u79CD\u60C5\u51B5\uFF0C\u7C7B\u578B\u5C06\u4F1A\u662F\u6240\u6709\u8D4B\u7684\u503C\u7684\u7C7B\u578B\u7684\u8054\u5408\u7C7B\u578B\u3002 \u5728\u6784\u9020\u51FD\u6570\u91CC\u5B9A\u4E49\u7684\u5C5E\u6027\u4F1A\u88AB\u8BA4\u4E3A\u662F\u4E00\u76F4\u5B58\u5728\u7684\uFF0C\u7136\u800C\u90A3\u4E9B\u5728\u65B9\u6CD5\uFF0C\u5B58\u53D6\u5668\u91CC\u5B9A\u4E49\u7684\u5C5E\u6027\u88AB\u5F53\u6210\u53EF\u9009\u7684\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">C</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>constructorOnly <span class="token operator">=</span> <span class="token number">0</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>constructorUnknown <span class="token operator">=</span> <span class="token keyword">undefined</span>
    <span class="token punctuation">}</span>
    <span class="token function">method</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>constructorOnly <span class="token operator">=</span> <span class="token boolean">false</span> <span class="token comment">// error, constructorOnly is a number</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>constructorUnknown <span class="token operator">=</span> <span class="token string">&quot;plunkbat&quot;</span> <span class="token comment">// ok, constructorUnknown is string | undefined</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>methodOnly <span class="token operator">=</span> <span class="token string">&#39;ok&#39;</span>  <span class="token comment">// ok, but methodOnly could also be undefined</span>
    <span class="token punctuation">}</span>
    <span class="token function">method2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>methodOnly <span class="token operator">=</span> <span class="token boolean">true</span>  <span class="token comment">// also, ok, methodOnly&#39;s type is string | boolean | undefined</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>\u5982\u679C\u4E00\u4E2A\u5C5E\u6027\u4ECE\u6CA1\u5728\u7C7B\u5185\u8BBE\u7F6E\u8FC7\uFF0C\u5B83\u4EEC\u4F1A\u88AB\u5F53\u6210\u672A\u77E5\u7684\u3002</p><p>\u5982\u679C\u7C7B\u7684\u5C5E\u6027\u53EA\u662F\u8BFB\u53D6\u7528\u7684\uFF0C\u90A3\u4E48\u5C31\u5728\u6784\u9020\u51FD\u6570\u91CC\u7528JSDoc\u58F0\u660E\u5B83\u7684\u7C7B\u578B\u3002 \u5982\u679C\u5B83\u7A0D\u540E\u4F1A\u88AB\u521D\u59CB\u5316\uFF0C\u4F60\u751A\u81F3\u90FD\u4E0D\u9700\u8981\u5728\u6784\u9020\u51FD\u6570\u91CC\u7ED9\u5B83\u8D4B\u503C\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">C</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span>number <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">}</span></span> */</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>prop <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
        <span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span>number <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">}</span></span> */</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>count<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> c <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">C</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
c<span class="token punctuation">.</span>prop <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>          <span class="token comment">// OK</span>
c<span class="token punctuation">.</span>count <span class="token operator">=</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">;</span>  <span class="token comment">// Error: string is not assignable to number|undefined</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="\u6784\u9020\u51FD\u6570\u7B49\u540C\u4E8E\u7C7B" tabindex="-1"><a class="header-anchor" href="#\u6784\u9020\u51FD\u6570\u7B49\u540C\u4E8E\u7C7B" aria-hidden="true">#</a> \u6784\u9020\u51FD\u6570\u7B49\u540C\u4E8E\u7C7B</h3><p>ES2015\u4EE5\u524D\uFF0CJavascript\u4F7F\u7528\u6784\u9020\u51FD\u6570\u4EE3\u66FF\u7C7B\u3002 \u7F16\u8BD1\u5668\u652F\u6301\u8FD9\u79CD\u6A21\u5F0F\u5E76\u80FD\u591F\u5C06\u6784\u9020\u51FD\u6570\u8BC6\u522B\u4E3AES2015\u7684\u7C7B\u3002 \u5C5E\u6027\u7C7B\u578B\u63A8\u65AD\u673A\u5236\u548C\u4E0A\u9762\u4ECB\u7ECD\u7684\u4E00\u81F4\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token constant">C</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>constructorOnly <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>constructorUnknown <span class="token operator">=</span> <span class="token keyword">undefined</span>
<span class="token punctuation">}</span>
<span class="token class-name">C</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">method</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>constructorOnly <span class="token operator">=</span> <span class="token boolean">false</span> <span class="token comment">// error</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>constructorUnknown <span class="token operator">=</span> <span class="token string">&quot;plunkbat&quot;</span> <span class="token comment">// OK, the type is string | undefined</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="\u652F\u6301commonjs\u6A21\u5757" tabindex="-1"><a class="header-anchor" href="#\u652F\u6301commonjs\u6A21\u5757" aria-hidden="true">#</a> \u652F\u6301CommonJS\u6A21\u5757</h3><p>\u5728<code>.js</code>\u6587\u4EF6\u91CC\uFF0CTypeScript\u80FD\u8BC6\u522B\u51FACommonJS\u6A21\u5757\u3002 \u5BF9<code>exports</code>\u548C<code>module.exports</code>\u7684\u8D4B\u503C\u88AB\u8BC6\u522B\u4E3A\u5BFC\u51FA\u58F0\u660E\u3002 \u76F8\u4F3C\u5730\uFF0C<code>require</code>\u51FD\u6570\u8C03\u7528\u88AB\u8BC6\u522B\u4E3A\u6A21\u5757\u5BFC\u5165\u3002\u4F8B\u5982\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// same as \`import module &quot;fs&quot;\`</span>
<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;fs&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// same as \`export function readFile\`</span>
module<span class="token punctuation">.</span>exports<span class="token punctuation">.</span><span class="token function-variable function">readFile</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">f</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u5BF9JavaScript\u6587\u4EF6\u91CC\u6A21\u5757\u8BED\u6CD5\u7684\u652F\u6301\u6BD4\u5728TypeScript\u91CC\u5BBD\u6CDB\u591A\u4E86\u3002 \u5927\u90E8\u5206\u7684\u8D4B\u503C\u548C\u58F0\u660E\u65B9\u5F0F\u90FD\u662F\u5141\u8BB8\u7684\u3002</p><h3 id="\u7C7B-\u51FD\u6570\u548C\u5BF9\u8C61\u5B57\u9762\u91CF\u662F\u547D\u540D\u7A7A\u95F4" tabindex="-1"><a class="header-anchor" href="#\u7C7B-\u51FD\u6570\u548C\u5BF9\u8C61\u5B57\u9762\u91CF\u662F\u547D\u540D\u7A7A\u95F4" aria-hidden="true">#</a> \u7C7B\uFF0C\u51FD\u6570\u548C\u5BF9\u8C61\u5B57\u9762\u91CF\u662F\u547D\u540D\u7A7A\u95F4</h3><p><code>.js</code>\u6587\u4EF6\u91CC\u7684\u7C7B\u662F\u547D\u540D\u7A7A\u95F4\u3002 \u5B83\u53EF\u4EE5\u7528\u4E8E\u5D4C\u5957\u7C7B\uFF0C\u6BD4\u5982\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">C</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
<span class="token constant">C</span><span class="token punctuation">.</span><span class="token constant">D</span> <span class="token operator">=</span> <span class="token keyword">class</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>ES2015\u4E4B\u524D\u7684\u4EE3\u7801\uFF0C\u5B83\u53EF\u4EE5\u7528\u6765\u6A21\u62DF\u9759\u6001\u65B9\u6CD5\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Outer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token number">2</span>
<span class="token punctuation">}</span>
Outer<span class="token punctuation">.</span><span class="token function-variable function">Inner</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>yy <span class="token operator">=</span> <span class="token number">2</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u5B83\u8FD8\u53EF\u4EE5\u7528\u4E8E\u521B\u5EFA\u7B80\u5355\u7684\u547D\u540D\u7A7A\u95F4\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> ns <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
ns<span class="token punctuation">.</span><span class="token constant">C</span> <span class="token operator">=</span> <span class="token keyword">class</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
ns<span class="token punctuation">.</span><span class="token function-variable function">func</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u540C\u65F6\u8FD8\u652F\u6301\u5176\u5B83\u7684\u53D8\u5316\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u7ACB\u5373\u8C03\u7528\u7684\u51FD\u6570\u8868\u8FBE\u5F0F</span>
<span class="token keyword">var</span> ns <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> n <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
ns<span class="token punctuation">.</span><span class="token constant">CONST</span> <span class="token operator">=</span> <span class="token number">1</span>

<span class="token comment">// defaulting to global</span>
<span class="token keyword">var</span> assign <span class="token operator">=</span> assign <span class="token operator">||</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// code goes here</span>
<span class="token punctuation">}</span>
assign<span class="token punctuation">.</span>extra <span class="token operator">=</span> <span class="token number">1</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="\u5BF9\u8C61\u5B57\u9762\u91CF\u662F\u5F00\u653E\u7684" tabindex="-1"><a class="header-anchor" href="#\u5BF9\u8C61\u5B57\u9762\u91CF\u662F\u5F00\u653E\u7684" aria-hidden="true">#</a> \u5BF9\u8C61\u5B57\u9762\u91CF\u662F\u5F00\u653E\u7684</h3><p><code>.ts</code>\u6587\u4EF6\u91CC\uFF0C\u7528\u5BF9\u8C61\u5B57\u9762\u91CF\u521D\u59CB\u5316\u4E00\u4E2A\u53D8\u91CF\u7684\u540C\u65F6\u4E5F\u7ED9\u5B83\u58F0\u660E\u4E86\u7C7B\u578B\u3002 \u65B0\u7684\u6210\u5458\u4E0D\u80FD\u518D\u88AB\u6DFB\u52A0\u5230\u5BF9\u8C61\u5B57\u9762\u91CF\u4E2D\u3002 \u8FD9\u4E2A\u89C4\u5219\u5728<code>.js</code>\u6587\u4EF6\u91CC\u88AB\u653E\u5BBD\u4E86\uFF1B\u5BF9\u8C61\u5B57\u9762\u91CF\u5177\u6709\u5F00\u653E\u7684\u7C7B\u578B\uFF0C\u5141\u8BB8\u6DFB\u52A0\u5E76\u8BBF\u95EE\u539F\u5148\u6CA1\u6709\u5B9A\u4E49\u7684\u5C5E\u6027\u3002\u4F8B\u5982\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
obj<span class="token punctuation">.</span>b <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>  <span class="token comment">// Allowed</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u5BF9\u8C61\u5B57\u9762\u91CF\u7684\u8868\u73B0\u5C31\u597D\u6BD4\u5177\u6709\u4E00\u4E2A\u9ED8\u8BA4\u7684\u7D22\u5F15\u7B7E\u540D<code>[x:string]: any</code>\uFF0C\u5B83\u4EEC\u53EF\u4EE5\u88AB\u5F53\u6210\u5F00\u653E\u7684\u6620\u5C04\u800C\u4E0D\u662F\u5C01\u95ED\u7684\u5BF9\u8C61\u3002</p><p>\u4E0E\u5176\u5B83JS\u68C0\u67E5\u884C\u4E3A\u76F8\u4F3C\uFF0C\u8FD9\u79CD\u884C\u4E3A\u53EF\u4EE5\u901A\u8FC7\u6307\u5B9AJSDoc\u7C7B\u578B\u6765\u6539\u53D8\uFF0C\u4F8B\u5982\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token punctuation">{</span>a<span class="token operator">:</span> number<span class="token punctuation">}</span><span class="token punctuation">}</span></span> */</span>
<span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
obj<span class="token punctuation">.</span>b <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>  <span class="token comment">// Error, type {a: number} does not have property b</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="null-undefined-\u548C\u7A7A\u6570\u7EC4\u7684\u7C7B\u578B\u662Fany\u6216any" tabindex="-1"><a class="header-anchor" href="#null-undefined-\u548C\u7A7A\u6570\u7EC4\u7684\u7C7B\u578B\u662Fany\u6216any" aria-hidden="true">#</a> null\uFF0Cundefined\uFF0C\u548C\u7A7A\u6570\u7EC4\u7684\u7C7B\u578B\u662Fany\u6216any[]</h3><p>\u4EFB\u4F55\u7528<code>null</code>\uFF0C<code>undefined</code>\u521D\u59CB\u5316\u7684\u53D8\u91CF\uFF0C\u53C2\u6570\u6216\u5C5E\u6027\uFF0C\u5B83\u4EEC\u7684\u7C7B\u578B\u662F<code>any</code>\uFF0C\u5C31\u7B97\u662F\u5728\u4E25\u683C<code>null</code>\u68C0\u67E5\u6A21\u5F0F\u4E0B\u3002 \u4EFB\u4F55\u7528<code>[]</code>\u521D\u59CB\u5316\u7684\u53D8\u91CF\uFF0C\u53C2\u6570\u6216\u5C5E\u6027\uFF0C\u5B83\u4EEC\u7684\u7C7B\u578B\u662F<code>any[]</code>\uFF0C\u5C31\u7B97\u662F\u5728\u4E25\u683C<code>null</code>\u68C0\u67E5\u6A21\u5F0F\u4E0B\u3002 \u552F\u4E00\u7684\u4F8B\u5916\u662F\u50CF\u4E0A\u9762\u90A3\u6837\u6709\u591A\u4E2A\u521D\u59CB\u5316\u5668\u7684\u5C5E\u6027\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Foo</span><span class="token punctuation">(</span><span class="token parameter">i <span class="token operator">=</span> <span class="token keyword">null</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>i<span class="token punctuation">)</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> j <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
    j <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>l <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">var</span> foo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
foo<span class="token punctuation">.</span>l<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>foo<span class="token punctuation">.</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
foo<span class="token punctuation">.</span>l<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&quot;end&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="\u51FD\u6570\u53C2\u6570\u662F\u9ED8\u8BA4\u53EF\u9009\u7684" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u53C2\u6570\u662F\u9ED8\u8BA4\u53EF\u9009\u7684" aria-hidden="true">#</a> \u51FD\u6570\u53C2\u6570\u662F\u9ED8\u8BA4\u53EF\u9009\u7684</h3><p>\u7531\u4E8E\u5728ES2015\u4E4B\u524D\u65E0\u6CD5\u6307\u5B9A\u53EF\u9009\u53C2\u6570\uFF0C\u56E0\u6B64<code>.js</code>\u6587\u4EF6\u91CC\u6240\u6709\u51FD\u6570\u53C2\u6570\u90FD\u88AB\u5F53\u505A\u662F\u53EF\u9009\u7684\u3002 \u4F7F\u7528\u6BD4\u9884\u671F\u5C11\u7684\u53C2\u6570\u8C03\u7528\u51FD\u6570\u662F\u5141\u8BB8\u7684\u3002</p><p>\u9700\u8981\u6CE8\u610F\u7684\u4E00\u70B9\u662F\uFF0C\u4F7F\u7528\u8FC7\u591A\u7684\u53C2\u6570\u8C03\u7528\u51FD\u6570\u4F1A\u5F97\u5230\u4E00\u4E2A\u9519\u8BEF\u3002</p><p>\u4F8B\u5982\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a <span class="token operator">+</span> <span class="token string">&quot; &quot;</span> <span class="token operator">+</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">bar</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment">// OK, second argument considered optional</span>
<span class="token function">bar</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">bar</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Error, too many arguments</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u4F7F\u7528JSDoc\u6CE8\u89E3\u7684\u51FD\u6570\u4F1A\u88AB\u4ECE\u8FD9\u6761\u89C4\u5219\u91CC\u79FB\u9664\u3002 \u4F7F\u7528JSDoc\u53EF\u9009\u53C2\u6570\u8BED\u6CD5\u6765\u8868\u793A\u53EF\u9009\u6027\u3002\u6BD4\u5982\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token optional-parameter"><span class="token punctuation">[</span><span class="token parameter">somebody</span><span class="token punctuation">]</span></span> - Somebody&#39;s name.
 */</span>
<span class="token keyword">function</span> <span class="token function">sayHello</span><span class="token punctuation">(</span><span class="token parameter">somebody</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>somebody<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        somebody <span class="token operator">=</span> <span class="token string">&#39;John Doe&#39;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Hello &#39;</span> <span class="token operator">+</span> somebody<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">sayHello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="\u7531arguments\u63A8\u65AD\u51FA\u7684var-args\u53C2\u6570\u58F0\u660E" tabindex="-1"><a class="header-anchor" href="#\u7531arguments\u63A8\u65AD\u51FA\u7684var-args\u53C2\u6570\u58F0\u660E" aria-hidden="true">#</a> \u7531<code>arguments</code>\u63A8\u65AD\u51FA\u7684var-args\u53C2\u6570\u58F0\u660E</h3><p>\u5982\u679C\u4E00\u4E2A\u51FD\u6570\u7684\u51FD\u6570\u4F53\u5185\u6709\u5BF9<code>arguments</code>\u7684\u5F15\u7528\uFF0C\u90A3\u4E48\u8FD9\u4E2A\u51FD\u6570\u4F1A\u9690\u5F0F\u5730\u88AB\u8BA4\u4E3A\u5177\u6709\u4E00\u4E2Avar-arg\u53C2\u6570\uFF08\u6BD4\u5982:<code>(...arg: any[]) =&gt; any</code>)\uFF09\u3002\u4F7F\u7528JSDoc\u7684var-arg\u8BED\u6CD5\u6765\u6307\u5B9A<code>arguments</code>\u7684\u7C7B\u578B\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/** <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">...</span>number<span class="token punctuation">}</span></span> <span class="token parameter">args</span> */</span>
<span class="token keyword">function</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token comment">/* numbers */</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> total <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arguments<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      total <span class="token operator">+=</span> arguments<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> total
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="\u672A\u6307\u5B9A\u7684\u7C7B\u578B\u53C2\u6570\u9ED8\u8BA4\u4E3Aany" tabindex="-1"><a class="header-anchor" href="#\u672A\u6307\u5B9A\u7684\u7C7B\u578B\u53C2\u6570\u9ED8\u8BA4\u4E3Aany" aria-hidden="true">#</a> \u672A\u6307\u5B9A\u7684\u7C7B\u578B\u53C2\u6570\u9ED8\u8BA4\u4E3A<code>any</code></h3><p>\u7531\u4E8EJavaScript\u91CC\u6CA1\u6709\u4E00\u79CD\u81EA\u7136\u7684\u8BED\u6CD5\u6765\u6307\u5B9A\u6CDB\u578B\u53C2\u6570\uFF0C\u56E0\u6B64\u672A\u6307\u5B9A\u7684\u53C2\u6570\u7C7B\u578B\u9ED8\u8BA4\u4E3A<code>any</code>\u3002</p><h4 id="\u5728extends\u8BED\u53E5\u4E2D" tabindex="-1"><a class="header-anchor" href="#\u5728extends\u8BED\u53E5\u4E2D" aria-hidden="true">#</a> \u5728extends\u8BED\u53E5\u4E2D\uFF1A</h4><p>\u4F8B\u5982\uFF0C<code>React.Component</code>\u88AB\u5B9A\u4E49\u6210\u5177\u6709\u4E24\u4E2A\u7C7B\u578B\u53C2\u6570\uFF0C<code>Props</code>\u548C<code>State</code>\u3002 \u5728\u4E00\u4E2A<code>.js</code>\u6587\u4EF6\u91CC\uFF0C\u6CA1\u6709\u4E00\u4E2A\u5408\u6CD5\u7684\u65B9\u5F0F\u5728extends\u8BED\u53E5\u91CC\u6307\u5B9A\u5B83\u4EEC\u3002\u9ED8\u8BA4\u5730\u53C2\u6570\u7C7B\u578B\u4E3A<code>any</code>\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">MyComponent</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span>
    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>b<span class="token punctuation">;</span> <span class="token comment">// Allowed, since this.props is of type any</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u4F7F\u7528JSDoc\u7684<code>@augments</code>\u6765\u660E\u786E\u5730\u6307\u5B9A\u7C7B\u578B\u3002\u4F8B\u5982\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@augments</span> <span class="token class-name"><span class="token punctuation">{</span>Component<span class="token punctuation">&lt;</span><span class="token punctuation">{</span>a<span class="token operator">:</span> number<span class="token punctuation">}</span><span class="token punctuation">,</span> State<span class="token punctuation">&gt;</span><span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">class</span> <span class="token class-name">MyComponent</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span>
    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>b<span class="token punctuation">;</span> <span class="token comment">// Error: b does not exist on {a:number}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h4 id="\u5728jsdoc\u5F15\u7528\u4E2D" tabindex="-1"><a class="header-anchor" href="#\u5728jsdoc\u5F15\u7528\u4E2D" aria-hidden="true">#</a> \u5728JSDoc\u5F15\u7528\u4E2D\uFF1A</h4><p>JSDoc\u91CC\u672A\u6307\u5B9A\u7684\u7C7B\u578B\u53C2\u6570\u9ED8\u8BA4\u4E3A<code>any</code>\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/** <span class="token keyword">@type</span><span class="token punctuation">{</span>Array<span class="token punctuation">}</span> */</span>
<span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

x<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// OK</span>
x<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&quot;string&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// OK, x is of type Array&lt;any&gt;</span>

<span class="token doc-comment comment">/** <span class="token keyword">@type</span><span class="token punctuation">{</span>Array.&lt;number&gt;<span class="token punctuation">}</span> */</span>
<span class="token keyword">var</span> y <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

y<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// OK</span>
y<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&quot;string&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Error, string is not assignable to number</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h4 id="\u5728\u51FD\u6570\u8C03\u7528\u4E2D" tabindex="-1"><a class="header-anchor" href="#\u5728\u51FD\u6570\u8C03\u7528\u4E2D" aria-hidden="true">#</a> \u5728\u51FD\u6570\u8C03\u7528\u4E2D</h4><p>\u6CDB\u578B\u51FD\u6570\u7684\u8C03\u7528\u4F7F\u7528<code>arguments</code>\u6765\u63A8\u65AD\u6CDB\u578B\u53C2\u6570\u3002\u6709\u65F6\u5019\uFF0C\u8FD9\u4E2A\u6D41\u7A0B\u4E0D\u80FD\u591F\u63A8\u65AD\u51FA\u7C7B\u578B\uFF0C\u5927\u591A\u662F\u56E0\u4E3A\u7F3A\u5C11\u63A8\u65AD\u7684\u6E90\uFF1B\u5728\u8FD9\u79CD\u60C5\u51B5\u4E0B\uFF0C\u7C7B\u578B\u53C2\u6570\u7C7B\u578B\u9ED8\u8BA4\u4E3A<code>any</code>\u3002\u4F8B\u5982\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

p<span class="token punctuation">;</span> <span class="token comment">// Promise&lt;any&gt;;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="\u652F\u6301\u7684jsdoc" tabindex="-1"><a class="header-anchor" href="#\u652F\u6301\u7684jsdoc" aria-hidden="true">#</a> \u652F\u6301\u7684JSDoc <a id="supported-jsdoc"></a></h2><p>\u4E0B\u9762\u7684\u5217\u8868\u5217\u51FA\u4E86\u5F53\u524D\u6240\u652F\u6301\u7684JSDoc\u6CE8\u89E3\uFF0C\u4F60\u53EF\u4EE5\u7528\u5B83\u4EEC\u5728JavaScript\u6587\u4EF6\u91CC\u6DFB\u52A0\u7C7B\u578B\u4FE1\u606F\u3002</p><p>\u6CE8\u610F\uFF0C\u6CA1\u6709\u5728\u4E0B\u9762\u5217\u51FA\u7684\u6807\u8BB0\uFF08\u4F8B\u5982<code>@async</code>\uFF09\u90FD\u662F\u8FD8\u4E0D\u652F\u6301\u7684\u3002</p><ul><li><code>@type</code></li><li><code>@param</code> (or <code>@arg</code> or <code>@argument</code>)</li><li><code>@returns</code> (or <code>@return</code>)</li><li><code>@typedef</code></li><li><code>@callback</code></li><li><code>@template</code></li><li><code>@class</code> (or <code>@constructor</code>)</li><li><code>@this</code></li><li><code>@extends</code> (or <code>@augments</code>)</li><li><code>@enum</code></li></ul><p>\u5B83\u4EEC\u4EE3\u8868\u7684\u610F\u4E49\u4E0Eusejsdoc.org\u4E0A\u9762\u7ED9\u51FA\u7684\u901A\u5E38\u662F\u4E00\u81F4\u7684\u6216\u8005\u662F\u5B83\u7684\u8D85\u96C6\u3002 \u4E0B\u9762\u7684\u4EE3\u7801\u63CF\u8FF0\u4E86\u5B83\u4EEC\u7684\u533A\u522B\u5E76\u7ED9\u51FA\u4E86\u4E00\u4E9B\u793A\u4F8B\u3002</p><h3 id="type" tabindex="-1"><a class="header-anchor" href="#type" aria-hidden="true">#</a> <code>@type</code></h3><p>\u53EF\u4EE5\u4F7F\u7528<code>@type</code>\u6807\u8BB0\u5E76\u5F15\u7528\u4E00\u4E2A\u7C7B\u578B\u540D\u79F0\uFF08\u539F\u59CB\u7C7B\u578B\uFF0CTypeScript\u91CC\u58F0\u660E\u7684\u7C7B\u578B\uFF0C\u6216\u5728JSDoc\u91CC<code>@typedef</code>\u6807\u8BB0\u6307\u5B9A\u7684\uFF09 \u53EF\u4EE5\u4F7F\u7528\u4EFB\u4F55TypeScript\u7C7B\u578B\u548C\u5927\u591A\u6570JSDoc\u7C7B\u578B\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> s<span class="token punctuation">;</span>

<span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span>Window<span class="token punctuation">}</span></span> */</span>
<span class="token keyword">var</span> win<span class="token punctuation">;</span>

<span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span>PromiseLike<span class="token punctuation">&lt;</span>string<span class="token punctuation">&gt;</span><span class="token punctuation">}</span></span> */</span>
<span class="token keyword">var</span> promisedString<span class="token punctuation">;</span>

<span class="token comment">// You can specify an HTML Element with DOM properties</span>
<span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span>HTMLElement<span class="token punctuation">}</span></span> */</span>
<span class="token keyword">var</span> myElement <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span>selector<span class="token punctuation">)</span><span class="token punctuation">;</span>
element<span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>myData <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p><code>@type</code>\u53EF\u4EE5\u6307\u5B9A\u8054\u5408\u7C7B\u578B\u2014\u4F8B\u5982\uFF0C<code>string</code>\u548C<code>boolean</code>\u7C7B\u578B\u7684\u8054\u5408\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token punctuation">(</span>string <span class="token operator">|</span> boolean<span class="token punctuation">)</span><span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> sb<span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u6CE8\u610F\uFF0C\u62EC\u53F7\u662F\u53EF\u9009\u7684\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span>string <span class="token operator">|</span> boolean<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> sb<span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u6709\u591A\u79CD\u65B9\u5F0F\u6765\u6307\u5B9A\u6570\u7EC4\u7C7B\u578B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> */</span>
<span class="token keyword">var</span> ns<span class="token punctuation">;</span>
<span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span>Array<span class="token punctuation">.</span><span class="token punctuation">&lt;</span>number<span class="token punctuation">&gt;</span><span class="token punctuation">}</span></span> */</span>
<span class="token keyword">var</span> nds<span class="token punctuation">;</span>
<span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span>Array<span class="token punctuation">&lt;</span>number<span class="token punctuation">&gt;</span><span class="token punctuation">}</span></span> */</span>
<span class="token keyword">var</span> nas<span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u8FD8\u53EF\u4EE5\u6307\u5B9A\u5BF9\u8C61\u5B57\u9762\u91CF\u7C7B\u578B\u3002 \u4F8B\u5982\uFF0C\u4E00\u4E2A\u5E26\u6709<code>a</code>\uFF08\u5B57\u7B26\u4E32\uFF09\u548C<code>b</code>\uFF08\u6570\u5B57\uFF09\u5C5E\u6027\u7684\u5BF9\u8C61\uFF0C\u4F7F\u7528\u4E0B\u9762\u7684\u8BED\u6CD5\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token punctuation">{</span> a<span class="token operator">:</span> string<span class="token punctuation">,</span> b<span class="token operator">:</span> number <span class="token punctuation">}</span><span class="token punctuation">}</span></span> */</span>
<span class="token keyword">var</span> var9<span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u53EF\u4EE5\u4F7F\u7528\u5B57\u7B26\u4E32\u548C\u6570\u5B57\u7D22\u5F15\u7B7E\u540D\u6765\u6307\u5B9A<code>map-like</code>\u548C<code>array-like</code>\u7684\u5BF9\u8C61\uFF0C\u4F7F\u7528\u6807\u51C6\u7684JSDoc\u8BED\u6CD5\u6216\u8005TypeScript\u8BED\u6CD5\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * A map-like object that maps arbitrary \`string\` properties to \`number\`s.
 *
 * <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span>Object<span class="token punctuation">.</span><span class="token punctuation">&lt;</span>string<span class="token punctuation">,</span> number<span class="token punctuation">&gt;</span><span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> stringToNumber<span class="token punctuation">;</span>

<span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span>Object<span class="token punctuation">.</span><span class="token punctuation">&lt;</span>number<span class="token punctuation">,</span> object<span class="token punctuation">&gt;</span><span class="token punctuation">}</span></span> */</span>
<span class="token keyword">var</span> arrayLike<span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u8FD9\u4E24\u4E2A\u7C7B\u578B\u4E0ETypeScript\u91CC\u7684<code>{ [x: string]: number }</code>\u548C<code>{ [x: number]: any }</code>\u662F\u7B49\u540C\u7684\u3002\u7F16\u8BD1\u5668\u80FD\u8BC6\u522B\u51FA\u8FD9\u4E24\u79CD\u8BED\u6CD5\u3002</p><p>\u53EF\u4EE5\u4F7F\u7528TypeScript\u6216Closure\u8BED\u6CD5\u6307\u5B9A\u51FD\u6570\u7C7B\u578B\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">function</span><span class="token punctuation">(</span>string<span class="token punctuation">,</span> boolean<span class="token punctuation">)</span><span class="token operator">:</span> number<span class="token punctuation">}</span></span> Closure syntax */</span>
<span class="token keyword">var</span> sbn<span class="token punctuation">;</span>
<span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token punctuation">(</span>s<span class="token operator">:</span> string<span class="token punctuation">,</span> b<span class="token operator">:</span> boolean<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> number<span class="token punctuation">}</span></span> Typescript syntax */</span>
<span class="token keyword">var</span> sbn2<span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u6216\u8005\u76F4\u63A5\u4F7F\u7528\u672A\u6307\u5B9A\u7684<code>Function</code>\u7C7B\u578B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span>Function<span class="token punctuation">}</span></span> */</span>
<span class="token keyword">var</span> fn7<span class="token punctuation">;</span>
<span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">function</span><span class="token punctuation">}</span></span> */</span>
<span class="token keyword">var</span> fn6<span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>Closure\u7684\u5176\u5B83\u7C7B\u578B\u4E5F\u53EF\u4EE5\u4F7F\u7528\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> - can be &#39;any&#39; type
 */</span>
<span class="token keyword">var</span> star<span class="token punctuation">;</span>
<span class="token doc-comment comment">/**
 * <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">?</span><span class="token punctuation">}</span></span> - unknown type (same as &#39;any&#39;)
 */</span>
<span class="token keyword">var</span> question<span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h4 id="\u8F6C\u6362" tabindex="-1"><a class="header-anchor" href="#\u8F6C\u6362" aria-hidden="true">#</a> \u8F6C\u6362</h4><p>TypeScript\u501F\u9274\u4E86Closure\u91CC\u7684\u8F6C\u6362\u8BED\u6CD5\u3002 \u5728\u62EC\u53F7\u8868\u8FBE\u5F0F\u524D\u9762\u4F7F\u7528<code>@type</code>\u6807\u8BB0\uFF0C\u53EF\u4EE5\u5C06\u4E00\u79CD\u7C7B\u578B\u8F6C\u6362\u6210\u53E6\u4E00\u79CD\u7C7B\u578B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span>number <span class="token operator">|</span> string<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> numberOrString <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0.5</span> <span class="token operator">?</span> <span class="token string">&quot;hello&quot;</span> <span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> typeAssertedNumber <span class="token operator">=</span> <span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> */</span> <span class="token punctuation">(</span>numberOrString<span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h4 id="\u5BFC\u5165\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u5BFC\u5165\u7C7B\u578B" aria-hidden="true">#</a> \u5BFC\u5165\u7C7B\u578B</h4><p>\u53EF\u4EE5\u4F7F\u7528\u5BFC\u5165\u7C7B\u578B\u4ECE\u5176\u5B83\u6587\u4EF6\u4E2D\u5BFC\u5165\u58F0\u660E\u3002 \u8FD9\u4E2A\u8BED\u6CD5\u662FTypeScript\u7279\u6709\u7684\uFF0C\u4E0EJSDoc\u6807\u51C6\u4E0D\u540C\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token parameter">p</span> <span class="token punctuation">{</span> import(&quot;./a&quot;).Pet <span class="token punctuation">}</span>
 */</span>
<span class="token keyword">function</span> <span class="token function">walk</span><span class="token punctuation">(</span><span class="token parameter">p</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Walking </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>p<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">...</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u5BFC\u5165\u7C7B\u578B\u4E5F\u53EF\u4EE5\u4F7F\u7528\u5728\u7C7B\u578B\u522B\u540D\u58F0\u660E\u4E2D\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@typedef</span> <span class="token class-name"><span class="token punctuation">{</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&quot;./a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Pet <span class="token punctuation">}</span></span> <span class="token class-name">Pet</span>
 */</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span>Pet<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> myPet<span class="token punctuation">;</span>
myPet<span class="token punctuation">.</span>name<span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u5BFC\u5165\u7C7B\u578B\u53EF\u4EE5\u7528\u5728\u4ECE\u6A21\u5757\u4E2D\u5F97\u5230\u4E00\u4E2A\u503C\u7684\u7C7B\u578B\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">typeof</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&quot;./a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>x <span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;./a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>x<span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="param\u548C-returns" tabindex="-1"><a class="header-anchor" href="#param\u548C-returns" aria-hidden="true">#</a> <code>@param</code>\u548C<code>@returns</code></h3><p><code>@param</code>\u8BED\u6CD5\u548C<code>@type</code>\u76F8\u540C\uFF0C\u4F46\u589E\u52A0\u4E86\u4E00\u4E2A\u53C2\u6570\u540D\u3002 \u4F7F\u7528<code>[]</code>\u53EF\u4EE5\u628A\u53C2\u6570\u58F0\u660E\u4E3A\u53EF\u9009\u7684\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// Parameters may be declared in a variety of syntactic forms</span>
<span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span>  <span class="token parameter">p1</span> - A string param.
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">=</span><span class="token punctuation">}</span></span> <span class="token parameter">p2</span> - An optional param (Closure syntax)
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token optional-parameter"><span class="token punctuation">[</span><span class="token parameter">p3</span><span class="token punctuation">]</span></span> - Another optional param (JSDoc syntax).
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token optional-parameter"><span class="token punctuation">[</span><span class="token parameter">p4</span><span class="token punctuation">=</span><span class="token code language-javascript"><span class="token string">&quot;test&quot;</span></span><span class="token punctuation">]</span></span> - An optional param with a default value
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> This is the result
 */</span>
<span class="token keyword">function</span> <span class="token function">stringsStringStrings</span><span class="token punctuation">(</span><span class="token parameter">p1<span class="token punctuation">,</span> p2<span class="token punctuation">,</span> p3<span class="token punctuation">,</span> p4</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token comment">// TODO</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u7C7B\u578B\u4E5F\u662F\u7C7B\u4F3C\u7684\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>PromiseLike<span class="token punctuation">&lt;</span>string<span class="token punctuation">&gt;</span><span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">function</span> <span class="token function">ps</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@returns</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token punctuation">{</span> a<span class="token operator">:</span> string<span class="token punctuation">,</span> b<span class="token operator">:</span> number <span class="token punctuation">}</span><span class="token punctuation">}</span></span> - May use &#39;@returns&#39; as well as &#39;@return&#39;
 */</span>
<span class="token keyword">function</span> <span class="token function">ab</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="typedef-callback-\u548C-param" tabindex="-1"><a class="header-anchor" href="#typedef-callback-\u548C-param" aria-hidden="true">#</a> <code>@typedef</code>, <code>@callback</code>, \u548C <code>@param</code></h3><p><code>@typedef</code>\u53EF\u4EE5\u7528\u6765\u58F0\u660E\u590D\u6742\u7C7B\u578B\u3002 \u548C<code>@param</code>\u7C7B\u4F3C\u7684\u8BED\u6CD5\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@typedef</span> <span class="token class-name"><span class="token punctuation">{</span>Object<span class="token punctuation">}</span></span> <span class="token class-name">SpecialType</span> - creates a new type named &#39;SpecialType&#39;
 * <span class="token keyword">@property</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">prop1</span> - a string property of SpecialType
 * <span class="token keyword">@property</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">prop2</span> - a number property of SpecialType
 * <span class="token keyword">@property</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">=</span><span class="token punctuation">}</span></span> <span class="token parameter">prop3</span> - an optional number property of SpecialType
 * <span class="token keyword">@prop</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> [prop4] - an optional number property of SpecialType
 * <span class="token keyword">@prop</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> [prop5=42] - an optional number property of SpecialType with default
 */</span>
<span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span>SpecialType<span class="token punctuation">}</span></span> */</span>
<span class="token keyword">var</span> specialTypeObject<span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u53EF\u4EE5\u5728\u7B2C\u4E00\u884C\u4E0A\u4F7F\u7528<code>object</code>\u6216<code>Object</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@typedef</span> <span class="token class-name"><span class="token punctuation">{</span>object<span class="token punctuation">}</span></span> <span class="token class-name">SpecialType1</span> - creates a new type named &#39;SpecialType1&#39;
 * <span class="token keyword">@property</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">prop1</span> - a string property of SpecialType1
 * <span class="token keyword">@property</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">prop2</span> - a number property of SpecialType1
 * <span class="token keyword">@property</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">=</span><span class="token punctuation">}</span></span> <span class="token parameter">prop3</span> - an optional number property of SpecialType1
 */</span>
<span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span>SpecialType1<span class="token punctuation">}</span></span> */</span>
<span class="token keyword">var</span> specialTypeObject1<span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p><code>@param</code>\u5141\u8BB8\u4F7F\u7528\u76F8\u4F3C\u7684\u8BED\u6CD5\u3002 \u6CE8\u610F\uFF0C\u5D4C\u5957\u7684\u5C5E\u6027\u540D\u5FC5\u987B\u4F7F\u7528\u53C2\u6570\u540D\u505A\u4E3A\u524D\u7F00\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Object<span class="token punctuation">}</span></span> <span class="token parameter">options</span> - The shape is the same as SpecialType above
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">options<span class="token punctuation">.</span>prop1</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">options<span class="token punctuation">.</span>prop2</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">=</span><span class="token punctuation">}</span></span> <span class="token parameter">options<span class="token punctuation">.</span>prop3</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token optional-parameter"><span class="token punctuation">[</span><span class="token parameter">options<span class="token punctuation">.</span>prop4</span><span class="token punctuation">]</span></span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token optional-parameter"><span class="token punctuation">[</span><span class="token parameter">options<span class="token punctuation">.</span>prop5</span><span class="token punctuation">=</span><span class="token code language-javascript"><span class="token number">42</span></span><span class="token punctuation">]</span></span>
 */</span>
<span class="token keyword">function</span> <span class="token function">special</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>options<span class="token punctuation">.</span>prop4 <span class="token operator">||</span> <span class="token number">1001</span><span class="token punctuation">)</span> <span class="token operator">+</span> options<span class="token punctuation">.</span>prop5<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p><code>@callback</code>\u4E0E<code>@typedef</code>\u76F8\u4F3C\uFF0C\u4F46\u5B83\u6307\u5B9A\u51FD\u6570\u7C7B\u578B\u800C\u4E0D\u662F\u5BF9\u8C61\u7C7B\u578B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@callback</span> Predicate
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">data</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token optional-parameter"><span class="token punctuation">[</span><span class="token parameter">index</span><span class="token punctuation">]</span></span>
 * <span class="token keyword">@returns</span> <span class="token class-name"><span class="token punctuation">{</span>boolean<span class="token punctuation">}</span></span>
 */</span>
<span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span>Predicate<span class="token punctuation">}</span></span> */</span>
<span class="token keyword">const</span> <span class="token function-variable function">ok</span> <span class="token operator">=</span> <span class="token parameter">s</span> <span class="token operator">=&gt;</span> <span class="token operator">!</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>length <span class="token operator">%</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u5F53\u7136\uFF0C\u6240\u6709\u8FD9\u4E9B\u7C7B\u578B\u90FD\u53EF\u4EE5\u4F7F\u7528TypeScript\u7684\u8BED\u6CD5<code>@typedef</code>\u5728\u4E00\u884C\u4E0A\u58F0\u660E\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/** <span class="token keyword">@typedef</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token punctuation">{</span> prop1<span class="token operator">:</span> string<span class="token punctuation">,</span> prop2<span class="token operator">:</span> string<span class="token punctuation">,</span> prop3<span class="token operator">?</span><span class="token operator">:</span> number <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token class-name">SpecialType</span> */</span>
<span class="token doc-comment comment">/** <span class="token keyword">@typedef</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token punctuation">(</span>data<span class="token operator">:</span> string<span class="token punctuation">,</span> index<span class="token operator">?</span><span class="token operator">:</span> number<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> boolean<span class="token punctuation">}</span></span> <span class="token class-name">Predicate</span> */</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="template" tabindex="-1"><a class="header-anchor" href="#template" aria-hidden="true">#</a> <code>@template</code></h3><p>\u4F7F\u7528<code>@template</code>\u58F0\u660E\u6CDB\u578B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@template</span> <span class="token class-name">T</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>T<span class="token punctuation">}</span></span> <span class="token parameter">x</span> - A generic parameter that flows through to the return type
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>T<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">function</span> <span class="token function">id</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token keyword">return</span> x <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u7528\u9017\u53F7\u6216\u591A\u4E2A\u6807\u8BB0\u6765\u58F0\u660E\u591A\u4E2A\u7C7B\u578B\u53C2\u6570\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@template</span> <span class="token class-name">T</span>,U,V
 * <span class="token keyword">@template</span> <span class="token class-name">W</span>,X
 */</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u8FD8\u53EF\u4EE5\u5728\u53C2\u6570\u540D\u524D\u6307\u5B9A\u7C7B\u578B\u7EA6\u675F\u3002 \u53EA\u6709\u5217\u8868\u7684\u7B2C\u4E00\u9879\u7C7B\u578B\u53C2\u6570\u4F1A\u88AB\u7EA6\u675F\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@template</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token class-name">K</span> - K must be a string or string literal
 * <span class="token keyword">@template</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token punctuation">{</span> serious<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> string <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token class-name">Seriousalizable</span> - must have a serious method
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>K<span class="token punctuation">}</span></span> <span class="token parameter">key</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Seriousalizable<span class="token punctuation">}</span></span> <span class="token parameter">object</span>
 */</span>
<span class="token keyword">function</span> <span class="token function">seriousalize</span><span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> object</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ????</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor" aria-hidden="true">#</a> <code>@constructor</code></h3><p>\u7F16\u8BD1\u5668\u901A\u8FC7<code>this</code>\u5C5E\u6027\u7684\u8D4B\u503C\u6765\u63A8\u65AD\u6784\u9020\u51FD\u6570\uFF0C\u4F46\u4F60\u53EF\u4EE5\u8BA9\u68C0\u67E5\u66F4\u4E25\u683C\u63D0\u793A\u66F4\u53CB\u597D\uFF0C\u4F60\u53EF\u4EE5\u6DFB\u52A0\u4E00\u4E2A<code>@constructor</code>\u6807\u8BB0\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@constructor</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">data</span>
 */</span>
<span class="token keyword">function</span> <span class="token constant">C</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>size <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">initialize</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Should error, initializer expects a string</span>
<span class="token punctuation">}</span>
<span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">s</span>
 */</span>
<span class="token class-name">C</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">initialize</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">s</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>size <span class="token operator">=</span> s<span class="token punctuation">.</span>length
<span class="token punctuation">}</span>

<span class="token keyword">var</span> c <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">C</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token constant">C</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// C should only be called with new</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>\u901A\u8FC7<code>@constructor</code>\uFF0C<code>this</code>\u5C06\u5728\u6784\u9020\u51FD\u6570<code>C</code>\u91CC\u88AB\u68C0\u67E5\uFF0C\u56E0\u6B64\u4F60\u5728<code>initialize</code>\u65B9\u6CD5\u91CC\u5F97\u5230\u4E00\u4E2A\u63D0\u793A\uFF0C\u5982\u679C\u4F60\u4F20\u5165\u4E00\u4E2A\u6570\u5B57\u4F60\u8FD8\u5C06\u5F97\u5230\u4E00\u4E2A\u9519\u8BEF\u63D0\u793A\u3002\u5982\u679C\u4F60\u76F4\u63A5\u8C03\u7528<code>C</code>\u800C\u4E0D\u662F\u6784\u9020\u5B83\uFF0C\u4E5F\u4F1A\u5F97\u5230\u4E00\u4E2A\u9519\u8BEF\u3002</p><p>\u4E0D\u5E78\u7684\u662F\uFF0C\u8FD9\u610F\u5473\u7740\u90A3\u4E9B\u65E2\u80FD\u6784\u9020\u4E5F\u80FD\u76F4\u63A5\u8C03\u7528\u7684\u6784\u9020\u51FD\u6570\u4E0D\u80FD\u4F7F\u7528<code>@constructor</code>\u3002</p><h3 id="this" tabindex="-1"><a class="header-anchor" href="#this" aria-hidden="true">#</a> <code>@this</code></h3><p>\u7F16\u8BD1\u5668\u901A\u5E38\u53EF\u4EE5\u901A\u8FC7\u4E0A\u4E0B\u6587\u6765\u63A8\u65AD\u51FA<code>this</code>\u7684\u7C7B\u578B\u3002\u4F46\u4F60\u53EF\u4EE5\u4F7F\u7528<code>@this</code>\u6765\u660E\u786E\u6307\u5B9A\u5B83\u7684\u7C7B\u578B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@this</span> <span class="token class-name"><span class="token punctuation">{</span>HTMLElement<span class="token punctuation">}</span></span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">e</span>
 */</span>
<span class="token keyword">function</span> <span class="token function">callbackForLater</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>clientHeight <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token comment">// should be fine!</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="extends" tabindex="-1"><a class="header-anchor" href="#extends" aria-hidden="true">#</a> <code>@extends</code></h3><p>\u5F53JavaScript\u7C7B\u7EE7\u627F\u4E86\u4E00\u4E2A\u57FA\u7C7B\uFF0C\u65E0\u5904\u6307\u5B9A\u7C7B\u578B\u53C2\u6570\u7684\u7C7B\u578B\u3002\u800C<code>@extends</code>\u6807\u8BB0\u63D0\u4F9B\u4E86\u8FD9\u6837\u4E00\u79CD\u65B9\u5F0F\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@template</span> <span class="token class-name">T</span>
 * <span class="token keyword">@extends</span> <span class="token class-name"><span class="token punctuation">{</span>Set<span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span><span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">class</span> <span class="token class-name">SortableSet</span> <span class="token keyword">extends</span> <span class="token class-name">Set</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u6CE8\u610F<code>@extends</code>\u53EA\u4F5C\u7528\u4E8E\u7C7B\u3002\u5F53\u524D\uFF0C\u65E0\u6CD5\u5B9E\u73B0\u6784\u9020\u51FD\u6570\u7EE7\u627F\u7C7B\u7684\u60C5\u51B5\u3002</p><h3 id="enum" tabindex="-1"><a class="header-anchor" href="#enum" aria-hidden="true">#</a> <code>@enum</code></h3><p><code>@enum</code>\u6807\u8BB0\u5141\u8BB8\u4F60\u521B\u5EFA\u4E00\u4E2A\u5BF9\u8C61\u5B57\u9762\u91CF\uFF0C\u5B83\u7684\u6210\u5458\u90FD\u6709\u786E\u5B9A\u7684\u7C7B\u578B\u3002\u4E0D\u540C\u4E8EJavaScript\u91CC\u5927\u591A\u6570\u7684\u5BF9\u8C61\u5B57\u9762\u91CF\uFF0C\u5B83\u4E0D\u5141\u8BB8\u6DFB\u52A0\u989D\u5916\u6210\u5458\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/** <span class="token keyword">@enum</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> */</span>
<span class="token keyword">const</span> JSDocState <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">BeginningOfLine</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token literal-property property">SawAsterisk</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token literal-property property">SavingComments</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u6CE8\u610F<code>@enum</code>\u4E0ETypeScript\u7684<code>@enum</code>\u5927\u4E0D\u76F8\u540C\uFF0C\u5B83\u66F4\u52A0\u7B80\u5355\u3002\u7136\u800C\uFF0C\u4E0D\u540C\u4E8ETypeScript\u7684\u679A\u4E3E\uFF0C<code>@enum</code>\u53EF\u4EE5\u662F\u4EFB\u4F55\u7C7B\u578B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/** <span class="token keyword">@enum</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">function</span><span class="token punctuation">(</span>number<span class="token punctuation">)</span><span class="token operator">:</span> number<span class="token punctuation">}</span></span> */</span>
<span class="token keyword">const</span> Math <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">add1</span><span class="token operator">:</span> <span class="token parameter">n</span> <span class="token operator">=&gt;</span> n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token function-variable function">id</span><span class="token operator">:</span> <span class="token parameter">n</span> <span class="token operator">=&gt;</span> <span class="token operator">-</span>n<span class="token punctuation">,</span>
  <span class="token function-variable function">sub1</span><span class="token operator">:</span> <span class="token parameter">n</span> <span class="token operator">=&gt;</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="\u66F4\u591A\u793A\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u66F4\u591A\u793A\u4F8B" aria-hidden="true">#</a> \u66F4\u591A\u793A\u4F8B</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> someObj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token doc-comment comment">/**
   * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">param1</span> - Docs on property assignments work
   */</span>
  <span class="token function-variable function">x</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">param1</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * As do docs on variable assignments
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>Window<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">let</span> <span class="token function-variable function">someFunc</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * And class methods
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">greeting</span> The greeting to use
 */</span>
<span class="token class-name">Foo</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">sayHi</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">greeting</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Hi!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * And arrow functions expressions
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">x</span> - A multiplier
 */</span>
<span class="token keyword">let</span> <span class="token function-variable function">myArrow</span> <span class="token operator">=</span> <span class="token parameter">x</span> <span class="token operator">=&gt;</span> x <span class="token operator">*</span> x<span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * Which means it works for stateless function components in JSX too
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token punctuation">{</span>a<span class="token operator">:</span> string<span class="token punctuation">,</span> b<span class="token operator">:</span> number<span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token parameter">test</span> - Some param
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">fc</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">test</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span><span class="token punctuation">{</span>test<span class="token punctuation">.</span>a<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * A parameter can be a class constructor, using Closure syntax.
 *
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token keyword">new</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> any<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> object<span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token parameter">C</span> - The class to register
 */</span>
<span class="token keyword">function</span> <span class="token function">registerClass</span><span class="token punctuation">(</span><span class="token parameter"><span class="token constant">C</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">...</span>string<span class="token punctuation">}</span></span> <span class="token parameter">p1</span> - A &#39;rest&#39; arg (array) of strings. (treated as &#39;any&#39;)
 */</span>
<span class="token keyword">function</span> <span class="token function">fn10</span><span class="token punctuation">(</span><span class="token parameter">p1</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">...</span>string<span class="token punctuation">}</span></span> <span class="token parameter">p1</span> - A &#39;rest&#39; arg (array) of strings. (treated as &#39;any&#39;)
 */</span>
<span class="token keyword">function</span> <span class="token function">fn9</span><span class="token punctuation">(</span><span class="token parameter">p1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> p1<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br></div></div><h3 id="\u5DF2\u77E5\u4E0D\u652F\u6301\u7684\u6A21\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u5DF2\u77E5\u4E0D\u652F\u6301\u7684\u6A21\u5F0F" aria-hidden="true">#</a> \u5DF2\u77E5\u4E0D\u652F\u6301\u7684\u6A21\u5F0F</h3><p>\u5728\u503C\u7A7A\u95F4\u4E2D\u5C06\u5BF9\u8C61\u89C6\u4E3A\u7C7B\u578B\u662F\u4E0D\u53EF\u4EE5\u7684\uFF0C\u9664\u975E\u5BF9\u8C61\u521B\u5EFA\u4E86\u7C7B\u578B\uFF0C\u5982\u6784\u9020\u51FD\u6570\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">aNormalFunction</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

<span class="token punctuation">}</span>
<span class="token doc-comment comment">/**
 * <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span>aNormalFunction<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> wrong<span class="token punctuation">;</span>
<span class="token doc-comment comment">/**
 * Use &#39;typeof&#39; instead:
 * <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">typeof</span> aNormalFunction<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> right<span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u5BF9\u8C61\u5B57\u9762\u91CF\u5C5E\u6027\u4E0A\u7684<code>=</code>\u540E\u7F00\u4E0D\u80FD\u6307\u5B9A\u8FD9\u4E2A\u5C5E\u6027\u662F\u53EF\u9009\u7684\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token punctuation">{</span> a<span class="token operator">:</span> string<span class="token punctuation">,</span> b<span class="token operator">:</span> number<span class="token punctuation">=</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> wrong<span class="token punctuation">;</span>
<span class="token doc-comment comment">/**
 * Use postfix question on the property name instead:
 * <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token punctuation">{</span> a<span class="token operator">:</span> string<span class="token punctuation">,</span> b<span class="token operator">?</span><span class="token operator">:</span> number <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> right<span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><code>Nullable</code>\u7C7B\u578B\u53EA\u5728\u542F\u7528\u4E86<code>strictNullChecks</code>\u68C0\u67E5\u65F6\u624D\u542F\u4F5C\u7528\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">?</span>number<span class="token punctuation">}</span></span>
 * With strictNullChecks: true -- number | null
 * With strictNullChecks: off  -- number
 */</span>
<span class="token keyword">var</span> nullable<span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><code>Non-nullable</code>\u7C7B\u578B\u6CA1\u6709\u610F\u4E49\uFF0C\u4EE5\u5176\u539F\u7C7B\u578B\u5BF9\u5F85\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span>!number<span class="token punctuation">}</span></span>
 * Just has type number
 */</span>
<span class="token keyword">var</span> normal<span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u4E0D\u540C\u4E8EJSDoc\u7C7B\u578B\u7CFB\u7EDF\uFF0CTypeScript\u53EA\u5141\u8BB8\u5C06\u7C7B\u578B\u6807\u8BB0\u4E3A\u5305\u4E0D\u5305\u542B<code>null</code>\u3002 \u6CA1\u6709\u660E\u786E\u7684<code>Non-nullable</code> -- \u5982\u679C\u542F\u7528\u4E86<code>strictNullChecks</code>\uFF0C\u90A3\u4E48<code>number</code>\u662F\u975E<code>null</code>\u7684\u3002 \u5982\u679C\u6CA1\u6709\u542F\u7528\uFF0C\u90A3\u4E48<code>number</code>\u662F\u53EF\u4EE5\u4E3A<code>null</code>\u7684\u3002</p>`,142);function v(g,w){const a=p("RouterLink");return e(),t(r,null,[k,o("p",null,[m,c(a,{to:"/javascript/type-checking-javascript-files.html#supported-jsdoc"},{default:l(()=>[d]),_:1}),b]),y],64)}var j=u(i,[["render",v]]);export{j as default};
