import{e as n}from"./app.0186264c.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h1 id="typescript-1-4" tabindex="-1"><a class="header-anchor" href="#typescript-1-4" aria-hidden="true">#</a> TypeScript 1.4</h1><h2 id="\u8054\u5408\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u8054\u5408\u7C7B\u578B" aria-hidden="true">#</a> \u8054\u5408\u7C7B\u578B</h2><h3 id="\u6982\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u6982\u8FF0" aria-hidden="true">#</a> \u6982\u8FF0</h3><p>\u8054\u5408\u7C7B\u578B\u6709\u52A9\u4E8E\u8868\u793A\u4E00\u4E2A\u503C\u7684\u7C7B\u578B\u53EF\u4EE5\u662F\u591A\u79CD\u7C7B\u578B\u4E4B\u4E00\u7684\u60C5\u51B5\u3002\u6BD4\u5982\uFF0C\u6709\u4E00\u4E2AAPI\u63A5\u547D\u4EE4\u884C\u4F20\u5165<code>string</code>\u7C7B\u578B\uFF0C<code>string[]</code>\u7C7B\u578B\u6216\u8005\u662F\u4E00\u4E2A\u8FD4\u56DE<code>string</code>\u7684\u51FD\u6570\u3002\u4F60\u5C31\u53EF\u4EE5\u8FD9\u6837\u5199\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">RunOptions</span> <span class="token punctuation">{</span>
   program<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
   commandline<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">|</span><span class="token builtin">string</span><span class="token operator">|</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u7ED9\u8054\u5408\u7C7B\u578B\u8D4B\u503C\u4E5F\u5F88\u76F4\u89C2 -- \u53EA\u8981\u8FD9\u4E2A\u503C\u80FD\u6EE1\u8DB3\u8054\u5408\u7C7B\u578B\u4E2D\u4EFB\u610F\u4E00\u4E2A\u7C7B\u578B\u90A3\u4E48\u5C31\u53EF\u4EE5\u8D4B\u503C\u7ED9\u8FD9\u4E2A\u8054\u5408\u7C7B\u578B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">var</span> opts<span class="token operator">:</span> RunOptions <span class="token operator">=</span> <span class="token comment">/* ... */</span><span class="token punctuation">;</span>
opts<span class="token punctuation">.</span>commandline <span class="token operator">=</span> <span class="token string">&#39;-hello world&#39;</span><span class="token punctuation">;</span> <span class="token comment">// OK</span>
opts<span class="token punctuation">.</span>commandline <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;-hello&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;world&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// OK</span>
opts<span class="token punctuation">.</span>commandline <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">42</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// Error, \u6570\u5B57\u4E0D\u662F\u5B57\u7B26\u4E32\u6216\u5B57\u7B26\u4E32\u6570\u7EC4</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u5F53\u8BFB\u53D6\u8054\u5408\u7C7B\u578B\u65F6\uFF0C\u4F60\u53EF\u4EE5\u8BBF\u95EE\u7C7B\u578B\u5171\u6709\u7684\u5C5E\u6027\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">if</span><span class="token punctuation">(</span>opts<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// OK, string\u548Cstring[]\u90FD\u6709&#39;length&#39;\u5C5E\u6027</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;it&#39;s empty&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u4F7F\u7528\u7C7B\u578B\u4FDD\u62A4\uFF0C\u4F60\u53EF\u4EE5\u8F7B\u677E\u5730\u4F7F\u7528\u8054\u5408\u7C7B\u578B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">formatCommandline</span><span class="token punctuation">(</span>c<span class="token operator">:</span> <span class="token builtin">string</span><span class="token operator">|</span><span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> c <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> c<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> c<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="\u4E25\u683C\u7684\u6CDB\u578B" tabindex="-1"><a class="header-anchor" href="#\u4E25\u683C\u7684\u6CDB\u578B" aria-hidden="true">#</a> \u4E25\u683C\u7684\u6CDB\u578B</h3><p>\u968F\u7740\u8054\u5408\u7C7B\u578B\u53EF\u4EE5\u8868\u793A\u6709\u5F88\u591A\u7C7B\u578B\u7684\u573A\u666F\uFF0C\u6211\u4EEC\u51B3\u5B9A\u53BB\u6539\u8FDB\u6CDB\u578B\u8C03\u7528\u7684\u89C4\u8303\u6027\u3002\u4E4B\u524D\uFF0C\u8FD9\u6BB5\u4EE3\u7801\u7F16\u8BD1\u4E0D\u4F1A\u62A5\u9519\uFF08\u51FA\u4E4E\u610F\u6599\uFF09\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">equal</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>lhs<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> rhs<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> lhs <span class="token operator">===</span> rhs<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u4E4B\u524D\u6CA1\u6709\u9519\u8BEF</span>
<span class="token comment">// \u73B0\u5728\u4F1A\u62A5\u9519\uFF1A\u5728string\u548Cnumber\u4E4B\u524D\u6CA1\u6709\u6700\u4F73\u7684\u57FA\u672C\u7C7B\u578B</span>
<span class="token keyword">var</span> e <span class="token operator">=</span> <span class="token function">equal</span><span class="token punctuation">(</span><span class="token number">42</span><span class="token punctuation">,</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u901A\u8FC7\u8054\u5408\u7C7B\u578B\uFF0C\u4F60\u53EF\u4EE5\u6307\u5B9A\u4F60\u60F3\u8981\u7684\u884C\u4E3A\uFF0C\u5728\u51FD\u6570\u5B9A\u4E49\u65F6\u6216\u5728\u8C03\u7528\u7684\u65F6\u5019\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// &#39;choose&#39; function where types must match</span>
<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">choose1</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0.5</span> <span class="token operator">?</span> a <span class="token operator">:</span> b <span class="token punctuation">}</span>
<span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token function">choose1</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Error</span>
<span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token generic-function"><span class="token function">choose1</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">|</span><span class="token builtin">number</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// OK</span>

<span class="token comment">// &#39;choose&#39; function where types need not match</span>
<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">choose2</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">U</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token constant">U</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token operator">|</span><span class="token constant">U</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0.5</span> <span class="token operator">?</span> a <span class="token operator">:</span> b <span class="token punctuation">}</span>
<span class="token keyword">var</span> c <span class="token operator">=</span> <span class="token function">choose2</span><span class="token punctuation">(</span><span class="token string">&#39;bar&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// OK, c: string</span>
<span class="token keyword">var</span> d <span class="token operator">=</span> <span class="token function">choose2</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// OK, d: string|number</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="\u66F4\u597D\u7684\u7C7B\u578B\u63A8\u65AD" tabindex="-1"><a class="header-anchor" href="#\u66F4\u597D\u7684\u7C7B\u578B\u63A8\u65AD" aria-hidden="true">#</a> \u66F4\u597D\u7684\u7C7B\u578B\u63A8\u65AD</h3><p>\u5F53\u4E00\u4E2A\u96C6\u5408\u91CC\u6709\u591A\u79CD\u7C7B\u578B\u7684\u503C\u65F6\uFF0C\u8054\u5408\u7C7B\u578B\u4F1A\u4E3A\u6570\u7EC4\u6216\u5176\u5B83\u5730\u65B9\u63D0\u4F9B\u66F4\u597D\u7684\u7C7B\u578B\u63A8\u65AD\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// x: Array&lt;string|number&gt;</span>
x<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;world&#39;</span><span class="token punctuation">;</span> <span class="token comment">// OK</span>
x<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment">// Error, boolean is not string or number</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="let-\u58F0\u660E" tabindex="-1"><a class="header-anchor" href="#let-\u58F0\u660E" aria-hidden="true">#</a> <code>let</code> \u58F0\u660E</h2><p>\u5728JavaScript\u91CC\uFF0C<code>var</code>\u58F0\u660E\u4F1A\u88AB\u201C\u63D0\u5347\u201D\u5230\u6240\u5728\u4F5C\u7528\u57DF\u7684\u9876\u7AEF\u3002\u8FD9\u53EF\u80FD\u4F1A\u5F15\u53D1\u4E00\u4E9B\u8BA9\u4EBA\u4E0D\u89E3\u7684bugs\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// meant to write &#39;y&#39; here</span>
<span class="token comment">/* later in the same block */</span>
<span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>TypeScript\u5DF2\u7ECF\u652F\u6301\u65B0\u7684ES6\u7684\u5173\u952E\u5B57<code>let</code>\uFF0C\u58F0\u660E\u4E00\u4E2A\u5757\u7EA7\u4F5C\u7528\u57DF\u7684\u53D8\u91CF\u3002\u4E00\u4E2A<code>let</code>\u53D8\u91CF\u53EA\u80FD\u5728\u58F0\u660E\u4E4B\u540E\u7684\u4F4D\u7F6E\u88AB\u5F15\u7528\uFF0C\u5E76\u4E14\u4F5C\u7528\u57DF\u4E3A\u58F0\u660E\u5B83\u7684\u5757\u91CC\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">if</span><span class="token punctuation">(</span>foo<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Error, cannot refer to x before its declaration</span>
    <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Error, x is not declared in this block</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><code>let</code>\u53EA\u5728\u8BBE\u7F6E\u76EE\u6807\u4E3AECMAScript 6 \uFF08<code>--target ES6</code>\uFF09\u65F6\u751F\u6548\u3002</p><h2 id="const-\u58F0\u660E" tabindex="-1"><a class="header-anchor" href="#const-\u58F0\u660E" aria-hidden="true">#</a> <code>const</code> \u58F0\u660E</h2><p>\u53E6\u4E00\u4E2ATypeScript\u652F\u6301\u7684ES6\u91CC\u65B0\u51FA\u73B0\u7684\u58F0\u660E\u7C7B\u578B\u662F<code>const</code>\u3002\u4E0D\u80FD\u7ED9\u4E00\u4E2A<code>const</code>\u7C7B\u578B\u53D8\u91CF\u8D4B\u503C\uFF0C\u53EA\u80FD\u5728\u58F0\u660E\u7684\u65F6\u5019\u521D\u59CB\u5316\u3002\u8FD9\u5BF9\u4E8E\u90A3\u4E9B\u5728\u521D\u59CB\u5316\u4E4B\u540E\u5C31\u4E0D\u60F3\u53BB\u6539\u53D8\u5B83\u7684\u503C\u7684\u60C5\u51B5\u4E0B\u662F\u5F88\u6709\u5E2E\u52A9\u7684\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> halfPi <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
halfPi <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">// Error, can&#39;t assign to a \`const\`</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><code>const</code>\u53EA\u5728\u8BBE\u7F6E\u76EE\u6807\u4E3AECMAScript 6 \uFF08<code>--target ES6</code>\uFF09\u65F6\u751F\u6548\u3002</p><h2 id="\u6A21\u7248\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#\u6A21\u7248\u5B57\u7B26\u4E32" aria-hidden="true">#</a> \u6A21\u7248\u5B57\u7B26\u4E32</h2><p>TypeScript\u73B0\u5DF2\u652F\u6301ES6\u6A21\u5757\u5B57\u7B26\u4E32\u3002\u901A\u8FC7\u5B83\u53EF\u4EE5\u65B9\u4FBF\u5730\u5728\u5B57\u7B26\u4E32\u4E2D\u5D4C\u5165\u4EFB\u4F55\u8868\u8FBE\u5F0F\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">var</span> name <span class="token operator">=</span> <span class="token string">&quot;TypeScript&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> greeting  <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Hello, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">! Your name has </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token punctuation">.</span>length<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> characters</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u5F53\u7F16\u8BD1\u76EE\u6807\u4E3AES6\u4E4B\u524D\u7684\u7248\u672C\u65F6\uFF0C\u8FD9\u4E2A\u5B57\u7B26\u4E32\u88AB\u5206\u89E3\u4E3A\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> name <span class="token operator">=</span> <span class="token string">&quot;TypeScript!&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> greeting <span class="token operator">=</span> <span class="token string">&quot;Hello, &quot;</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">&quot;! Your name has &quot;</span> <span class="token operator">+</span> name<span class="token punctuation">.</span>length <span class="token operator">+</span> <span class="token string">&quot; characters&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="\u7C7B\u578B\u5B88\u62A4" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u578B\u5B88\u62A4" aria-hidden="true">#</a> \u7C7B\u578B\u5B88\u62A4</h2><p>JavaScript\u5E38\u7528\u6A21\u5F0F\u4E4B\u4E00\u662F\u5728\u8FD0\u884C\u65F6\u4F7F\u7528<code>typeof</code>\u6216<code>instanceof</code>\u68C0\u67E5\u8868\u8FBE\u5F0F\u7684\u7C7B\u578B\u3002 \u5728<code>if</code>\u8BED\u53E5\u91CC\u4F7F\u7528\u5B83\u4EEC\u7684\u65F6\u5019\uFF0CTypeScript\u53EF\u4EE5\u8BC6\u522B\u51FA\u8FD9\u4E9B\u6761\u4EF6\u5E76\u4E14\u968F\u4E4B\u6539\u53D8\u7C7B\u578B\u63A8\u65AD\u7684\u7ED3\u679C\u3002</p><p>\u4F7F\u7528<code>typeof</code>\u6765\u68C0\u67E5\u4E00\u4E2A\u53D8\u91CF\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">var</span> x<span class="token operator">:</span> <span class="token builtin">any</span> <span class="token operator">=</span> <span class="token comment">/* ... */</span><span class="token punctuation">;</span>
<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> x <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span><span class="token function">subtr</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Error, &#39;subtr&#39; does not exist on &#39;string&#39;</span>
<span class="token punctuation">}</span>
<span class="token comment">// x is still any here</span>
x<span class="token punctuation">.</span><span class="token function">unknown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// OK</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u7ED3\u5408\u8054\u5408\u7C7B\u578B\u4F7F\u7528<code>typeof</code>\u548C<code>else</code>\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">var</span> x<span class="token operator">:</span> <span class="token builtin">string</span><span class="token operator">|</span>HTMLElement <span class="token operator">=</span> <span class="token comment">/* ... */</span><span class="token punctuation">;</span>
<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> x <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// x is string here, as shown above</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// x is HTMLElement here</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>innerHTML<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u7ED3\u5408\u7C7B\u548C\u8054\u5408\u7C7B\u578B\u4F7F\u7528<code>instanceof</code>\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">Dog</span> <span class="token punctuation">{</span> <span class="token function">woof</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">Cat</span> <span class="token punctuation">{</span> <span class="token function">meow</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>
<span class="token keyword">var</span> pet<span class="token operator">:</span> Dog<span class="token operator">|</span>Cat <span class="token operator">=</span> <span class="token comment">/* ... */</span><span class="token punctuation">;</span>
<span class="token keyword">if</span><span class="token punctuation">(</span>pet <span class="token keyword">instanceof</span> <span class="token class-name">Dog</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    pet<span class="token punctuation">.</span><span class="token function">woof</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// OK</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    pet<span class="token punctuation">.</span><span class="token function">woof</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Error</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="\u7C7B\u578B\u522B\u540D" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u578B\u522B\u540D" aria-hidden="true">#</a> \u7C7B\u578B\u522B\u540D</h2><p>\u4F60\u73B0\u5728\u53EF\u4EE5\u4F7F\u7528<code>type</code>\u5173\u952E\u5B57\u6765\u4E3A\u7C7B\u578B\u5B9A\u4E49\u4E00\u4E2A\u201C\u522B\u540D\u201D\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">PrimitiveArray</span> <span class="token operator">=</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">|</span><span class="token builtin">number</span><span class="token operator">|</span><span class="token builtin">boolean</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">MyNumber</span> <span class="token operator">=</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">NgScope</span> <span class="token operator">=</span> ng<span class="token punctuation">.</span>IScope<span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">Callback</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u7C7B\u578B\u522B\u540D\u4E0E\u5176\u539F\u59CB\u7684\u7C7B\u578B\u5B8C\u5168\u4E00\u81F4\uFF1B\u5B83\u4EEC\u53EA\u662F\u7B80\u5355\u7684\u66FF\u4EE3\u540D\u3002</p><h2 id="const-enum-\u5B8C\u5168\u5D4C\u5165\u7684\u679A\u4E3E" tabindex="-1"><a class="header-anchor" href="#const-enum-\u5B8C\u5168\u5D4C\u5165\u7684\u679A\u4E3E" aria-hidden="true">#</a> <code>const enum</code>\uFF08\u5B8C\u5168\u5D4C\u5165\u7684\u679A\u4E3E\uFF09</h2><p>\u679A\u4E3E\u5F88\u6709\u5E2E\u52A9\uFF0C\u4F46\u662F\u6709\u4E9B\u7A0B\u5E8F\u5B9E\u9645\u4E0A\u5E76\u4E0D\u9700\u8981\u5B83\u751F\u6210\u7684\u4EE3\u7801\u5E76\u4E14\u60F3\u8981\u5C06\u679A\u4E3E\u53D8\u91CF\u6240\u4EE3\u7801\u7684\u6570\u5B57\u503C\u76F4\u63A5\u66FF\u6362\u5230\u5BF9\u5E94\u4F4D\u7F6E\u4E0A\u3002\u65B0\u7684<code>const enum</code>\u58F0\u660E\u4E0E\u6B63\u5E38\u7684<code>enum</code>\u5728\u7C7B\u578B\u5B89\u5168\u65B9\u9762\u5177\u6709\u540C\u6837\u7684\u4F5C\u7528\uFF0C\u53EA\u662F\u5728\u7F16\u8BD1\u65F6\u4F1A\u6E05\u9664\u6389\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token keyword">enum</span> Suit <span class="token punctuation">{</span> Clubs<span class="token punctuation">,</span> Diamonds<span class="token punctuation">,</span> Hearts<span class="token punctuation">,</span> Spades <span class="token punctuation">}</span>
<span class="token keyword">var</span> d <span class="token operator">=</span> Suit<span class="token punctuation">.</span>Diamonds<span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Compiles to exactly:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> d <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>TypeScript\u4E5F\u4F1A\u5728\u53EF\u80FD\u7684\u60C5\u51B5\u4E0B\u8BA1\u7B97\u679A\u4E3E\u503C\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">enum</span> MyFlags <span class="token punctuation">{</span>
  None <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
  Neat <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>
  Cool <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span>
  Awesome <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">,</span>
  Best <span class="token operator">=</span> Neat <span class="token operator">|</span> Cool <span class="token operator">|</span> Awesome
<span class="token punctuation">}</span>
<span class="token keyword">var</span> b <span class="token operator">=</span> MyFlags<span class="token punctuation">.</span>Best<span class="token punctuation">;</span> <span class="token comment">// emits var b = 7;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="noemitonerror-\u547D\u4EE4\u884C\u9009\u9879" tabindex="-1"><a class="header-anchor" href="#noemitonerror-\u547D\u4EE4\u884C\u9009\u9879" aria-hidden="true">#</a> <code>-noEmitOnError</code> \u547D\u4EE4\u884C\u9009\u9879</h2><p>TypeScript\u7F16\u8BD1\u5668\u7684\u9ED8\u8BA4\u884C\u4E3A\u662F\u5F53\u5B58\u5728\u7C7B\u578B\u9519\u8BEF\uFF08\u6BD4\u5982\uFF0C\u5C06<code>string</code>\u7C7B\u578B\u8D4B\u503C\u7ED9<code>number</code>\u7C7B\u578B\uFF09\u65F6\u4ECD\u4F1A\u751F\u6210.js\u6587\u4EF6\u3002\u8FD9\u5728\u6784\u5EFA\u670D\u52A1\u5668\u4E0A\u6216\u662F\u5176\u5B83\u573A\u666F\u91CC\u53EF\u80FD\u4F1A\u662F\u4E0D\u60F3\u770B\u5230\u7684\u60C5\u51B5\uFF0C\u56E0\u4E3A\u5E0C\u671B\u5F97\u5230\u7684\u662F\u4E00\u6B21\u201C\u7EAF\u51C0\u201D\u7684\u6784\u5EFA\u3002\u65B0\u7684<code>noEmitOnError</code>\u6807\u8BB0\u53EF\u4EE5\u963B\u6B62\u5728\u7F16\u8BD1\u65F6\u9047\u5230\u9519\u8BEF\u7684\u60C5\u51B5\u4E0B\u7EE7\u7EED\u751F\u6210.js\u4EE3\u7801\u3002</p><p>\u5B83\u73B0\u5728\u662FMSBuild\u5DE5\u7A0B\u7684\u9ED8\u8BA4\u884C\u4E3A\uFF1B\u8FD9\u5141\u8BB8MSBuild\u6301\u7EED\u6784\u5EFA\u4EE5\u6211\u4EEC\u60F3\u8981\u7684\u884C\u4E3A\u8FDB\u884C\uFF0C\u8F93\u51FA\u6C38\u8FDC\u662F\u6765\u81EA\u7EAF\u51C0\u7684\u6784\u5EFA\u3002</p><h2 id="amd-\u6A21\u5757\u540D" tabindex="-1"><a class="header-anchor" href="#amd-\u6A21\u5757\u540D" aria-hidden="true">#</a> AMD \u6A21\u5757\u540D</h2><p>\u9ED8\u8BA4\u60C5\u51B5\u4E0BAMD\u6A21\u5757\u4EE5\u533F\u540D\u5F62\u5F0F\u751F\u6210\u3002\u8FD9\u5728\u4F7F\u7528\u5176\u5B83\u5DE5\u5177\uFF08\u6BD4\u5982\uFF0Cr.js\uFF09\u5904\u7406\u751F\u6210\u7684\u6A21\u5757\u7684\u65F6\u53EF\u80FD\u4F1A\u5E26\u6765\u9EBB\u70E6\u3002</p><p>\u65B0\u7684<code>amd-module name</code>\u6807\u7B7E\u5141\u8BB8\u7ED9\u7F16\u8BD1\u5668\u4F20\u5165\u4E00\u4E2A\u53EF\u9009\u7684\u6A21\u5757\u540D\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">//// [amdModule.ts]</span>
<span class="token comment">///&lt;amd-module name=&#39;NamedModule&#39;/&gt;</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name"><span class="token constant">C</span></span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u7ED3\u679C\u4F1A\u628A<code>NamedModule</code>\u8D4B\u503C\u6210\u6A21\u5757\u540D\uFF0C\u505A\u4E3A\u8C03\u7528AMD<code>define</code>\u7684\u4E00\u90E8\u5206\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//// [amdModule.js]</span>
<span class="token function">define</span><span class="token punctuation">(</span><span class="token string">&quot;NamedModule&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&quot;require&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;exports&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">require<span class="token punctuation">,</span> exports</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> <span class="token constant">C</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">function</span> <span class="token constant">C</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token constant">C</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    exports<span class="token punctuation">.</span><span class="token constant">C</span> <span class="token operator">=</span> <span class="token constant">C</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>`,62);function t(e,o){return p}var r=s(a,[["render",t]]);export{r as default};
