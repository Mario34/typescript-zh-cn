import{r as o,o as l,c as r,a as s,b as a,w as p,F as i,e as t,d as n}from"./app.fed89489.js";import{_ as u}from"./plugin-vue_export-helper.21dcd24c.js";const k={},d=t(`<h1 id="\u5B9E\u7528\u5DE5\u5177\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u7528\u5DE5\u5177\u7C7B\u578B" aria-hidden="true">#</a> \u5B9E\u7528\u5DE5\u5177\u7C7B\u578B</h1><p>TypeScript \u63D0\u4F9B\u4E00\u4E9B\u5DE5\u5177\u7C7B\u578B\u6765\u5E2E\u52A9\u5E38\u89C1\u7684\u7C7B\u578B\u8F6C\u6362\u3002\u8FD9\u4E9B\u7C7B\u578B\u662F\u5168\u5C40\u53EF\u89C1\u7684\u3002</p><h2 id="\u76EE\u5F55" tabindex="-1"><a class="header-anchor" href="#\u76EE\u5F55" aria-hidden="true">#</a> \u76EE\u5F55</h2><ul><li><a href="#partialtype"><code>Partial&lt;T&gt;</code>\uFF0CTypeScript 2.1</a></li><li><a href="#readonlytype"><code>Readonly&lt;Type&gt;</code>\uFF0CTypeScript 2.1</a></li><li><a href="#recordkeys-type"><code>Record&lt;Keys, Type&gt;</code>\uFF0CTypeScript 2.1</a></li><li><a href="#picktype-keys"><code>Pick&lt;Type, Keys&gt;</code>\uFF0CTypeScript 2.1</a></li><li><a href="#omittype-keys"><code>Omit&lt;Type, Keys&gt;</code>\uFF0CTypeScript 3.5</a></li><li><a href="#excludetype-excludedunion"><code>Exclude&lt;Type, ExcludedUnion&gt;</code>\uFF0CTypeScript 2.8</a></li><li><a href="#extracttype-union"><code>Extract&lt;Type, Union&gt;</code>\uFF0CTypeScript 2.8</a></li><li><a href="#nonnullabletype"><code>NonNullable&lt;Type&gt;</code>\uFF0CTypeScript 2.8</a></li><li><a href="#parameterstype"><code>Parameters&lt;Type&gt;</code></a></li><li><a href="#constructorparameterstype"><code>ConstructorParameters&lt;Type&gt;</code></a></li><li><a href="#returntypetype"><code>ReturnType&lt;Type&gt;</code>\uFF0CTypeScript 2.8</a></li><li><a href="#instancetypetype"><code>InstanceType&lt;Type&gt;</code>\uFF0CTypeScript 2.8</a></li><li><a href="#requiredtype"><code>Required&lt;Type&gt;</code>\uFF0CTypeScript 2.8</a></li><li><a href="#thisparametertypetype"><code>ThisParameterType&lt;Type&gt;</code></a></li><li><a href="#omitthisparametertype"><code>OmitThisParameter&lt;Type&gt;</code></a></li><li><a href="#thistypetype"><code>ThisType&lt;Type&gt;</code>\uFF0CTypeScript 2.8</a></li><li><a href="#%E6%93%8D%E4%BD%9C%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E7%B1%BB%E5%9E%8B">\u64CD\u4F5C\u5B57\u7B26\u4E32\u7684\u7C7B\u578B</a></li></ul><h2 id="partial-type" tabindex="-1"><a class="header-anchor" href="#partial-type" aria-hidden="true">#</a> <code>Partial&lt;Type&gt;</code></h2><p>\u6784\u9020\u7C7B\u578B<code>Type</code>\uFF0C\u5E76\u5C06\u5B83\u6240\u6709\u7684\u5C5E\u6027\u8BBE\u7F6E\u4E3A\u53EF\u9009\u7684\u3002\u5B83\u7684\u8FD4\u56DE\u7C7B\u578B\u8868\u793A\u8F93\u5165\u7C7B\u578B\u7684\u6240\u6709\u5B50\u7C7B\u578B\u3002</p><h3 id="\u4F8B\u5B50" tabindex="-1"><a class="header-anchor" href="#\u4F8B\u5B50" aria-hidden="true">#</a> \u4F8B\u5B50</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Todo</span> <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    description<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">updateTodo</span><span class="token punctuation">(</span>todo<span class="token operator">:</span> Todo<span class="token punctuation">,</span> fieldsToUpdate<span class="token operator">:</span> Partial<span class="token operator">&lt;</span>Todo<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token operator">...</span>todo<span class="token punctuation">,</span> <span class="token operator">...</span>fieldsToUpdate <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> todo1 <span class="token operator">=</span> <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">&#39;organize desk&#39;</span><span class="token punctuation">,</span>
    description<span class="token operator">:</span> <span class="token string">&#39;clear clutter&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> todo2 <span class="token operator">=</span> <span class="token function">updateTodo</span><span class="token punctuation">(</span>todo1<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    description<span class="token operator">:</span> <span class="token string">&#39;throw out trash&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h2 id="readonly-type" tabindex="-1"><a class="header-anchor" href="#readonly-type" aria-hidden="true">#</a> <code>Readonly&lt;Type&gt;</code></h2><p>\u6784\u9020\u7C7B\u578B<code>Type</code>\uFF0C\u5E76\u5C06\u5B83\u6240\u6709\u7684\u5C5E\u6027\u8BBE\u7F6E\u4E3A<code>readonly</code>\uFF0C\u4E5F\u5C31\u662F\u8BF4\u6784\u9020\u51FA\u7684\u7C7B\u578B\u7684\u5C5E\u6027\u4E0D\u80FD\u88AB\u518D\u6B21\u8D4B\u503C\u3002</p><h3 id="\u4F8B\u5B50-1" tabindex="-1"><a class="header-anchor" href="#\u4F8B\u5B50-1" aria-hidden="true">#</a> \u4F8B\u5B50</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Todo</span> <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> todo<span class="token operator">:</span> Readonly<span class="token operator">&lt;</span>Todo<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">&#39;Delete inactive users&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

todo<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token string">&#39;Hello&#39;</span><span class="token punctuation">;</span> <span class="token comment">// Error: cannot reassign a readonly property</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>`,12),b=n("\u8FD9\u4E2A\u5DE5\u5177\u53EF\u7528\u6765\u8868\u793A\u5728\u8FD0\u884C\u65F6\u4F1A\u5931\u8D25\u7684\u8D4B\u503C\u8868\u8FBE\u5F0F\uFF08\u6BD4\u5982\uFF0C\u5F53\u5C1D\u8BD5\u7ED9"),m={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze",target:"_blank",rel:"noopener noreferrer"},y=n("\u51BB\u7ED3\u5BF9\u8C61"),h=n("\u7684\u5C5E\u6027\u518D\u6B21\u8D4B\u503C\u65F6\uFF09\u3002"),g=t(`<h3 id="object-freeze" tabindex="-1"><a class="header-anchor" href="#object-freeze" aria-hidden="true">#</a> <code>Object.freeze</code></h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">freeze</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>obj<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> Readonly<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="record-keys-type" tabindex="-1"><a class="header-anchor" href="#record-keys-type" aria-hidden="true">#</a> <code>Record&lt;Keys, Type&gt;</code></h2><p>\u6784\u9020\u4E00\u4E2A\u7C7B\u578B\uFF0C\u5176\u5C5E\u6027\u540D\u7684\u7C7B\u578B\u4E3A<code>K</code>\uFF0C\u5C5E\u6027\u503C\u7684\u7C7B\u578B\u4E3A<code>T</code>\u3002\u8FD9\u4E2A\u5DE5\u5177\u53EF\u7528\u6765\u5C06\u67D0\u4E2A\u7C7B\u578B\u7684\u5C5E\u6027\u6620\u5C04\u5230\u53E6\u4E00\u4E2A\u7C7B\u578B\u4E0A\u3002</p><h3 id="\u4F8B\u5B50-2" tabindex="-1"><a class="header-anchor" href="#\u4F8B\u5B50-2" aria-hidden="true">#</a> \u4F8B\u5B50</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">PageInfo</span> <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> <span class="token class-name">Page</span> <span class="token operator">=</span> <span class="token string">&#39;home&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;about&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;contact&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> x<span class="token operator">:</span> Record<span class="token operator">&lt;</span>Page<span class="token punctuation">,</span> PageInfo<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    about<span class="token operator">:</span> <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">&#39;about&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    contact<span class="token operator">:</span> <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">&#39;contact&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    home<span class="token operator">:</span> <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">&#39;home&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="pick-type-keys" tabindex="-1"><a class="header-anchor" href="#pick-type-keys" aria-hidden="true">#</a> <code>Pick&lt;Type, Keys&gt;</code></h2><p>\u4ECE\u7C7B\u578B<code>Type</code>\u4E2D\u6311\u9009\u90E8\u5206\u5C5E\u6027<code>Keys</code>\u6765\u6784\u9020\u7C7B\u578B\u3002</p><h3 id="\u4F8B\u5B50-3" tabindex="-1"><a class="header-anchor" href="#\u4F8B\u5B50-3" aria-hidden="true">#</a> \u4F8B\u5B50</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Todo</span> <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    description<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    completed<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> <span class="token class-name">TodoPreview</span> <span class="token operator">=</span> Pick<span class="token operator">&lt;</span>Todo<span class="token punctuation">,</span> <span class="token string">&#39;title&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;completed&#39;</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> todo<span class="token operator">:</span> TodoPreview <span class="token operator">=</span> <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">&#39;Clean room&#39;</span><span class="token punctuation">,</span>
    completed<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="omit-type-keys" tabindex="-1"><a class="header-anchor" href="#omit-type-keys" aria-hidden="true">#</a> <code>Omit&lt;Type, Keys&gt;</code></h2><p>\u4ECE\u7C7B\u578B<code>Type</code>\u4E2D\u83B7\u53D6\u6240\u6709\u5C5E\u6027\uFF0C\u7136\u540E\u4ECE\u4E2D\u5254\u9664<code>Keys</code>\u5C5E\u6027\u540E\u6784\u9020\u4E00\u4E2A\u7C7B\u578B\u3002</p><h3 id="\u4F8B\u5B50-4" tabindex="-1"><a class="header-anchor" href="#\u4F8B\u5B50-4" aria-hidden="true">#</a> \u4F8B\u5B50</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Todo</span> <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    description<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    completed<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> <span class="token class-name">TodoPreview</span> <span class="token operator">=</span> Omit<span class="token operator">&lt;</span>Todo<span class="token punctuation">,</span> <span class="token string">&#39;description&#39;</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> todo<span class="token operator">:</span> TodoPreview <span class="token operator">=</span> <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">&#39;Clean room&#39;</span><span class="token punctuation">,</span>
    completed<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="exclude-type-excludedunion" tabindex="-1"><a class="header-anchor" href="#exclude-type-excludedunion" aria-hidden="true">#</a> <code>Exclude&lt;Type, ExcludedUnion&gt;</code></h2><p>\u4ECE\u7C7B\u578B<code>Type</code>\u4E2D\u5254\u9664\u6240\u6709\u53EF\u4EE5\u8D4B\u503C\u7ED9<code>ExcludedUnion</code>\u7684\u5C5E\u6027\uFF0C\u7136\u540E\u6784\u9020\u4E00\u4E2A\u7C7B\u578B\u3002</p><h3 id="\u4F8B\u5B50-5" tabindex="-1"><a class="header-anchor" href="#\u4F8B\u5B50-5" aria-hidden="true">#</a> \u4F8B\u5B50</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T0</span></span> <span class="token operator">=</span> Exclude<span class="token operator">&lt;</span><span class="token string">&#39;a&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;b&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// &quot;b&quot; | &quot;c&quot;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T1</span></span> <span class="token operator">=</span> Exclude<span class="token operator">&lt;</span><span class="token string">&#39;a&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;b&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;b&#39;</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// &quot;c&quot;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T2</span></span> <span class="token operator">=</span> Exclude<span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">Function</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// string | number</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="extract-type-union" tabindex="-1"><a class="header-anchor" href="#extract-type-union" aria-hidden="true">#</a> <code>Extract&lt;Type, Union&gt;</code></h2><p>\u4ECE\u7C7B\u578B<code>Type</code>\u4E2D\u63D0\u53D6\u6240\u6709\u53EF\u4EE5\u8D4B\u503C\u7ED9<code>Union</code>\u7684\u7C7B\u578B\uFF0C\u7136\u540E\u6784\u9020\u4E00\u4E2A\u7C7B\u578B\u3002</p><h3 id="\u4F8B\u5B50-6" tabindex="-1"><a class="header-anchor" href="#\u4F8B\u5B50-6" aria-hidden="true">#</a> \u4F8B\u5B50</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T0</span></span> <span class="token operator">=</span> Extract<span class="token operator">&lt;</span><span class="token string">&#39;a&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;b&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;f&#39;</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// &quot;a&quot;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T1</span></span> <span class="token operator">=</span> Extract<span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">Function</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// () =&gt; void</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="nonnullable-type" tabindex="-1"><a class="header-anchor" href="#nonnullable-type" aria-hidden="true">#</a> <code>NonNullable&lt;Type&gt;</code></h2><p>\u4ECE\u7C7B\u578B<code>Type</code>\u4E2D\u5254\u9664<code>null</code>\u548C<code>undefined</code>\uFF0C\u7136\u540E\u6784\u9020\u4E00\u4E2A\u7C7B\u578B\u3002</p><h3 id="\u4F8B\u5B50-7" tabindex="-1"><a class="header-anchor" href="#\u4F8B\u5B50-7" aria-hidden="true">#</a> \u4F8B\u5B50</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T0</span></span> <span class="token operator">=</span> NonNullable<span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// string | number</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T1</span></span> <span class="token operator">=</span> NonNullable<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// string[]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="parameters-type" tabindex="-1"><a class="header-anchor" href="#parameters-type" aria-hidden="true">#</a> <code>Parameters&lt;Type&gt;</code></h2><p>\u7531\u51FD\u6570\u7C7B\u578B<code>Type</code>\u7684\u53C2\u6570\u7C7B\u578B\u6765\u6784\u5EFA\u51FA\u4E00\u4E2A\u5143\u7EC4\u7C7B\u578B\u3002</p><h3 id="\u4F8B\u5B50-8" tabindex="-1"><a class="header-anchor" href="#\u4F8B\u5B50-8" aria-hidden="true">#</a> \u4F8B\u5B50</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token function">f1</span><span class="token punctuation">(</span>arg<span class="token operator">:</span> <span class="token punctuation">{</span> a<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> b<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T0</span></span> <span class="token operator">=</span> Parameters<span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token comment">//    []</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T1</span></span> <span class="token operator">=</span> Parameters<span class="token operator">&lt;</span><span class="token punctuation">(</span>s<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token comment">//    [s: string]</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T2</span></span> <span class="token operator">=</span> Parameters<span class="token operator">&lt;&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>arg<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token comment">//    [arg: unknown]</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T3</span></span> <span class="token operator">=</span> Parameters<span class="token operator">&lt;</span><span class="token keyword">typeof</span> f1<span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token comment">//    [arg: { a: number; b: string; }]</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T4</span></span> <span class="token operator">=</span> Parameters<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token comment">//    unknown[]</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T5</span></span> <span class="token operator">=</span> Parameters<span class="token operator">&lt;</span><span class="token builtin">never</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token comment">//    never</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T6</span></span> <span class="token operator">=</span> Parameters<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token comment">//   never</span>
<span class="token comment">//   Type &#39;string&#39; does not satisfy the constraint &#39;(...args: any) =&gt; any&#39;.</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T7</span></span> <span class="token operator">=</span> Parameters<span class="token operator">&lt;</span><span class="token builtin">Function</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token comment">//   never</span>
<span class="token comment">//   Type &#39;Function&#39; does not satisfy the constraint &#39;(...args: any) =&gt; any&#39;.</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h2 id="constructorparameters-type" tabindex="-1"><a class="header-anchor" href="#constructorparameters-type" aria-hidden="true">#</a> <code>ConstructorParameters&lt;Type&gt;</code></h2><p>\u7531\u6784\u9020\u51FD\u6570\u7C7B\u578B\u6765\u6784\u5EFA\u51FA\u4E00\u4E2A\u5143\u7EC4\u7C7B\u578B\u6216\u6570\u7EC4\u7C7B\u578B\u3002 \u7531\u6784\u9020\u51FD\u6570\u7C7B\u578B<code>Type</code>\u7684\u53C2\u6570\u7C7B\u578B\u6765\u6784\u5EFA\u51FA\u4E00\u4E2A\u5143\u7EC4\u7C7B\u578B\u3002\uFF08\u82E5<code>Type</code>\u4E0D\u662F\u6784\u9020\u51FD\u6570\u7C7B\u578B\uFF0C\u5219\u8FD4\u56DE<code>never</code>\uFF09\u3002</p><h3 id="\u4F8B\u5B50-9" tabindex="-1"><a class="header-anchor" href="#\u4F8B\u5B50-9" aria-hidden="true">#</a> \u4F8B\u5B50</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T0</span></span> <span class="token operator">=</span> ConstructorParameters<span class="token operator">&lt;</span>ErrorConstructor<span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token comment">//    [message?: string | undefined]</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T1</span></span> <span class="token operator">=</span> ConstructorParameters<span class="token operator">&lt;</span>FunctionConstructor<span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token comment">//    string[]</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T2</span></span> <span class="token operator">=</span> ConstructorParameters<span class="token operator">&lt;</span>RegExpConstructor<span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token comment">//    [pattern: string | RegExp, flags?: string | undefined]</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T3</span></span> <span class="token operator">=</span> ConstructorParameters<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token comment">//   unknown[]</span>

<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T4</span></span> <span class="token operator">=</span> ConstructorParameters<span class="token operator">&lt;</span><span class="token builtin">Function</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token comment">//    never</span>
<span class="token comment">// Type &#39;Function&#39; does not satisfy the constraint &#39;new (...args: any) =&gt; any&#39;.</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="returntype-type" tabindex="-1"><a class="header-anchor" href="#returntype-type" aria-hidden="true">#</a> <code>ReturnType&lt;Type&gt;</code></h2><p>\u7531\u51FD\u6570\u7C7B\u578B<code>Type</code>\u7684\u8FD4\u56DE\u503C\u7C7B\u578B\u6784\u5EFA\u4E00\u4E2A\u65B0\u7C7B\u578B\u3002</p><h3 id="\u4F8B\u5B50-10" tabindex="-1"><a class="header-anchor" href="#\u4F8B\u5B50-10" aria-hidden="true">#</a> \u4F8B\u5B50</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>type T0 = ReturnType&lt;() =&gt; string&gt;;  // string
type T1 = ReturnType&lt;(s: string) =&gt; void&gt;;  // void
type T2 = ReturnType&lt;(&lt;T&gt;() =&gt; T)&gt;;  // {}
type T3 = ReturnType&lt;(&lt;T extends U, U extends number[]&gt;() =&gt; T)&gt;;  // number[]
type T4 = ReturnType&lt;typeof f1&gt;;  // { a: number, b: string }
type T5 = ReturnType&lt;any&gt;;  // any
type T6 = ReturnType&lt;never&gt;;  // any
type T7 = ReturnType&lt;string&gt;;  // Error
type T8 = ReturnType&lt;Function&gt;;  // Error
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="instancetype-type" tabindex="-1"><a class="header-anchor" href="#instancetype-type" aria-hidden="true">#</a> <code>InstanceType&lt;Type&gt;</code></h2><p>\u7531\u6784\u9020\u51FD\u6570\u7C7B\u578B<code>Type</code>\u7684\u5B9E\u4F8B\u7C7B\u578B\u6765\u6784\u5EFA\u4E00\u4E2A\u65B0\u7C7B\u578B\u3002</p><h3 id="\u4F8B\u5B50-11" tabindex="-1"><a class="header-anchor" href="#\u4F8B\u5B50-11" aria-hidden="true">#</a> \u4F8B\u5B50</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name"><span class="token constant">C</span></span> <span class="token punctuation">{</span>
    x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T0</span></span> <span class="token operator">=</span> InstanceType<span class="token operator">&lt;</span><span class="token keyword">typeof</span> <span class="token constant">C</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// C</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T1</span></span> <span class="token operator">=</span> InstanceType<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// any</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T2</span></span> <span class="token operator">=</span> InstanceType<span class="token operator">&lt;</span><span class="token builtin">never</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// any</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T3</span></span> <span class="token operator">=</span> InstanceType<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// Error</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T4</span></span> <span class="token operator">=</span> InstanceType<span class="token operator">&lt;</span><span class="token builtin">Function</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// Error</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="required-type" tabindex="-1"><a class="header-anchor" href="#required-type" aria-hidden="true">#</a> <code>Required&lt;Type&gt;</code></h2><p>\u6784\u5EFA\u4E00\u4E2A\u7C7B\u578B\uFF0C\u4F7F\u7C7B\u578B<code>Type</code>\u7684\u6240\u6709\u5C5E\u6027\u4E3A<code>required</code>\u3002 \u4E0E\u6B64\u76F8\u53CD\u7684\u662F<a href="#partialtype"><code>Partial</code></a>\u3002</p><h3 id="\u4F8B\u5B50-12" tabindex="-1"><a class="header-anchor" href="#\u4F8B\u5B50-12" aria-hidden="true">#</a> \u4F8B\u5B50</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Props</span> <span class="token punctuation">{</span>
    a<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
    b<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> obj<span class="token operator">:</span> Props <span class="token operator">=</span> <span class="token punctuation">{</span> a<span class="token operator">:</span> <span class="token number">5</span> <span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// OK</span>

<span class="token keyword">const</span> obj2<span class="token operator">:</span> Required<span class="token operator">&lt;</span>Props<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span> a<span class="token operator">:</span> <span class="token number">5</span> <span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// Error: property &#39;b&#39; missing</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="thisparametertype-type" tabindex="-1"><a class="header-anchor" href="#thisparametertype-type" aria-hidden="true">#</a> <code>ThisParameterType&lt;Type&gt;</code></h2>`,47),T=n("\u4ECE\u51FD\u6570\u7C7B\u578B\u4E2D\u63D0\u53D6 "),f=n("this"),x=n(" \u53C2\u6570\u7684\u7C7B\u578B\u3002 \u82E5\u51FD\u6570\u7C7B\u578B\u4E0D\u5305\u542B "),v=s("code",null,"this",-1),_=n(" \u53C2\u6570\uFF0C\u5219\u8FD4\u56DE "),w=n("unknown"),E=n(" \u7C7B\u578B\u3002"),P=t(`<h3 id="\u4F8B\u5B50-13" tabindex="-1"><a class="header-anchor" href="#\u4F8B\u5B50-13" aria-hidden="true">#</a> \u4F8B\u5B50</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">toHex</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token operator">:</span> Number<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">numberToString</span><span class="token punctuation">(</span>n<span class="token operator">:</span> ThisParameterType<span class="token operator">&lt;</span><span class="token keyword">typeof</span> toHex<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">toHex</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="omitthisparameter-type" tabindex="-1"><a class="header-anchor" href="#omitthisparameter-type" aria-hidden="true">#</a> <code>OmitThisParameter&lt;Type&gt;</code></h2>`,3),R=n("\u4ECE"),B=s("code",null,"Type",-1),C=n("\u7C7B\u578B\u4E2D\u5254\u9664 "),S=s("code",null,"this",-1),j=n(" \u53C2\u6570\u3002 \u82E5\u672A\u58F0\u660E "),D=s("code",null,"this",-1),q=n(" \u53C2\u6570\uFF0C\u5219\u7ED3\u679C\u7C7B\u578B\u4E3A "),O=s("code",null,"Type",-1),N=n(" \u3002 \u5426\u5219\uFF0C\u7531"),F=s("code",null,"Type",-1),I=n("\u7C7B\u578B\u6765\u6784\u5EFA\u4E00\u4E2A\u4E0D\u5E26"),U=s("code",null,"this",-1),K=n("\u53C2\u6570\u7684\u7C7B\u578B\u3002 \u6CDB\u578B\u4F1A\u88AB\u5FFD\u7565\uFF0C\u5E76\u4E14\u53EA\u6709\u6700\u540E\u7684\u91CD\u8F7D\u7B7E\u540D\u4F1A\u88AB\u91C7\u7528\u3002"),H=t(`<h3 id="\u4F8B\u5B50-14" tabindex="-1"><a class="header-anchor" href="#\u4F8B\u5B50-14" aria-hidden="true">#</a> \u4F8B\u5B50</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">toHex</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token operator">:</span> Number<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> fiveToHex<span class="token operator">:</span> OmitThisParameter<span class="token operator">&lt;</span><span class="token keyword">typeof</span> toHex<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token function">toHex</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">fiveToHex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="thistype-type" tabindex="-1"><a class="header-anchor" href="#thistype-type" aria-hidden="true">#</a> <code>ThisType&lt;Type&gt;</code></h2>`,3),M=n("\u8FD9\u4E2A\u5DE5\u5177\u4E0D\u4F1A\u8FD4\u56DE\u4E00\u4E2A\u8F6C\u6362\u540E\u7684\u7C7B\u578B\u3002 \u5B83\u505A\u4E3A\u4E0A\u4E0B\u6587\u7684"),A=s("code",null,"this",-1),z=n("\u7C7B\u578B\u7684\u4E00\u4E2A\u6807\u8BB0\u3002 \u6CE8\u610F\uFF0C\u82E5\u60F3\u4F7F\u7528\u6B64\u7C7B\u578B\uFF0C\u5FC5\u987B\u542F\u7528"),L=s("code",null,"--noImplicitThis",-1),V=n("\u3002"),G=t(`<h3 id="\u4F8B\u5B50-15" tabindex="-1"><a class="header-anchor" href="#\u4F8B\u5B50-15" aria-hidden="true">#</a> \u4F8B\u5B50</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// Compile with --noImplicitThis</span>

<span class="token keyword">type</span> <span class="token class-name">ObjectDescriptor<span class="token operator">&lt;</span><span class="token constant">D</span><span class="token punctuation">,</span> <span class="token constant">M</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    data<span class="token operator">?</span><span class="token operator">:</span> <span class="token constant">D</span><span class="token punctuation">;</span>
    methods<span class="token operator">?</span><span class="token operator">:</span> <span class="token constant">M</span> <span class="token operator">&amp;</span> ThisType<span class="token operator">&lt;</span><span class="token constant">D</span> <span class="token operator">&amp;</span> <span class="token constant">M</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// Type of &#39;this&#39; in methods is D &amp; M</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">makeObject</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">D</span><span class="token punctuation">,</span> <span class="token constant">M</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>desc<span class="token operator">:</span> ObjectDescriptor<span class="token operator">&lt;</span><span class="token constant">D</span><span class="token punctuation">,</span> <span class="token constant">M</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">D</span> <span class="token operator">&amp;</span> <span class="token constant">M</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> data<span class="token operator">:</span> object <span class="token operator">=</span> desc<span class="token punctuation">.</span>data <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> methods<span class="token operator">:</span> object <span class="token operator">=</span> desc<span class="token punctuation">.</span>methods <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token operator">...</span>data<span class="token punctuation">,</span> <span class="token operator">...</span>methods <span class="token punctuation">}</span> <span class="token keyword">as</span> <span class="token constant">D</span> <span class="token operator">&amp;</span> <span class="token constant">M</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token function">makeObject</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    data<span class="token operator">:</span> <span class="token punctuation">{</span> x<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    methods<span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token function">moveBy</span><span class="token punctuation">(</span>dx<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> dy<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">+=</span> dx<span class="token punctuation">;</span> <span class="token comment">// Strongly typed this</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">+=</span> dy<span class="token punctuation">;</span> <span class="token comment">// Strongly typed this</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

obj<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
obj<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>
obj<span class="token punctuation">.</span><span class="token function">moveBy</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><p>\u4E0A\u9762\u4F8B\u5B50\u4E2D\uFF0C<code>makeObject</code>\u53C2\u6570\u91CC\u7684<code>methods</code>\u5BF9\u8C61\u5177\u6709\u4E00\u4E2A\u4E0A\u4E0B\u6587\u7C7B\u578B<code>ThisType&lt;D &amp; M&gt;</code>\uFF0C\u56E0\u6B64<code>methods</code>\u5BF9\u8C61\u7684\u65B9\u6CD5\u91CC<code>this</code>\u7684\u7C7B\u578B\u4E3A<code>{ x: number, y: number } &amp; { moveBy(dx: number, dy: number): number }</code>\u3002</p><p>\u5728<code>lib.d.ts</code>\u91CC\uFF0C<code>ThisType&lt;T&gt;</code>\u6807\u8BC6\u63A5\u53E3\u662F\u4E2A\u7B80\u5355\u7684\u7A7A\u63A5\u53E3\u58F0\u660E\u3002\u9664\u4E86\u5728\u88AB\u8BC6\u522B\u4E3A\u5BF9\u8C61\u5B57\u9762\u91CF\u7684\u4E0A\u4E0B\u6587\u7C7B\u578B\u4E4B\u5916\uFF0C\u8FD9\u4E2A\u63A5\u53E3\u4E0E\u4E00\u822C\u7684\u7A7A\u63A5\u53E3\u6CA1\u6709\u4EC0\u4E48\u4E0D\u540C\u3002</p><h2 id="\u64CD\u4F5C\u5B57\u7B26\u4E32\u7684\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u64CD\u4F5C\u5B57\u7B26\u4E32\u7684\u7C7B\u578B" aria-hidden="true">#</a> \u64CD\u4F5C\u5B57\u7B26\u4E32\u7684\u7C7B\u578B</h2>`,5),J=n("\u4E3A\u4E86\u4FBF\u4E8E\u64CD\u4F5C\u6A21\u7248\u5B57\u7B26\u4E32\u5B57\u9762\u91CF\uFF0CTypeScript \u5F15\u5165\u4E86\u4E00\u4E9B\u80FD\u591F\u64CD\u4F5C\u5B57\u7B26\u4E32\u7684\u7C7B\u578B\u3002 \u66F4\u591A\u8BE6\u60C5\uFF0C\u8BF7\u9605\u8BFB"),W=n("\u6A21\u7248\u5B57\u9762\u91CF\u7C7B\u578B"),Q=n("\u3002");function X(Y,Z){const c=o("ExternalLinkIcon"),e=o("RouterLink");return l(),r(i,null,[d,s("p",null,[b,s("a",m,[y,a(c)]),h]),g,s("p",null,[T,a(e,{to:"/handbook/functions.html#this%E5%8F%82%E6%95%B0"},{default:p(()=>[f]),_:1}),x,v,_,a(e,{to:"/handbook/basic-types.html#unknown"},{default:p(()=>[w]),_:1}),E]),P,s("p",null,[R,B,C,a(e,{to:"/handbook/functions.html#this%E5%8F%82%E6%95%B0"},{default:p(()=>[S]),_:1}),j,D,q,O,N,F,I,U,K]),H,s("p",null,[M,a(e,{to:"/handbook/functions.html#this"},{default:p(()=>[A]),_:1}),z,L,V]),G,s("p",null,[J,a(e,{to:"/handbook-v2/type-manipulation/template-literal-types.html#%E5%9B%BA%E6%9C%89%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%93%8D%E4%BD%9C%E7%B1%BB%E5%9E%8B"},{default:p(()=>[W]),_:1}),Q])],64)}var sn=u(k,[["render",X]]);export{sn as default};
