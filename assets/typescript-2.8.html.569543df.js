import{r as o,o as e,c,a as s,b as p,F as l,e as t,d as n}from"./app.0186264c.js";import{_ as r}from"./plugin-vue_export-helper.21dcd24c.js";const k={},u=t(`<h1 id="typescript-2-8" tabindex="-1"><a class="header-anchor" href="#typescript-2-8" aria-hidden="true">#</a> TypeScript 2.8</h1><h2 id="\u6709\u6761\u4EF6\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u6709\u6761\u4EF6\u7C7B\u578B" aria-hidden="true">#</a> \u6709\u6761\u4EF6\u7C7B\u578B</h2><p>TypeScript 2.8\u5F15\u5165\u4E86_\u6709\u6761\u4EF6\u7C7B\u578B_\uFF0C\u5B83\u80FD\u591F\u8868\u793A\u975E\u7EDF\u4E00\u7684\u7C7B\u578B\u3002 \u6709\u6761\u4EF6\u7684\u7C7B\u578B\u4F1A\u4EE5\u4E00\u4E2A\u6761\u4EF6\u8868\u8FBE\u5F0F\u8FDB\u884C\u7C7B\u578B\u5173\u7CFB\u68C0\u6D4B\uFF0C\u4ECE\u800C\u5728\u4E24\u79CD\u7C7B\u578B\u4E2D\u9009\u62E9\u5176\u4E00\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">U</span></span> <span class="token operator">?</span> <span class="token constant">X</span> <span class="token operator">:</span> <span class="token constant">Y</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u4E0A\u9762\u7684\u7C7B\u578B\u610F\u601D\u662F\uFF0C\u82E5<code>T</code>\u80FD\u591F\u8D4B\u503C\u7ED9<code>U</code>\uFF0C\u90A3\u4E48\u7C7B\u578B\u662F<code>X</code>\uFF0C\u5426\u5219\u4E3A<code>Y</code>\u3002</p><p>\u6709\u6761\u4EF6\u7684\u7C7B\u578B<code>T extends U ? X : Y</code>\u6216\u8005_\u89E3\u6790_\u4E3A<code>X</code>\uFF0C\u6216\u8005_\u89E3\u6790_\u4E3A<code>Y</code>\uFF0C\u518D\u6216\u8005_\u5EF6\u8FDF_\u89E3\u6790\uFF0C\u56E0\u4E3A\u5B83\u53EF\u80FD\u4F9D\u8D56\u4E00\u4E2A\u6216\u591A\u4E2A\u7C7B\u578B\u53D8\u91CF\u3002 \u662F\u5426\u76F4\u63A5\u89E3\u6790\u6216\u63A8\u8FDF\u53D6\u51B3\u4E8E\uFF1A</p><ul><li>\u9996\u5148\uFF0C\u4EE4<code>T&#39;</code>\u548C<code>U&#39;</code>\u5206\u522B\u4E3A<code>T</code>\u548C<code>U</code>\u7684\u5B9E\u4F8B\uFF0C\u5E76\u5C06\u6240\u6709\u7C7B\u578B\u53C2\u6570\u66FF\u6362\u4E3A<code>any</code>\uFF0C\u5982\u679C<code>T&#39;</code>\u4E0D\u80FD\u8D4B\u503C\u7ED9<code>U&#39;</code>\uFF0C\u5219\u5C06\u6709\u6761\u4EF6\u7684\u7C7B\u578B\u89E3\u6790\u6210<code>Y</code>\u3002\u76F4\u89C2\u4E0A\u8BB2\uFF0C\u5982\u679C\u6700\u5BBD\u6CDB\u7684<code>T</code>\u7684\u5B9E\u4F8B\u4E0D\u80FD\u8D4B\u503C\u7ED9\u6700\u5BBD\u6CDB\u7684<code>U</code>\u7684\u5B9E\u4F8B\uFF0C\u90A3\u4E48\u6211\u4EEC\u5C31\u53EF\u4EE5\u65AD\u5B9A\u4E0D\u5B58\u5728\u53EF\u4EE5\u8D4B\u503C\u7684\u5B9E\u4F8B\uFF0C\u56E0\u6B64\u53EF\u4EE5\u89E3\u6790\u4E3A<code>Y</code>\u3002</li><li>\u5176\u6B21\uFF0C\u9488\u5BF9\u6BCF\u4E2A\u5728<code>U</code>\u5185\u7531<code>\u63A8\u65AD</code>\u58F0\u660E\u5F15\u5165\u7684\u7C7B\u578B\u53D8\u91CF\uFF0C\u4F9D\u636E\u4ECE<code>T</code>\u63A8\u65AD\u5230<code>U</code>\u6765\u6536\u96C6\u4E00\u7EC4\u5019\u9009\u7C7B\u578B\uFF08\u4F7F\u7528\u4E0E\u6CDB\u578B\u51FD\u6570\u7C7B\u578B\u63A8\u65AD\u76F8\u540C\u7684\u63A8\u65AD\u7B97\u6CD5\uFF09\u3002\u5BF9\u4E8E\u7ED9\u5B9A\u7684<code>\u63A8\u65AD</code>\u7C7B\u578B\u53D8\u91CF<code>V</code>\uFF0C\u5982\u679C\u6709\u5019\u9009\u7C7B\u578B\u662F\u4ECE\u534F\u53D8\u7684\u4F4D\u7F6E\u4E0A\u63A8\u65AD\u51FA\u6765\u7684\uFF0C\u90A3\u4E48<code>V</code>\u7684\u7C7B\u578B\u662F\u90A3\u4E9B\u5019\u9009\u7C7B\u578B\u7684\u8054\u5408\u3002\u53CD\u4E4B\uFF0C\u5982\u679C\u6709\u5019\u9009\u7C7B\u578B\u662F\u4ECE\u9006\u53D8\u7684\u4F4D\u7F6E\u4E0A\u63A8\u65AD\u51FA\u6765\u7684\uFF0C\u90A3\u4E48<code>V</code>\u7684\u7C7B\u578B\u662F\u90A3\u4E9B\u5019\u9009\u7C7B\u578B\u7684\u4EA4\u53C9\u7C7B\u578B\u3002\u5426\u5219<code>V</code>\u7684\u7C7B\u578B\u662F<code>never</code>\u3002</li><li>\u7136\u540E\uFF0C\u4EE4<code>T&#39;&#39;</code>\u4E3A<code>T</code>\u7684\u4E00\u4E2A\u5B9E\u4F8B\uFF0C\u6240\u6709<code>\u63A8\u65AD</code>\u7684\u7C7B\u578B\u53D8\u91CF\u7528\u4E0A\u4E00\u6B65\u7684\u63A8\u65AD\u7ED3\u679C\u66FF\u6362\uFF0C\u5982\u679C<code>T&#39;&#39;</code>_\u660E\u663E\u53EF\u8D4B\u503C_\u7ED9<code>U</code>\uFF0C\u90A3\u4E48\u5C06\u6709\u6761\u4EF6\u7684\u7C7B\u578B\u89E3\u6790\u4E3A<code>X</code>\u3002\u9664\u53BB\u4E0D\u8003\u8651\u7C7B\u578B\u53D8\u91CF\u7684\u9650\u5236\u4E4B\u5916\uFF0C_\u660E\u663E\u53EF\u8D4B\u503C_\u7684\u5173\u7CFB\u4E0E\u6B63\u5E38\u7684\u8D4B\u503C\u5173\u7CFB\u4E00\u81F4\u3002\u76F4\u89C2\u4E0A\uFF0C\u5F53\u4E00\u4E2A\u7C7B\u578B\u660E\u663E\u53EF\u8D4B\u503C\u7ED9\u53E6\u4E00\u4E2A\u7C7B\u578B\uFF0C\u6211\u4EEC\u5C31\u80FD\u591F\u77E5\u9053\u5B83\u53EF\u4EE5\u8D4B\u503C\u7ED9\u90A3\u4E9B\u7C7B\u578B\u7684_\u6240\u6709_\u5B9E\u4F8B\u3002</li><li>\u5426\u5219\uFF0C\u8FD9\u4E2A\u6761\u4EF6\u4F9D\u8D56\u4E8E\u4E00\u4E2A\u6216\u591A\u4E2A\u7C7B\u578B\u53D8\u91CF\uFF0C\u6709\u6761\u4EF6\u7684\u7C7B\u578B\u89E3\u6790\u88AB\u63A8\u8FDF\u8FDB\u884C\u3002</li></ul><h4 id="\u4F8B\u5B50" tabindex="-1"><a class="header-anchor" href="#\u4F8B\u5B50" aria-hidden="true">#</a> \u4F8B\u5B50</h4><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">TypeName<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span>
    <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">string</span></span> <span class="token operator">?</span> <span class="token string">&quot;string&quot;</span> <span class="token operator">:</span>
    <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">number</span></span> <span class="token operator">?</span> <span class="token string">&quot;number&quot;</span> <span class="token operator">:</span>
    <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">boolean</span></span> <span class="token operator">?</span> <span class="token string">&quot;boolean&quot;</span> <span class="token operator">:</span>
    <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token keyword">undefined</span></span> <span class="token operator">?</span> <span class="token string">&quot;undefined&quot;</span> <span class="token operator">:</span>
    <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">Function</span></span> <span class="token operator">?</span> <span class="token string">&quot;function&quot;</span> <span class="token operator">:</span>
    <span class="token string">&quot;object&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T0</span></span> <span class="token operator">=</span> TypeName<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// &quot;string&quot;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T1</span></span> <span class="token operator">=</span> TypeName<span class="token operator">&lt;</span><span class="token string">&quot;a&quot;</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// &quot;string&quot;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T2</span></span> <span class="token operator">=</span> TypeName<span class="token operator">&lt;</span><span class="token boolean">true</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// &quot;boolean&quot;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T3</span></span> <span class="token operator">=</span> TypeName<span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// &quot;function&quot;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T4</span></span> <span class="token operator">=</span> TypeName<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// &quot;object&quot;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="\u5206\u5E03\u5F0F\u6709\u6761\u4EF6\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u5206\u5E03\u5F0F\u6709\u6761\u4EF6\u7C7B\u578B" aria-hidden="true">#</a> \u5206\u5E03\u5F0F\u6709\u6761\u4EF6\u7C7B\u578B</h3><p>\u5982\u679C\u6709\u6761\u4EF6\u7C7B\u578B\u91CC\u5F85\u68C0\u67E5\u7684\u7C7B\u578B\u662F<code>naked type parameter</code>\uFF0C\u90A3\u4E48\u5B83\u4E5F\u88AB\u79F0\u4E3A\u201C\u5206\u5E03\u5F0F\u6709\u6761\u4EF6\u7C7B\u578B\u201D\u3002 \u5206\u5E03\u5F0F\u6709\u6761\u4EF6\u7C7B\u578B\u5728\u5B9E\u4F8B\u5316\u65F6\u4F1A\u81EA\u52A8\u5206\u53D1\u6210\u8054\u5408\u7C7B\u578B\u3002 \u4F8B\u5982\uFF0C\u5B9E\u4F8B\u5316<code>T extends U ? X : Y</code>\uFF0C<code>T</code>\u7684\u7C7B\u578B\u4E3A<code>A | B | C</code>\uFF0C\u4F1A\u88AB\u89E3\u6790\u4E3A<code>(A extends U ? X : Y) | (B extends U ? X : Y) | (C extends U ? X : Y)</code>\u3002</p><h4 id="\u4F8B\u5B50-1" tabindex="-1"><a class="header-anchor" href="#\u4F8B\u5B50-1" aria-hidden="true">#</a> \u4F8B\u5B50</h4><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T10</span></span> <span class="token operator">=</span> TypeName<span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// &quot;string&quot; | &quot;function&quot;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T12</span></span> <span class="token operator">=</span> TypeName<span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// &quot;string&quot; | &quot;object&quot; | &quot;undefined&quot;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T11</span></span> <span class="token operator">=</span> TypeName<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// &quot;object&quot;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u5728<code>T extends U ? X : Y</code>\u7684\u5B9E\u4F8B\u5316\u91CC\uFF0C\u5BF9<code>T</code>\u7684\u5F15\u7528\u88AB\u89E3\u6790\u4E3A\u8054\u5408\u7C7B\u578B\u7684\u4E00\u90E8\u5206\uFF08\u6BD4\u5982\uFF0C<code>T</code>\u6307\u5411\u67D0\u4E00\u5355\u4E2A\u90E8\u5206\uFF0C\u5728\u6709\u6761\u4EF6\u7C7B\u578B\u5206\u5E03\u5230\u8054\u5408\u7C7B\u578B\u4E4B\u540E\uFF09\u3002 \u6B64\u5916\uFF0C\u5728<code>X</code>\u5185\u5BF9<code>T</code>\u7684\u5F15\u7528\u6709\u4E00\u4E2A\u9644\u52A0\u7684\u7C7B\u578B\u53C2\u6570\u7EA6\u675F<code>U</code>\uFF08\u4F8B\u5982\uFF0C<code>T</code>\u88AB\u5F53\u6210\u5728<code>X</code>\u5185\u53EF\u8D4B\u503C\u7ED9<code>U</code>\uFF09\u3002</p><h4 id="\u4F8B\u5B50-2" tabindex="-1"><a class="header-anchor" href="#\u4F8B\u5B50-2" aria-hidden="true">#</a> \u4F8B\u5B50</h4><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">BoxedValue<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span> value<span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">BoxedArray<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span> array<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">Boxed<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">any</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">?</span> BoxedArray<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token builtin">number</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token operator">:</span> BoxedValue<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T20</span></span> <span class="token operator">=</span> Boxed<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// BoxedValue&lt;string&gt;;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T21</span></span> <span class="token operator">=</span> Boxed<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// BoxedArray&lt;number&gt;;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T22</span></span> <span class="token operator">=</span> Boxed<span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// BoxedValue&lt;string&gt; | BoxedArray&lt;number&gt;;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u6CE8\u610F\u5728<code>Boxed&lt;T&gt;</code>\u7684<code>true</code>\u5206\u652F\u91CC\uFF0C<code>T</code>\u6709\u4E2A\u989D\u5916\u7684\u7EA6\u675F<code>any[]</code>\uFF0C\u56E0\u6B64\u5B83\u9002\u7528\u4E8E<code>T[number]</code>\u6570\u7EC4\u5143\u7D20\u7C7B\u578B\u3002\u540C\u65F6\u4E5F\u6CE8\u610F\u4E00\u4E0B\u6709\u6761\u4EF6\u7C7B\u578B\u662F\u5982\u4F55\u5206\u5E03\u6210\u8054\u5408\u7C7B\u578B\u7684\u3002</p><p>\u6709\u6761\u4EF6\u7C7B\u578B\u7684\u5206\u5E03\u5F0F\u7684\u5C5E\u6027\u53EF\u4EE5\u65B9\u4FBF\u5730\u7528\u6765_\u8FC7\u6EE4_\u8054\u5408\u7C7B\u578B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Diff<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">U</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">U</span></span> <span class="token operator">?</span> <span class="token builtin">never</span> <span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>  <span class="token comment">// Remove types from T that are assignable to U</span>
<span class="token keyword">type</span> <span class="token class-name">Filter<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">U</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">U</span></span> <span class="token operator">?</span> <span class="token constant">T</span> <span class="token operator">:</span> <span class="token builtin">never</span><span class="token punctuation">;</span>  <span class="token comment">// Remove types from T that are not assignable to U</span>

<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T30</span></span> <span class="token operator">=</span> Diff<span class="token operator">&lt;</span><span class="token string">&quot;a&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;b&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;c&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;d&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;a&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;c&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;f&quot;</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// &quot;b&quot; | &quot;d&quot;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T31</span></span> <span class="token operator">=</span> Filter<span class="token operator">&lt;</span><span class="token string">&quot;a&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;b&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;c&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;d&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;a&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;c&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;f&quot;</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// &quot;a&quot; | &quot;c&quot;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T32</span></span> <span class="token operator">=</span> Diff<span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">Function</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// string | number</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T33</span></span> <span class="token operator">=</span> Filter<span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">Function</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// () =&gt; void</span>

<span class="token keyword">type</span> <span class="token class-name">NonNullable<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> Diff<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token keyword">null</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// Remove null and undefined from T</span>

<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T34</span></span> <span class="token operator">=</span> NonNullable<span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// string | number</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T35</span></span> <span class="token operator">=</span> NonNullable<span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// string | string[]</span>

<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">f1</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> y<span class="token operator">:</span> NonNullable<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    x <span class="token operator">=</span> y<span class="token punctuation">;</span>  <span class="token comment">// Ok</span>
    y <span class="token operator">=</span> x<span class="token punctuation">;</span>  <span class="token comment">// Error</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">f2</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> y<span class="token operator">:</span> NonNullable<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    x <span class="token operator">=</span> y<span class="token punctuation">;</span>  <span class="token comment">// Ok</span>
    y <span class="token operator">=</span> x<span class="token punctuation">;</span>  <span class="token comment">// Error</span>
    <span class="token keyword">let</span> s1<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> x<span class="token punctuation">;</span>  <span class="token comment">// Error</span>
    <span class="token keyword">let</span> s2<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> y<span class="token punctuation">;</span>  <span class="token comment">// Ok</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p>\u6709\u6761\u4EF6\u7C7B\u578B\u4E0E\u6620\u5C04\u7C7B\u578B\u7ED3\u5408\u65F6\u7279\u522B\u6709\u7528\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">FunctionPropertyNames<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span><span class="token constant">K</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">K</span><span class="token punctuation">]</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">Function</span></span> <span class="token operator">?</span> <span class="token constant">K</span> <span class="token operator">:</span> <span class="token builtin">never</span> <span class="token punctuation">}</span><span class="token punctuation">[</span><span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">FunctionProperties<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> Pick<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> FunctionPropertyNames<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">NonFunctionPropertyNames<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span><span class="token constant">K</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">K</span><span class="token punctuation">]</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">Function</span></span> <span class="token operator">?</span> <span class="token builtin">never</span> <span class="token operator">:</span> <span class="token constant">K</span> <span class="token punctuation">}</span><span class="token punctuation">[</span><span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">NonFunctionProperties<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> Pick<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> NonFunctionPropertyNames<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">Part</span> <span class="token punctuation">{</span>
    id<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
    name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    subparts<span class="token operator">:</span> Part<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token function">updatePart</span><span class="token punctuation">(</span>newName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T40</span></span> <span class="token operator">=</span> FunctionPropertyNames<span class="token operator">&lt;</span>Part<span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// &quot;updatePart&quot;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T41</span></span> <span class="token operator">=</span> NonFunctionPropertyNames<span class="token operator">&lt;</span>Part<span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// &quot;id&quot; | &quot;name&quot; | &quot;subparts&quot;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T42</span></span> <span class="token operator">=</span> FunctionProperties<span class="token operator">&lt;</span>Part<span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// { updatePart(newName: string): void }</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T43</span></span> <span class="token operator">=</span> NonFunctionProperties<span class="token operator">&lt;</span>Part<span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// { id: number, name: string, subparts: Part[] }</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>\u4E0E\u8054\u5408\u7C7B\u578B\u548C\u4EA4\u53C9\u7C7B\u578B\u76F8\u4F3C\uFF0C\u6709\u6761\u4EF6\u7C7B\u578B\u4E0D\u5141\u8BB8\u9012\u5F52\u5730\u5F15\u7528\u81EA\u5DF1\u3002\u6BD4\u5982\u4E0B\u9762\u7684\u9519\u8BEF\u3002</p><h4 id="\u4F8B\u5B50-3" tabindex="-1"><a class="header-anchor" href="#\u4F8B\u5B50-3" aria-hidden="true">#</a> \u4F8B\u5B50</h4><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">ElementType<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">any</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">?</span> ElementType<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token builtin">number</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>  <span class="token comment">// Error</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="\u6709\u6761\u4EF6\u7C7B\u578B\u4E2D\u7684\u7C7B\u578B\u63A8\u65AD" tabindex="-1"><a class="header-anchor" href="#\u6709\u6761\u4EF6\u7C7B\u578B\u4E2D\u7684\u7C7B\u578B\u63A8\u65AD" aria-hidden="true">#</a> \u6709\u6761\u4EF6\u7C7B\u578B\u4E2D\u7684\u7C7B\u578B\u63A8\u65AD</h3><p>\u73B0\u5728\u5728\u6709\u6761\u4EF6\u7C7B\u578B\u7684<code>extends</code>\u5B50\u8BED\u53E5\u4E2D\uFF0C\u5141\u8BB8\u51FA\u73B0<code>infer</code>\u58F0\u660E\uFF0C\u5B83\u4F1A\u5F15\u5165\u4E00\u4E2A\u5F85\u63A8\u65AD\u7684\u7C7B\u578B\u53D8\u91CF\u3002 \u8FD9\u4E2A\u63A8\u65AD\u7684\u7C7B\u578B\u53D8\u91CF\u53EF\u4EE5\u5728\u6709\u6761\u4EF6\u7C7B\u578B\u7684true\u5206\u652F\u4E2D\u88AB\u5F15\u7528\u3002 \u5141\u8BB8\u51FA\u73B0\u591A\u4E2A\u540C\u7C7B\u578B\u53D8\u91CF\u7684<code>infer</code>\u3002</p><p>\u4F8B\u5982\uFF0C\u4E0B\u9762\u4EE3\u7801\u4F1A\u63D0\u53D6\u51FD\u6570\u7C7B\u578B\u7684\u8FD4\u56DE\u503C\u7C7B\u578B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">ReturnType<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">infer</span> <span class="token constant">R</span> <span class="token operator">?</span> <span class="token constant">R</span> <span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u6709\u6761\u4EF6\u7C7B\u578B\u53EF\u4EE5\u5D4C\u5957\u6765\u6784\u6210\u4E00\u7CFB\u5217\u7684\u5339\u914D\u6A21\u5F0F\uFF0C\u6309\u987A\u5E8F\u8FDB\u884C\u6C42\u503C\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Unpacked<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span>
    <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">(</span><span class="token keyword">infer</span> <span class="token constant">U</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">?</span> <span class="token constant">U</span> <span class="token operator">:</span>
    <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">infer</span> <span class="token constant">U</span> <span class="token operator">?</span> <span class="token constant">U</span> <span class="token operator">:</span>
    <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">infer</span> <span class="token constant">U</span><span class="token operator">&gt;</span></span> <span class="token operator">?</span> <span class="token constant">U</span> <span class="token operator">:</span>
    <span class="token constant">T</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T0</span></span> <span class="token operator">=</span> Unpacked<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// string</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T1</span></span> <span class="token operator">=</span> Unpacked<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// string</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T2</span></span> <span class="token operator">=</span> Unpacked<span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// string</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T3</span></span> <span class="token operator">=</span> Unpacked<span class="token operator">&lt;</span><span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// string</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T4</span></span> <span class="token operator">=</span> Unpacked<span class="token operator">&lt;</span><span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// Promise&lt;string&gt;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T5</span></span> <span class="token operator">=</span> Unpacked<span class="token operator">&lt;</span>Unpacked<span class="token operator">&lt;</span><span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// string</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u4E0B\u9762\u7684\u4F8B\u5B50\u89E3\u91CA\u4E86\u5728\u534F\u53D8\u4F4D\u7F6E\u4E0A\uFF0C\u540C\u4E00\u4E2A\u7C7B\u578B\u53D8\u91CF\u7684\u591A\u4E2A\u5019\u9009\u7C7B\u578B\u4F1A\u88AB\u63A8\u65AD\u4E3A\u8054\u5408\u7C7B\u578B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Foo<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">{</span> a<span class="token operator">:</span> <span class="token keyword">infer</span> <span class="token constant">U</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token keyword">infer</span> <span class="token constant">U</span> <span class="token punctuation">}</span> <span class="token operator">?</span> <span class="token constant">U</span> <span class="token operator">:</span> <span class="token builtin">never</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T10</span></span> <span class="token operator">=</span> Foo<span class="token operator">&lt;</span><span class="token punctuation">{</span> a<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// string</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T11</span></span> <span class="token operator">=</span> Foo<span class="token operator">&lt;</span><span class="token punctuation">{</span> a<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// string | number</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u76F8\u4F3C\u5730\uFF0C\u5728\u6297\u53D8\u4F4D\u7F6E\u4E0A\uFF0C\u540C\u4E00\u4E2A\u7C7B\u578B\u53D8\u91CF\u7684\u591A\u4E2A\u5019\u9009\u7C7B\u578B\u4F1A\u88AB\u63A8\u65AD\u4E3A\u4EA4\u53C9\u7C7B\u578B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Bar<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">{</span> <span class="token function-variable function">a</span><span class="token operator">:</span> <span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token keyword">infer</span> <span class="token constant">U</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">,</span> <span class="token function-variable function">b</span><span class="token operator">:</span> <span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token keyword">infer</span> <span class="token constant">U</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span> <span class="token punctuation">}</span> <span class="token operator">?</span> <span class="token constant">U</span> <span class="token operator">:</span> <span class="token builtin">never</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T20</span></span> <span class="token operator">=</span> Bar<span class="token operator">&lt;</span><span class="token punctuation">{</span> <span class="token function-variable function">a</span><span class="token operator">:</span> <span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">,</span> <span class="token function-variable function">b</span><span class="token operator">:</span> <span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span> <span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// string</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T21</span></span> <span class="token operator">=</span> Bar<span class="token operator">&lt;</span><span class="token punctuation">{</span> <span class="token function-variable function">a</span><span class="token operator">:</span> <span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">,</span> <span class="token function-variable function">b</span><span class="token operator">:</span> <span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span> <span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// string &amp; number</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u5F53\u63A8\u65AD\u5177\u6709\u591A\u4E2A\u8C03\u7528\u7B7E\u540D\uFF08\u4F8B\u5982\u51FD\u6570\u91CD\u8F7D\u7C7B\u578B\uFF09\u7684\u7C7B\u578B\u65F6\uFF0C\u7528_\u6700\u540E_\u7684\u7B7E\u540D\uFF08\u5927\u6982\u662F\u6700\u81EA\u7531\u7684\u5305\u542B\u6240\u6709\u60C5\u51B5\u7684\u7B7E\u540D\uFF09\u8FDB\u884C\u63A8\u65AD\u3002 \u65E0\u6CD5\u6839\u636E\u53C2\u6570\u7C7B\u578B\u5217\u8868\u6765\u89E3\u6790\u91CD\u8F7D\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T30</span></span> <span class="token operator">=</span> ReturnType<span class="token operator">&lt;</span><span class="token keyword">typeof</span> foo<span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// string | number</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u65E0\u6CD5\u5728\u6B63\u5E38\u7C7B\u578B\u53C2\u6570\u7684\u7EA6\u675F\u5B50\u8BED\u53E5\u4E2D\u4F7F\u7528<code>infer</code>\u58F0\u660E\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">ReturnType<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span></span> <span class="token keyword">infer</span> <span class="token constant">R</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token constant">R</span><span class="token punctuation">;</span>  <span class="token comment">// \u9519\u8BEF\uFF0C\u4E0D\u652F\u6301</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u4F46\u662F\uFF0C\u53EF\u4EE5\u8FD9\u6837\u8FBE\u5230\u540C\u6837\u7684\u6548\u679C\uFF0C\u5728\u7EA6\u675F\u91CC\u5220\u6389\u7C7B\u578B\u53D8\u91CF\uFF0C\u7528\u6709\u6761\u4EF6\u7C7B\u578B\u66FF\u6362\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">AnyFunction</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">ReturnType<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> AnyFunction<span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">infer</span> <span class="token constant">R</span> <span class="token operator">?</span> <span class="token constant">R</span> <span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="\u9884\u5B9A\u4E49\u7684\u6709\u6761\u4EF6\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u9884\u5B9A\u4E49\u7684\u6709\u6761\u4EF6\u7C7B\u578B" aria-hidden="true">#</a> \u9884\u5B9A\u4E49\u7684\u6709\u6761\u4EF6\u7C7B\u578B</h3><p>TypeScript 2.8\u5728<code>lib.d.ts</code>\u91CC\u589E\u52A0\u4E86\u4E00\u4E9B\u9884\u5B9A\u4E49\u7684\u6709\u6761\u4EF6\u7C7B\u578B\uFF1A</p><ul><li><code>Exclude&lt;T, U&gt;</code> -- \u4ECE<code>T</code>\u4E2D\u5254\u9664\u53EF\u4EE5\u8D4B\u503C\u7ED9<code>U</code>\u7684\u7C7B\u578B\u3002</li><li><code>Extract&lt;T, U&gt;</code> -- \u63D0\u53D6<code>T</code>\u4E2D\u53EF\u4EE5\u8D4B\u503C\u7ED9<code>U</code>\u7684\u7C7B\u578B\u3002</li><li><code>NonNullable&lt;T&gt;</code> -- \u4ECE<code>T</code>\u4E2D\u5254\u9664<code>null</code>\u548C<code>undefined</code>\u3002</li><li><code>ReturnType&lt;T&gt;</code> -- \u83B7\u53D6\u51FD\u6570\u8FD4\u56DE\u503C\u7C7B\u578B\u3002</li><li><code>InstanceType&lt;T&gt;</code> -- \u83B7\u53D6\u6784\u9020\u51FD\u6570\u7C7B\u578B\u7684\u5B9E\u4F8B\u7C7B\u578B\u3002</li></ul><h4 id="example" tabindex="-1"><a class="header-anchor" href="#example" aria-hidden="true">#</a> Example</h4><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T00</span></span> <span class="token operator">=</span> Exclude<span class="token operator">&lt;</span><span class="token string">&quot;a&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;b&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;c&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;d&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;a&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;c&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;f&quot;</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// &quot;b&quot; | &quot;d&quot;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T01</span></span> <span class="token operator">=</span> Extract<span class="token operator">&lt;</span><span class="token string">&quot;a&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;b&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;c&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;d&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;a&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;c&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;f&quot;</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// &quot;a&quot; | &quot;c&quot;</span>

<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T02</span></span> <span class="token operator">=</span> Exclude<span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">Function</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// string | number</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T03</span></span> <span class="token operator">=</span> Extract<span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">Function</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// () =&gt; void</span>

<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T04</span></span> <span class="token operator">=</span> NonNullable<span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// string | number</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T05</span></span> <span class="token operator">=</span> NonNullable<span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// (() =&gt; string) | string[]</span>

<span class="token keyword">function</span> <span class="token function">f1</span><span class="token punctuation">(</span>s<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span> a<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> b<span class="token operator">:</span> s <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name"><span class="token constant">C</span></span> <span class="token punctuation">{</span>
    x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T10</span></span> <span class="token operator">=</span> ReturnType<span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// string</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T11</span></span> <span class="token operator">=</span> ReturnType<span class="token operator">&lt;</span><span class="token punctuation">(</span>s<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// void</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T12</span></span> <span class="token operator">=</span> ReturnType<span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// {}</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T13</span></span> <span class="token operator">=</span> ReturnType<span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">U</span></span><span class="token punctuation">,</span> <span class="token constant">U</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">number</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// number[]</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T14</span></span> <span class="token operator">=</span> ReturnType<span class="token operator">&lt;</span><span class="token keyword">typeof</span> f1<span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// { a: number, b: string }</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T15</span></span> <span class="token operator">=</span> ReturnType<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// any</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T16</span></span> <span class="token operator">=</span> ReturnType<span class="token operator">&lt;</span><span class="token builtin">never</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// any</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T17</span></span> <span class="token operator">=</span> ReturnType<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// Error</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T18</span></span> <span class="token operator">=</span> ReturnType<span class="token operator">&lt;</span><span class="token builtin">Function</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// Error</span>

<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T20</span></span> <span class="token operator">=</span> InstanceType<span class="token operator">&lt;</span><span class="token keyword">typeof</span> <span class="token constant">C</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// C</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T21</span></span> <span class="token operator">=</span> InstanceType<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// any</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T22</span></span> <span class="token operator">=</span> InstanceType<span class="token operator">&lt;</span><span class="token builtin">never</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// any</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T23</span></span> <span class="token operator">=</span> InstanceType<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// Error</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T24</span></span> <span class="token operator">=</span> InstanceType<span class="token operator">&lt;</span><span class="token builtin">Function</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// Error</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div>`,45),i=n("\u6CE8\u610F\uFF1A"),d=s("code",null,"Exclude",-1),m=n("\u7C7B\u578B\u662F"),b={href:"https://github.com/Microsoft/TypeScript/issues/12215#issuecomment-307871458",target:"_blank",rel:"noopener noreferrer"},y=n("\u5EFA\u8BAE\u7684"),g=s("code",null,"Diff",-1),T=n("\u7C7B\u578B\u7684\u4E00\u79CD\u5B9E\u73B0\u3002\u6211\u4EEC\u4F7F\u7528"),w=s("code",null,"Exclude",-1),h=n("\u8FD9\u4E2A\u540D\u5B57\u662F\u4E3A\u4E86\u907F\u514D\u7834\u574F\u5DF2\u7ECF\u5B9A\u4E49\u4E86"),v=s("code",null,"Diff",-1),f=n("\u7684\u4EE3\u7801\uFF0C\u5E76\u4E14\u6211\u4EEC\u611F\u89C9\u8FD9\u4E2A\u540D\u5B57\u80FD\u66F4\u597D\u5730\u8868\u8FBE\u7C7B\u578B\u7684\u8BED\u4E49\u3002\u6211\u4EEC\u6CA1\u6709\u589E\u52A0"),q=s("code",null,"Omit<T, K>",-1),x=n("\u7C7B\u578B\uFF0C\u56E0\u4E3A\u5B83\u53EF\u4EE5\u5F88\u5BB9\u6613\u7684\u7528"),_=s("code",null,"Pick<T, Exclude<keyof T, K>>",-1),U=n("\u6765\u8868\u793A\u3002"),N=s("h2",{id:"\u6539\u8FDB\u5BF9\u6620\u5C04\u7C7B\u578B\u4FEE\u9970\u7B26\u7684\u63A7\u5236",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#\u6539\u8FDB\u5BF9\u6620\u5C04\u7C7B\u578B\u4FEE\u9970\u7B26\u7684\u63A7\u5236","aria-hidden":"true"},"#"),n(" \u6539\u8FDB\u5BF9\u6620\u5C04\u7C7B\u578B\u4FEE\u9970\u7B26\u7684\u63A7\u5236")],-1),P=n("\u6620\u5C04\u7C7B\u578B\u652F\u6301\u5728\u5C5E\u6027\u4E0A\u6DFB\u52A0"),j=s("code",null,"readonly",-1),F=n("\u6216"),R=s("code",null,"?",-1),B=n("\u4FEE\u9970\u7B26\uFF0C\u4F46\u662F\u5B83\u4EEC\u4E0D\u652F\u6301_\u79FB\u9664_\u4FEE\u9970\u7B26\u3002 \u8FD9\u5BF9\u4E8E"),S={href:"https://github.com/Microsoft/TypeScript/pull/12563",target:"_blank",rel:"noopener noreferrer"},E=s("em",null,"\u540C\u6001\u6620\u5C04\u7C7B\u578B",-1),X=n("\u6709\u4E9B\u5F71\u54CD\uFF0C\u56E0\u4E3A\u540C\u6001\u6620\u5C04\u7C7B\u578B\u9ED8\u8BA4\u4FDD\u7559\u5E95\u5C42\u7C7B\u578B\u7684\u4FEE\u9970\u7B26\u3002"),C=t(`<p>TypeScript 2.8\u4E3A\u6620\u5C04\u7C7B\u578B\u589E\u52A0\u4E86\u589E\u52A0\u6216\u79FB\u9664\u7279\u5B9A\u4FEE\u9970\u7B26\u7684\u80FD\u529B\u3002 \u7279\u522B\u5730\uFF0C\u6620\u5C04\u7C7B\u578B\u91CC\u7684<code>readonly</code>\u6216<code>?</code>\u5C5E\u6027\u4FEE\u9970\u7B26\u73B0\u5728\u53EF\u4EE5\u4F7F\u7528<code>+</code>\u6216<code>-</code>\u524D\u7F00\uFF0C\u6765\u8868\u793A\u4FEE\u9970\u7B26\u662F\u6DFB\u52A0\u8FD8\u662F\u79FB\u9664\u3002</p><h4 id="\u4F8B\u5B50-4" tabindex="-1"><a class="header-anchor" href="#\u4F8B\u5B50-4" aria-hidden="true">#</a> \u4F8B\u5B50</h4><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">MutableRequired<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">-</span><span class="token keyword">readonly</span> <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">-</span><span class="token operator">?</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token comment">// \u79FB\u9664readonly\u548C?</span>
<span class="token keyword">type</span> <span class="token class-name">ReadonlyPartial<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">+</span><span class="token keyword">readonly</span> <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">?</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token comment">// \u6DFB\u52A0readonly\u548C?</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u4E0D\u5E26<code>+</code>\u6216<code>-</code>\u524D\u7F00\u7684\u4FEE\u9970\u7B26\u4E0E\u5E26<code>+</code>\u524D\u7F00\u7684\u4FEE\u9970\u7B26\u5177\u6709\u76F8\u540C\u7684\u4F5C\u7528\u3002\u56E0\u6B64\u4E0A\u9762\u7684<code>ReadonlyPartial&lt;T&gt;</code>\u7C7B\u578B\u4E0E\u4E0B\u9762\u7684\u4E00\u81F4</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">ReadonlyPartial<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token keyword">readonly</span> <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">?</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token comment">// \u6DFB\u52A0readonly\u548C?</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u5229\u7528\u8FD9\u4E2A\u7279\u6027\uFF0C<code>lib.d.ts</code>\u73B0\u5728\u6709\u4E86\u4E00\u4E2A\u65B0\u7684<code>Required&lt;T&gt;</code>\u7C7B\u578B\u3002 \u5B83\u79FB\u9664\u4E86<code>T</code>\u7684\u6240\u6709\u5C5E\u6027\u7684<code>?</code>\u4FEE\u9970\u7B26\uFF0C\u56E0\u6B64\u6240\u6709\u5C5E\u6027\u90FD\u662F\u5FC5\u9700\u7684\u3002</p><h4 id="\u4F8B\u5B50-5" tabindex="-1"><a class="header-anchor" href="#\u4F8B\u5B50-5" aria-hidden="true">#</a> \u4F8B\u5B50</h4><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Required<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">-</span><span class="token operator">?</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u6CE8\u610F\u5728<code>--strictNullChecks</code>\u6A21\u5F0F\u4E0B\uFF0C\u5F53\u540C\u6001\u6620\u5C04\u7C7B\u578B\u79FB\u9664\u4E86\u5C5E\u6027\u5E95\u5C42\u7C7B\u578B\u7684<code>?</code>\u4FEE\u9970\u7B26\uFF0C\u5B83\u540C\u65F6\u4E5F\u79FB\u9664\u4E86\u90A3\u4E2A\u5C5E\u6027\u4E0A\u7684<code>undefined</code>\u7C7B\u578B\uFF1A</p><h4 id="\u4F8B\u5B50-6" tabindex="-1"><a class="header-anchor" href="#\u4F8B\u5B50-6" aria-hidden="true">#</a> \u4F8B\u5B50</h4><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Foo</span> <span class="token operator">=</span> <span class="token punctuation">{</span> a<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token comment">// \u7B49\u540C\u4E8E { a?: string | undefined }</span>
<span class="token keyword">type</span> <span class="token class-name">Bar</span> <span class="token operator">=</span> Required<span class="token operator">&lt;</span>Foo<span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// \u7B49\u540C\u4E8E { a: string }</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="\u6539\u8FDB\u4EA4\u53C9\u7C7B\u578B\u4E0A\u7684keyof" tabindex="-1"><a class="header-anchor" href="#\u6539\u8FDB\u4EA4\u53C9\u7C7B\u578B\u4E0A\u7684keyof" aria-hidden="true">#</a> \u6539\u8FDB\u4EA4\u53C9\u7C7B\u578B\u4E0A\u7684<code>keyof</code></h2><p>TypeScript 2.8\u4F5C\u7528\u4E8E\u4EA4\u53C9\u7C7B\u578B\u7684<code>keyof</code>\u88AB\u8F6C\u6362\u6210\u4F5C\u7528\u4E8E\u4EA4\u53C9\u6210\u5458\u7684<code>keyof</code>\u7684\u8054\u5408\u3002 \u6362\u53E5\u8BDD\u8BF4\uFF0C<code>keyof (A &amp; B)</code>\u4F1A\u88AB\u8F6C\u6362\u6210<code>keyof A | keyof B</code>\u3002 \u8FD9\u4E2A\u6539\u52A8\u5E94\u8BE5\u80FD\u591F\u89E3\u51B3<code>keyof</code>\u8868\u8FBE\u5F0F\u63A8\u65AD\u4E0D\u4E00\u81F4\u7684\u95EE\u9898\u3002</p><h4 id="\u4F8B\u5B50-7" tabindex="-1"><a class="header-anchor" href="#\u4F8B\u5B50-7" aria-hidden="true">#</a> \u4F8B\u5B50</h4><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">A</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span> a<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">B</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span> b<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T1</span></span> <span class="token operator">=</span> <span class="token keyword">keyof</span> <span class="token punctuation">(</span><span class="token constant">A</span> <span class="token operator">&amp;</span> <span class="token constant">B</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// &quot;a&quot; | &quot;b&quot;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T2</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token keyword">keyof</span> <span class="token punctuation">(</span><span class="token constant">T</span> <span class="token operator">&amp;</span> <span class="token constant">B</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// keyof T | &quot;b&quot;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T3</span><span class="token operator">&lt;</span><span class="token constant">U</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token keyword">keyof</span> <span class="token punctuation">(</span><span class="token constant">A</span> <span class="token operator">&amp;</span> <span class="token constant">U</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// &quot;a&quot; | keyof U</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T4</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">U</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token keyword">keyof</span> <span class="token punctuation">(</span><span class="token constant">T</span> <span class="token operator">&amp;</span> <span class="token constant">U</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// keyof T | keyof U</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T5</span></span> <span class="token operator">=</span> <span class="token constant">T2</span><span class="token operator">&lt;</span><span class="token constant">A</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// &quot;a&quot; | &quot;b&quot;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T6</span></span> <span class="token operator">=</span> <span class="token constant">T3</span><span class="token operator">&lt;</span><span class="token constant">B</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// &quot;a&quot; | &quot;b&quot;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T7</span></span> <span class="token operator">=</span> <span class="token constant">T4</span><span class="token operator">&lt;</span><span class="token constant">A</span><span class="token punctuation">,</span> <span class="token constant">B</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// &quot;a&quot; | &quot;b&quot;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="\u66F4\u597D\u7684\u5904\u7406-js\u6587\u4EF6\u4E2D\u7684\u547D\u540D\u7A7A\u95F4\u6A21\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u66F4\u597D\u7684\u5904\u7406-js\u6587\u4EF6\u4E2D\u7684\u547D\u540D\u7A7A\u95F4\u6A21\u5F0F" aria-hidden="true">#</a> \u66F4\u597D\u7684\u5904\u7406<code>.js</code>\u6587\u4EF6\u4E2D\u7684\u547D\u540D\u7A7A\u95F4\u6A21\u5F0F</h2><p>TypeScript 2.8\u52A0\u5F3A\u4E86\u8BC6\u522B<code>.js</code>\u6587\u4EF6\u91CC\u7684\u547D\u540D\u7A7A\u95F4\u6A21\u5F0F\u3002 JavaScript\u9876\u5C42\u7684\u7A7A\u5BF9\u8C61\u5B57\u9762\u91CF\u58F0\u660E\uFF0C\u5C31\u50CF\u51FD\u6570\u548C\u7C7B\uFF0C\u4F1A\u88AB\u8BC6\u522B\u6210\u547D\u540D\u7A7A\u95F4\u58F0\u660E\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> ns <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>     <span class="token comment">// recognized as a declaration for a namespace \`ns\`</span>
ns<span class="token punctuation">.</span>constant <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// recognized as a declaration for var \`constant\`</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u9876\u5C42\u7684\u8D4B\u503C\u5E94\u8BE5\u6709\u4E00\u81F4\u7684\u884C\u4E3A\uFF1B\u4E5F\u5C31\u662F\u8BF4\uFF0C<code>var</code>\u6216<code>const</code>\u58F0\u660E\u4E0D\u662F\u5FC5\u9700\u7684\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>app <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// does NOT need to be \`var app = {}\`</span>
app<span class="token punctuation">.</span><span class="token constant">C</span> <span class="token operator">=</span> <span class="token keyword">class</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function-variable function">f</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span>prop <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="\u7ACB\u5373\u6267\u884C\u7684\u51FD\u6570\u8868\u8FBE\u5F0F\u505A\u4E3A\u547D\u540D\u7A7A\u95F4" tabindex="-1"><a class="header-anchor" href="#\u7ACB\u5373\u6267\u884C\u7684\u51FD\u6570\u8868\u8FBE\u5F0F\u505A\u4E3A\u547D\u540D\u7A7A\u95F4" aria-hidden="true">#</a> \u7ACB\u5373\u6267\u884C\u7684\u51FD\u6570\u8868\u8FBE\u5F0F\u505A\u4E3A\u547D\u540D\u7A7A\u95F4</h3><p>\u7ACB\u5373\u6267\u884C\u7684\u51FD\u6570\u8868\u8FBE\u5F0F\u8FD4\u56DE\u4E00\u4E2A\u51FD\u6570\uFF0C\u7C7B\u6216\u7A7A\u7684\u5BF9\u8C61\u5B57\u9762\u91CF\uFF0C\u4E5F\u4F1A\u88AB\u8BC6\u522B\u4E3A\u547D\u540D\u7A7A\u95F4\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token constant">C</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">function</span> <span class="token constant">C</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>p <span class="token operator">=</span> n<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token constant">C</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token constant">C</span><span class="token punctuation">.</span>staticProperty <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="\u9ED8\u8BA4\u58F0\u660E" tabindex="-1"><a class="header-anchor" href="#\u9ED8\u8BA4\u58F0\u660E" aria-hidden="true">#</a> \u9ED8\u8BA4\u58F0\u660E</h3><p>\u201C\u9ED8\u8BA4\u58F0\u660E\u201D\u5141\u8BB8\u5F15\u7528\u4E86\u58F0\u660E\u7684\u540D\u79F0\u7684\u521D\u59CB\u5316\u5668\u51FA\u73B0\u5728\u903B\u8F91\u6216\u7684\u5DE6\u8FB9\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>my <span class="token operator">=</span> window<span class="token punctuation">.</span>my <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
my<span class="token punctuation">.</span>app <span class="token operator">=</span> my<span class="token punctuation">.</span>app <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="\u539F\u578B\u8D4B\u503C" tabindex="-1"><a class="header-anchor" href="#\u539F\u578B\u8D4B\u503C" aria-hidden="true">#</a> \u539F\u578B\u8D4B\u503C</h3><p>\u4F60\u53EF\u4EE5\u628A\u4E00\u4E2A\u5BF9\u8C61\u5B57\u9762\u91CF\u76F4\u63A5\u8D4B\u503C\u7ED9\u539F\u578B\u5C5E\u6027\u3002\u72EC\u7ACB\u7684\u539F\u578B\u8D4B\u503C\u4E5F\u53EF\u4EE5\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">var</span> <span class="token function-variable function">C</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>p<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>p <span class="token operator">=</span> p<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token constant">C</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">m</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token constant">C</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">q</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>p <span class="token operator">===</span> r<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="\u5D4C\u5957\u4E0E\u5408\u5E76\u58F0\u660E" tabindex="-1"><a class="header-anchor" href="#\u5D4C\u5957\u4E0E\u5408\u5E76\u58F0\u660E" aria-hidden="true">#</a> \u5D4C\u5957\u4E0E\u5408\u5E76\u58F0\u660E</h3><p>\u73B0\u5728\u5D4C\u5957\u7684\u5C42\u6B21\u4E0D\u53D7\u9650\u5236\uFF0C\u5E76\u4E14\u591A\u6587\u4EF6\u4E4B\u95F4\u7684\u58F0\u660E\u5408\u5E76\u4E5F\u6CA1\u6709\u95EE\u9898\u3002\u4EE5\u524D\u4E0D\u662F\u8FD9\u6837\u7684\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> app <span class="token operator">=</span> window<span class="token punctuation">.</span>app <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token constant">C</span> <span class="token operator">=</span> <span class="token keyword">class</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="\u5404\u6587\u4EF6\u7684jsx\u5DE5\u5382" tabindex="-1"><a class="header-anchor" href="#\u5404\u6587\u4EF6\u7684jsx\u5DE5\u5382" aria-hidden="true">#</a> \u5404\u6587\u4EF6\u7684JSX\u5DE5\u5382</h2><p>TypeScript 2.8\u589E\u52A0\u4E86\u4F7F\u7528<code>@jsx dom</code>\u6307\u4EE4\u4E3A\u6BCF\u4E2A\u6587\u4EF6\u8BBE\u7F6EJSX\u5DE5\u5382\u540D\u3002 JSX\u5DE5\u5382\u4E5F\u53EF\u4EE5\u4F7F\u7528<code>--jsxFactory</code>\u7F16\u8BD1\u53C2\u6570\u8BBE\u7F6E\uFF08\u9ED8\u8BA4\u503C\u4E3A<code>React.createElement</code>\uFF09\u3002TypeScript 2.8\u4F60\u53EF\u4EE5\u57FA\u4E8E\u6587\u4EF6\u8FDB\u884C\u8986\u5199\u3002</p><h4 id="\u4F8B\u5B50-8" tabindex="-1"><a class="header-anchor" href="#\u4F8B\u5B50-8" aria-hidden="true">#</a> \u4F8B\u5B50</h4><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token doc-comment comment">/** <span class="token keyword">@jsx</span> dom */</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> dom <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./renderer&quot;</span>
<span class="token operator">&lt;</span>h<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>h<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u751F\u6210\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> renderer_1 <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;./renderer&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
renderer_1<span class="token punctuation">.</span><span class="token function">dom</span><span class="token punctuation">(</span><span class="token string">&quot;h&quot;</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="\u672C\u5730\u8303\u56F4\u7684jsx\u547D\u540D\u7A7A\u95F4" tabindex="-1"><a class="header-anchor" href="#\u672C\u5730\u8303\u56F4\u7684jsx\u547D\u540D\u7A7A\u95F4" aria-hidden="true">#</a> \u672C\u5730\u8303\u56F4\u7684JSX\u547D\u540D\u7A7A\u95F4</h2><p>JSX\u7C7B\u578B\u68C0\u67E5\u57FA\u4E8EJSX\u547D\u540D\u7A7A\u95F4\u91CC\u7684\u5B9A\u4E49\uFF0C\u6BD4\u5982<code>JSX.Element</code>\u7528\u4E8EJSX\u5143\u7D20\u7684\u7C7B\u578B\uFF0C<code>JSX.IntrinsicElements</code>\u7528\u4E8E\u5185\u7F6E\u7684\u5143\u7D20\u3002 \u5728TypeScript 2.8\u4E4B\u524D<code>JSX</code>\u547D\u540D\u7A7A\u95F4\u88AB\u89C6\u4E3A\u5168\u5C40\u547D\u540D\u7A7A\u95F4\uFF0C\u5E76\u4E14\u4E00\u4E2A\u5DE5\u7A0B\u53EA\u5141\u8BB8\u5B58\u5728\u4E00\u4E2A\u3002 TypeScript 2.8\u5F00\u59CB\uFF0C<code>JSX</code>\u547D\u540D\u7A7A\u95F4\u5C06\u5728<code>jsxNamespace</code>\u4E0B\u9762\u67E5\u627E\uFF08\u6BD4\u5982<code>React</code>\uFF09\uFF0C\u5141\u8BB8\u5728\u4E00\u6B21\u7F16\u8BD1\u4E2D\u5B58\u5728\u591A\u4E2Ajsx\u5DE5\u5382\u3002 \u4E3A\u4E86\u5411\u540E\u517C\u5BB9\uFF0C\u5168\u5C40\u7684<code>JSX</code>\u547D\u540D\u7A7A\u95F4\u88AB\u5F53\u505A\u56DE\u9000\u9009\u9879\u3002 \u4F7F\u7528\u72EC\u7ACB\u7684<code>@jsx</code>\u6307\u4EE4\uFF0C\u6BCF\u4E2A\u6587\u4EF6\u53EF\u4EE5\u6709\u81EA\u5DF1\u7684JSX\u5DE5\u5382\u3002</p><h2 id="\u65B0\u7684-emitdeclarationsonly" tabindex="-1"><a class="header-anchor" href="#\u65B0\u7684-emitdeclarationsonly" aria-hidden="true">#</a> \u65B0\u7684<code>--emitDeclarationsOnly</code></h2><p><code>--emitDeclarationsOnly</code>\u5141\u8BB8_\u4EC5_\u751F\u6210\u58F0\u660E\u6587\u4EF6\uFF1B\u4F7F\u7528\u8FD9\u4E2A\u6807\u8BB0<code>.js</code>/<code>.jsx</code>\u8F93\u51FA\u4F1A\u88AB\u8DF3\u8FC7\u3002\u5F53\u4F7F\u7528\u5176\u5B83\u7684\u8F6C\u6362\u5DE5\u5177\u5982Babel\u5904\u7406<code>.js</code>\u8F93\u51FA\u7684\u65F6\u5019\uFF0C\u53EF\u4EE5\u4F7F\u7528\u8FD9\u4E2A\u6807\u8BB0\u3002</p>`,42);function A(J,V){const a=o("ExternalLinkIcon");return e(),c(l,null,[u,s("blockquote",null,[s("p",null,[i,d,m,s("a",b,[y,p(a)]),g,T,w,h,v,f,q,x,_,U])]),N,s("p",null,[P,j,F,R,B,s("a",S,[E,p(a)]),X]),C],64)}var D=r(k,[["render",A]]);export{D as default};
