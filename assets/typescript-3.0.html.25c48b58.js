import{r as o,o as l,c as r,a as n,b as a,w as t,F as u,e,d as s}from"./app.fed89489.js";import{_ as k}from"./plugin-vue_export-helper.21dcd24c.js";const i={},b=e('<h1 id="typescript-3-0" tabindex="-1"><a class="header-anchor" href="#typescript-3-0" aria-hidden="true">#</a> TypeScript 3.0</h1><h2 id="\u5DE5\u7A0B\u5F15\u7528" tabindex="-1"><a class="header-anchor" href="#\u5DE5\u7A0B\u5F15\u7528" aria-hidden="true">#</a> \u5DE5\u7A0B\u5F15\u7528</h2><p>TypeScript 3.0 \u5F15\u5165\u4E86\u4E00\u4E2A\u53EB\u505A\u5DE5\u7A0B\u5F15\u7528\u7684\u65B0\u6982\u5FF5\u3002\u5DE5\u7A0B\u5F15\u7528\u5141\u8BB8TypeScript\u5DE5\u7A0B\u4F9D\u8D56\u4E8E\u5176\u5B83TypeScript\u5DE5\u7A0B - \u7279\u522B\u8981\u63D0\u7684\u662F\u5141\u8BB8<code>tsconfig.json</code>\u6587\u4EF6\u5F15\u7528\u5176\u5B83<code>tsconfig.json</code>\u6587\u4EF6\u3002\u5F53\u6307\u660E\u4E86\u8FD9\u4E9B\u4F9D\u8D56\u540E\uFF0C\u5C31\u53EF\u4EE5\u65B9\u4FBF\u5730\u5C06\u4EE3\u7801\u5206\u5272\u6210\u5355\u72EC\u7684\u5C0F\u5DE5\u7A0B\uFF0C\u6709\u52A9\u4E8ETypeScript\uFF08\u4EE5\u53CA\u5468\u8FB9\u7684\u5DE5\u5177\uFF09\u4E86\u89E3\u6784\u5EFA\u987A\u5E8F\u548C\u8F93\u51FA\u7ED3\u6784\u3002</p><p>TypeScript 3.0 \u8FD8\u5F15\u5165\u4E86\u4E00\u79CD\u65B0\u7684<code>tsc</code>\u6A21\u5F0F\uFF0C\u5373<code>--build</code>\u6807\u8BB0\uFF0C\u5B83\u4E0E\u5DE5\u7A0B\u5F15\u7528\u540C\u65F6\u8FD0\u7528\u53EF\u4EE5\u52A0\u901F\u6784\u5EFATypeScript\u3002</p>',4),d=s("\u76F8\u5173\u8BE6\u60C5\u8BF7\u9605\u8BFB"),m=s("\u5DE5\u7A0B\u5F15\u7528\u624B\u518C"),y=s("\u3002"),w=n("h2",{id:"\u5269\u4F59\u53C2\u6570\u548C\u5C55\u5F00\u8868\u8FBE\u5F0F\u91CC\u7684\u5143\u7EC4",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u5269\u4F59\u53C2\u6570\u548C\u5C55\u5F00\u8868\u8FBE\u5F0F\u91CC\u7684\u5143\u7EC4","aria-hidden":"true"},"#"),s(" \u5269\u4F59\u53C2\u6570\u548C\u5C55\u5F00\u8868\u8FBE\u5F0F\u91CC\u7684\u5143\u7EC4")],-1),f=n("p",null,"TypeScript 3.0 \u589E\u52A0\u4E86\u652F\u6301\u4EE5\u5143\u7EC4\u7C7B\u578B\u4E0E\u51FD\u6570\u53C2\u6570\u5217\u8868\u8FDB\u884C\u4EA4\u4E92\u7684\u80FD\u529B\u3002 \u5982\u4E0B\uFF1A",-1),h=s("\u5C06\u5E26\u6709\u5143\u7EC4\u7C7B\u578B\u7684\u5269\u4F59\u53C2\u6570\u6269\u5C55\u4E3A\u79BB\u6563\u53C2\u6570"),g=s("\u5C06\u5E26\u6709\u5143\u7EC4\u7C7B\u578B\u7684\u5C55\u5F00\u8868\u8FBE\u5F0F\u6269\u5C55\u4E3A\u79BB\u6563\u53C2\u6570"),x=s("\u6CDB\u578B\u5269\u4F59\u53C2\u6570\u4EE5\u53CA\u76F8\u5E94\u7684\u5143\u7EC4\u7C7B\u578B\u63A8\u65AD"),T=s("\u5143\u7EC4\u7C7B\u578B\u91CC\u7684\u53EF\u9009\u5143\u7D20"),_=s("\u5143\u7EC4\u7C7B\u578B\u91CC\u7684\u5269\u4F59\u5143\u7D20"),v=e(`<p>\u6709\u4E86\u8FD9\u4E9B\u7279\u6027\u540E\uFF0C\u4FBF\u6709\u53EF\u80FD\u5C06\u8F6C\u6362\u51FD\u6570\u548C\u5B83\u4EEC\u53C2\u6570\u5217\u8868\u7684\u9AD8\u9636\u51FD\u6570\u53D8\u4E3A\u5F3A\u7C7B\u578B\u7684\u3002</p><h3 id="\u5E26\u5143\u7EC4\u7C7B\u578B\u7684\u5269\u4F59\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#\u5E26\u5143\u7EC4\u7C7B\u578B\u7684\u5269\u4F59\u53C2\u6570" aria-hidden="true">#</a> \u5E26\u5143\u7EC4\u7C7B\u578B\u7684\u5269\u4F59\u53C2\u6570</h3><p>\u5F53\u5269\u4F59\u53C2\u6570\u91CC\u6709\u5143\u7EC4\u7C7B\u578B\u65F6\uFF0C\u5143\u7EC4\u7C7B\u578B\u88AB\u6269\u5C55\u4E3A\u79BB\u6563\u53C2\u6570\u5E8F\u5217\u3002 \u4F8B\u5982\uFF0C\u5982\u4E0B\u4E24\u4E2A\u58F0\u660E\u662F\u7B49\u4EF7\u7684\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">boolean</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span>args_0<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> args_1<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> args_2<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="\u5E26\u6709\u5143\u7EC4\u7C7B\u578B\u7684\u5C55\u5F00\u8868\u8FBE\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u5E26\u6709\u5143\u7EC4\u7C7B\u578B\u7684\u5C55\u5F00\u8868\u8FBE\u5F0F" aria-hidden="true">#</a> \u5E26\u6709\u5143\u7EC4\u7C7B\u578B\u7684\u5C55\u5F00\u8868\u8FBE\u5F0F</h3><p>\u5728\u51FD\u6570\u8C03\u7528\u4E2D\uFF0C\u82E5\u6700\u540E\u4E00\u4E2A\u53C2\u6570\u662F\u5143\u7EC4\u7C7B\u578B\u7684\u5C55\u5F00\u8868\u8FBE\u5F0F\uFF0C\u90A3\u4E48\u8FD9\u4E2A\u5C55\u5F00\u8868\u8FBE\u5F0F\u76F8\u5F53\u4E8E\u5143\u7EC4\u5143\u7D20\u7C7B\u578B\u7684\u79BB\u6563\u53C2\u6570\u5E8F\u5217\u3002</p><p>\u56E0\u6B64\uFF0C\u4E0B\u9762\u7684\u8C03\u7528\u90FD\u662F\u7B49\u4EF7\u7684\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> args<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">boolean</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">42</span><span class="token punctuation">,</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token function">foo</span><span class="token punctuation">(</span><span class="token number">42</span><span class="token punctuation">,</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">foo</span><span class="token punctuation">(</span>args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> args<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> args<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">foo</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="\u6CDB\u578B\u5269\u4F59\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#\u6CDB\u578B\u5269\u4F59\u53C2\u6570" aria-hidden="true">#</a> \u6CDB\u578B\u5269\u4F59\u53C2\u6570</h3><p>\u5269\u4F59\u53C2\u6570\u5141\u8BB8\u5E26\u6709\u6CDB\u578B\u7C7B\u578B\uFF0C\u8FD9\u4E2A\u6CDB\u578B\u7C7B\u578B\u88AB\u9650\u5236\u4E3A\u662F\u4E00\u4E2A\u6570\u7EC4\u7C7B\u578B\uFF0C\u7C7B\u578B\u63A8\u65AD\u7CFB\u7EDF\u80FD\u591F\u63A8\u65AD\u8FD9\u7C7B\u6CDB\u578B\u5269\u4F59\u53C2\u6570\u91CC\u7684\u5143\u7EC4\u7C7B\u578B\u3002\u8FD9\u6837\u5C31\u53EF\u4EE5\u8FDB\u884C\u9AD8\u9636\u6355\u83B7\u548C\u5C55\u5F00\u90E8\u5206\u53C2\u6570\u5217\u8868:</p><h4 id="\u4F8B\u5B50" tabindex="-1"><a class="header-anchor" href="#\u4F8B\u5B50" aria-hidden="true">#</a> \u4F8B\u5B50</h4><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">bind</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">U</span> <span class="token keyword">extends</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token constant">V</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token function-variable function">f</span><span class="token operator">:</span> <span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> <span class="token operator">...</span>args<span class="token operator">:</span> <span class="token constant">U</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">V</span><span class="token punctuation">,</span> x<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token constant">U</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">V</span><span class="token punctuation">;</span>

<span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token function">f3</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> z<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> f2 <span class="token operator">=</span> <span class="token function">bind</span><span class="token punctuation">(</span>f3<span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// (y: string, z: boolean) =&gt; void</span>
<span class="token keyword">const</span> f1 <span class="token operator">=</span> <span class="token function">bind</span><span class="token punctuation">(</span>f2<span class="token punctuation">,</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// (z: boolean) =&gt; void</span>
<span class="token keyword">const</span> f0 <span class="token operator">=</span> <span class="token function">bind</span><span class="token punctuation">(</span>f1<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// () =&gt; void</span>

<span class="token function">f3</span><span class="token punctuation">(</span><span class="token number">42</span><span class="token punctuation">,</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">f2</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">f1</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">f0</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u4E0A\u4F8B\u7684<code>f2</code>\u58F0\u660E\uFF0C\u7C7B\u578B\u63A8\u65AD\u53EF\u4EE5\u63A8\u65AD\u51FA<code>number</code>\uFF0C<code>[string, boolean]</code>\u548C<code>void</code>\u505A\u4E3A<code>T</code>\uFF0C<code>U</code>\u548C<code>V</code>\u3002</p><p>\u6CE8\u610F\uFF0C\u5982\u679C\u5143\u7EC4\u7C7B\u578B\u662F\u4ECE\u53C2\u6570\u5E8F\u5217\u4E2D\u63A8\u65AD\u51FA\u6765\u7684\uFF0C\u4E4B\u540E\u53C8\u6269\u5C55\u6210\u53C2\u6570\u5217\u8868\uFF0C\u5C31\u50CF<code>U</code>\u90A3\u6837\uFF0C\u539F\u6765\u7684\u53C2\u6570\u540D\u79F0\u4F1A\u88AB\u7528\u5728\u6269\u5C55\u4E2D\uFF08\u7136\u800C\uFF0C\u8FD9\u4E2A\u540D\u5B57\u6CA1\u6709\u8BED\u4E49\u4E0A\u7684\u610F\u4E49\u4E14\u662F\u5BDF\u89C9\u4E0D\u5230\u7684\uFF09\u3002</p><h3 id="\u5143\u7EC4\u7C7B\u578B\u91CC\u7684\u53EF\u9009\u5143\u7D20" tabindex="-1"><a class="header-anchor" href="#\u5143\u7EC4\u7C7B\u578B\u91CC\u7684\u53EF\u9009\u5143\u7D20" aria-hidden="true">#</a> \u5143\u7EC4\u7C7B\u578B\u91CC\u7684\u53EF\u9009\u5143\u7D20</h3><p>\u5143\u7EC4\u7C7B\u578B\u73B0\u5728\u5141\u8BB8\u5728\u5176\u5143\u7D20\u7C7B\u578B\u4E0A\u4F7F\u7528<code>?</code>\u540E\u7F00\uFF0C\u8868\u793A\u8FD9\u4E2A\u5143\u7D20\u662F\u53EF\u9009\u7684\uFF1A</p><h4 id="\u4F8B\u5B50-1" tabindex="-1"><a class="header-anchor" href="#\u4F8B\u5B50-1" aria-hidden="true">#</a> \u4F8B\u5B50</h4><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> t<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token builtin">string</span><span class="token operator">?</span><span class="token punctuation">,</span> <span class="token builtin">boolean</span><span class="token operator">?</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
t <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">42</span><span class="token punctuation">,</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
t <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">42</span><span class="token punctuation">,</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
t <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">42</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u5728<code>--strictNullChecks</code>\u6A21\u5F0F\u4E0B\uFF0C<code>?</code>\u4FEE\u9970\u7B26\u4F1A\u81EA\u52A8\u5730\u5728\u5143\u7D20\u7C7B\u578B\u4E2D\u5305\u542B<code>undefined</code>\uFF0C\u7C7B\u4F3C\u4E8E\u53EF\u9009\u53C2\u6570\u3002</p><p>\u5728\u5143\u7EC4\u7C7B\u578B\u7684\u4E00\u4E2A\u5143\u7D20\u7C7B\u578B\u4E0A\u4F7F\u7528<code>?</code>\u540E\u7F00\u4FEE\u9970\u7B26\u6765\u628A\u5B83\u6807\u8BB0\u4E3A\u53EF\u5FFD\u7565\u7684\u5143\u7D20\uFF0C\u4E14\u5B83\u53F3\u4FA7\u6240\u6709\u5143\u7D20\u4E5F\u540C\u65F6\u5E26\u6709\u4E86<code>?</code>\u4FEE\u9970\u7B26\u3002</p><p>\u5F53\u5269\u4F59\u53C2\u6570\u63A8\u65AD\u4E3A\u5143\u7EC4\u7C7B\u578B\u65F6\uFF0C\u6E90\u7801\u4E2D\u7684\u53EF\u9009\u53C2\u6570\u5728\u63A8\u65AD\u51FA\u7684\u7C7B\u578B\u91CC\u6210\u4E3A\u4E86\u53EF\u9009\u5143\u7EC4\u5143\u7D20\u3002</p><p>\u5E26\u6709\u53EF\u9009\u5143\u7D20\u7684\u5143\u7EC4\u7C7B\u578B\u7684<code>length</code>\u5C5E\u6027\u662F\u8868\u793A\u53EF\u80FD\u957F\u5EA6\u7684\u6570\u5B57\u5B57\u9762\u91CF\u7C7B\u578B\u7684\u8054\u5408\u7C7B\u578B\u3002 \u4F8B\u5982\uFF0C<code>[number, string?, boolean?]</code>\u5143\u7EC4\u7C7B\u578B\u7684<code>length</code>\u5C5E\u6027\u7684\u7C7B\u578B\u662F<code>1 | 2 | 3</code>\u3002</p><h3 id="\u5143\u7EC4\u7C7B\u578B\u91CC\u7684\u5269\u4F59\u5143\u7D20" tabindex="-1"><a class="header-anchor" href="#\u5143\u7EC4\u7C7B\u578B\u91CC\u7684\u5269\u4F59\u5143\u7D20" aria-hidden="true">#</a> \u5143\u7EC4\u7C7B\u578B\u91CC\u7684\u5269\u4F59\u5143\u7D20</h3><p>\u5143\u7EC4\u7C7B\u578B\u91CC\u6700\u540E\u4E00\u4E2A\u5143\u7D20\u53EF\u4EE5\u662F\u5269\u4F59\u5143\u7D20\uFF0C\u5F62\u5F0F\u4E3A<code>...X</code>\uFF0C\u8FD9\u91CC<code>X</code>\u662F\u6570\u7EC4\u7C7B\u578B\u3002 \u5269\u4F59\u5143\u7D20\u4EE3\u8868\u5143\u7EC4\u7C7B\u578B\u662F\u5F00\u653E\u7684\uFF0C\u53EF\u4EE5\u6709\u96F6\u4E2A\u6216\u591A\u4E2A\u989D\u5916\u7684\u5143\u7D20\u3002 \u4F8B\u5982\uFF0C<code>[number, ...string[]]</code>\u8868\u793A\u5E26\u6709\u4E00\u4E2A<code>number</code>\u5143\u7D20\u548C\u4EFB\u610F\u6570\u91CF<code>string</code>\u7C7B\u578B\u5143\u7D20\u7684\u5143\u7EC4\u7C7B\u578B\u3002</p><h4 id="\u4F8B\u5B50-2" tabindex="-1"><a class="header-anchor" href="#\u4F8B\u5B50-2" aria-hidden="true">#</a> \u4F8B\u5B50</h4><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">tuple</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> args<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> numbers<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">getArrayOfNumbers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> t1 <span class="token operator">=</span> <span class="token function">tuple</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// [string, number, boolean]</span>
<span class="token keyword">const</span> t2 <span class="token operator">=</span> <span class="token function">tuple</span><span class="token punctuation">(</span><span class="token string">&quot;bar&quot;</span><span class="token punctuation">,</span> <span class="token operator">...</span>numbers<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// [string, ...number[]]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u8FD9\u4E2A\u5E26\u6709\u5269\u4F59\u5143\u7D20\u7684\u5143\u7EC4\u7C7B\u578B\u7684<code>length</code>\u5C5E\u6027\u7C7B\u578B\u662F<code>number</code>\u3002</p><h2 id="\u65B0\u7684unknown\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u65B0\u7684unknown\u7C7B\u578B" aria-hidden="true">#</a> \u65B0\u7684<code>unknown</code>\u7C7B\u578B</h2><p>TypeScript 3.0\u5F15\u5165\u4E86\u4E00\u4E2A\u9876\u7EA7\u7684<code>unknown</code>\u7C7B\u578B\u3002 \u5BF9\u7167\u4E8E<code>any</code>\uFF0C<code>unknown</code>\u662F\u7C7B\u578B\u5B89\u5168\u7684\u3002 \u4EFB\u4F55\u503C\u90FD\u53EF\u4EE5\u8D4B\u7ED9<code>unknown</code>\uFF0C\u4F46\u662F\u5F53\u6CA1\u6709\u7C7B\u578B\u65AD\u8A00\u6216\u57FA\u4E8E\u63A7\u5236\u6D41\u7684\u7C7B\u578B\u7EC6\u5316\u65F6<code>unknown</code>\u4E0D\u53EF\u4EE5\u8D4B\u503C\u7ED9\u5176\u5B83\u7C7B\u578B\uFF0C\u9664\u4E86\u5B83\u81EA\u5DF1\u548C<code>any</code>\u5916\u3002 \u540C\u6837\u5730\uFF0C\u5728<code>unknown</code>\u6CA1\u6709\u88AB\u65AD\u8A00\u6216\u7EC6\u5316\u5230\u4E00\u4E2A\u786E\u5207\u7C7B\u578B\u4E4B\u524D\uFF0C\u662F\u4E0D\u5141\u8BB8\u5728\u5176\u4E0A\u8FDB\u884C\u4EFB\u4F55\u64CD\u4F5C\u7684\u3002</p><h3 id="\u4F8B\u5B50-3" tabindex="-1"><a class="header-anchor" href="#\u4F8B\u5B50-3" aria-hidden="true">#</a> \u4F8B\u5B50</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// In an intersection everything absorbs unknown</span>

<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T00</span></span> <span class="token operator">=</span> <span class="token builtin">unknown</span> <span class="token operator">&amp;</span> <span class="token keyword">null</span><span class="token punctuation">;</span>  <span class="token comment">// null</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T01</span></span> <span class="token operator">=</span> <span class="token builtin">unknown</span> <span class="token operator">&amp;</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>  <span class="token comment">// undefined</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T02</span></span> <span class="token operator">=</span> <span class="token builtin">unknown</span> <span class="token operator">&amp;</span> <span class="token keyword">null</span> <span class="token operator">&amp;</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>  <span class="token comment">// null &amp; undefined (which becomes never)</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T03</span></span> <span class="token operator">=</span> <span class="token builtin">unknown</span> <span class="token operator">&amp;</span> <span class="token builtin">string</span><span class="token punctuation">;</span>  <span class="token comment">// string</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T04</span></span> <span class="token operator">=</span> <span class="token builtin">unknown</span> <span class="token operator">&amp;</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">// string[]</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T05</span></span> <span class="token operator">=</span> <span class="token builtin">unknown</span> <span class="token operator">&amp;</span> <span class="token builtin">unknown</span><span class="token punctuation">;</span>  <span class="token comment">// unknown</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T06</span></span> <span class="token operator">=</span> <span class="token builtin">unknown</span> <span class="token operator">&amp;</span> <span class="token builtin">any</span><span class="token punctuation">;</span>  <span class="token comment">// any</span>

<span class="token comment">// In a union an unknown absorbs everything</span>

<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T10</span></span> <span class="token operator">=</span> <span class="token builtin">unknown</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">;</span>  <span class="token comment">// unknown</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T11</span></span> <span class="token operator">=</span> <span class="token builtin">unknown</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>  <span class="token comment">// unknown</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T12</span></span> <span class="token operator">=</span> <span class="token builtin">unknown</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>  <span class="token comment">// unknown</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T13</span></span> <span class="token operator">=</span> <span class="token builtin">unknown</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">;</span>  <span class="token comment">// unknown</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T14</span></span> <span class="token operator">=</span> <span class="token builtin">unknown</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">// unknown</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T15</span></span> <span class="token operator">=</span> <span class="token builtin">unknown</span> <span class="token operator">|</span> <span class="token builtin">unknown</span><span class="token punctuation">;</span>  <span class="token comment">// unknown</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T16</span></span> <span class="token operator">=</span> <span class="token builtin">unknown</span> <span class="token operator">|</span> <span class="token builtin">any</span><span class="token punctuation">;</span>  <span class="token comment">// any</span>

<span class="token comment">// Type variable and unknown in union and intersection</span>

<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T20</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token operator">&amp;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token comment">// T &amp; {}</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T21</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token operator">|</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token comment">// T | {}</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T22</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token operator">&amp;</span> <span class="token builtin">unknown</span><span class="token punctuation">;</span>  <span class="token comment">// T</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T23</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token operator">|</span> <span class="token builtin">unknown</span><span class="token punctuation">;</span>  <span class="token comment">// unknown</span>

<span class="token comment">// unknown in conditional types</span>

<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T30</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token builtin">unknown</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">T</span></span> <span class="token operator">?</span> <span class="token boolean">true</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">;</span>  <span class="token comment">// Deferred</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T31</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">unknown</span></span> <span class="token operator">?</span> <span class="token boolean">true</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">;</span>  <span class="token comment">// Deferred (so it distributes)</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T32</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token builtin">never</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">T</span></span> <span class="token operator">?</span> <span class="token boolean">true</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">;</span>  <span class="token comment">// true</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T33</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">never</span></span> <span class="token operator">?</span> <span class="token boolean">true</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">;</span>  <span class="token comment">// Deferred</span>

<span class="token comment">// keyof unknown</span>

<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T40</span></span> <span class="token operator">=</span> <span class="token keyword">keyof</span> <span class="token builtin">any</span><span class="token punctuation">;</span>  <span class="token comment">// string | number | symbol</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T41</span></span> <span class="token operator">=</span> <span class="token keyword">keyof</span> <span class="token builtin">unknown</span><span class="token punctuation">;</span>  <span class="token comment">// never</span>

<span class="token comment">// Only equality operators are allowed with unknown</span>

<span class="token keyword">function</span> <span class="token function">f10</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    x <span class="token operator">==</span> <span class="token number">5</span><span class="token punctuation">;</span>
    x <span class="token operator">!==</span> <span class="token number">10</span><span class="token punctuation">;</span>
    x <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token comment">// Error</span>
    x <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token comment">// Error</span>
    x <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span>  <span class="token comment">// Error</span>
    <span class="token operator">-</span>x<span class="token punctuation">;</span>  <span class="token comment">// Error</span>
    <span class="token operator">+</span>x<span class="token punctuation">;</span>  <span class="token comment">// Error</span>
<span class="token punctuation">}</span>

<span class="token comment">// No property accesses, element accesses, or function calls</span>

<span class="token keyword">function</span> <span class="token function">f11</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    x<span class="token punctuation">.</span>foo<span class="token punctuation">;</span>  <span class="token comment">// Error</span>
    x<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">// Error</span>
    <span class="token function">x</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// Error</span>
    <span class="token keyword">new</span> <span class="token class-name">x</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// Error</span>
<span class="token punctuation">}</span>

<span class="token comment">// typeof, instanceof, and user defined type predicates</span>

<span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token function">isFunction</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">)</span><span class="token operator">:</span> x <span class="token keyword">is</span> <span class="token builtin">Function</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">f20</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> x <span class="token operator">===</span> <span class="token string">&quot;string&quot;</span> <span class="token operator">||</span> <span class="token keyword">typeof</span> x <span class="token operator">===</span> <span class="token string">&quot;number&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        x<span class="token punctuation">;</span>  <span class="token comment">// string | number</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token keyword">instanceof</span> <span class="token class-name">Error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        x<span class="token punctuation">;</span>  <span class="token comment">// Error</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isFunction</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        x<span class="token punctuation">;</span>  <span class="token comment">// Function</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// Homomorphic mapped type over unknown</span>

<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T50</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T51</span></span> <span class="token operator">=</span> <span class="token constant">T50</span><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// { [x: string]: number }</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T52</span></span> <span class="token operator">=</span> <span class="token constant">T50</span><span class="token operator">&lt;</span><span class="token builtin">unknown</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// {}</span>

<span class="token comment">// Anything is assignable to unknown</span>

<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">f21</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>pAny<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> pNever<span class="token operator">:</span> <span class="token builtin">never</span><span class="token punctuation">,</span> pT<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> x<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">;</span>
    x <span class="token operator">=</span> <span class="token number">123</span><span class="token punctuation">;</span>
    x <span class="token operator">=</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">;</span>
    x <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    x <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    x <span class="token operator">=</span> x<span class="token punctuation">;</span>
    x <span class="token operator">=</span> pAny<span class="token punctuation">;</span>
    x <span class="token operator">=</span> pNever<span class="token punctuation">;</span>
    x <span class="token operator">=</span> pT<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// unknown assignable only to itself and any</span>

<span class="token keyword">function</span> <span class="token function">f22</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> v1<span class="token operator">:</span> <span class="token builtin">any</span> <span class="token operator">=</span> x<span class="token punctuation">;</span>
    <span class="token keyword">let</span> v2<span class="token operator">:</span> <span class="token builtin">unknown</span> <span class="token operator">=</span> x<span class="token punctuation">;</span>
    <span class="token keyword">let</span> v3<span class="token operator">:</span> object <span class="token operator">=</span> x<span class="token punctuation">;</span>  <span class="token comment">// Error</span>
    <span class="token keyword">let</span> v4<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> x<span class="token punctuation">;</span>  <span class="token comment">// Error</span>
    <span class="token keyword">let</span> v5<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> x<span class="token punctuation">;</span>  <span class="token comment">// Error</span>
    <span class="token keyword">let</span> v6<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token operator">=</span> x<span class="token punctuation">;</span>  <span class="token comment">// Error</span>
    <span class="token keyword">let</span> v7<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">|</span> <span class="token keyword">undefined</span> <span class="token operator">=</span> x<span class="token punctuation">;</span>  <span class="token comment">// Error</span>
<span class="token punctuation">}</span>

<span class="token comment">// Type parameter &#39;T extends unknown&#39; not related to object</span>

<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">f23</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token builtin">unknown</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> y<span class="token operator">:</span> object <span class="token operator">=</span> x<span class="token punctuation">;</span>  <span class="token comment">// Error</span>
<span class="token punctuation">}</span>

<span class="token comment">// Anything but primitive assignable to { [x: string]: unknown }</span>

<span class="token keyword">function</span> <span class="token function">f24</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>x<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">unknown</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    x <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    x <span class="token operator">=</span> <span class="token punctuation">{</span> a<span class="token operator">:</span> <span class="token number">5</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
    x <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    x <span class="token operator">=</span> <span class="token number">123</span><span class="token punctuation">;</span>  <span class="token comment">// Error</span>
<span class="token punctuation">}</span>

<span class="token comment">// Locals of type unknown always considered initialized</span>

<span class="token keyword">function</span> <span class="token function">f25</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> x<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> y <span class="token operator">=</span> x<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// Spread of unknown causes result to be unknown</span>

<span class="token keyword">function</span> <span class="token function">f26</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">,</span> z<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> o1 <span class="token operator">=</span> <span class="token punctuation">{</span> a<span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span> <span class="token operator">...</span>x <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token comment">// { a: number }</span>
    <span class="token keyword">let</span> o2 <span class="token operator">=</span> <span class="token punctuation">{</span> a<span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span> <span class="token operator">...</span>x<span class="token punctuation">,</span> <span class="token operator">...</span>y <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token comment">// unknown</span>
    <span class="token keyword">let</span> o3 <span class="token operator">=</span> <span class="token punctuation">{</span> a<span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span> <span class="token operator">...</span>x<span class="token punctuation">,</span> <span class="token operator">...</span>y<span class="token punctuation">,</span> <span class="token operator">...</span>z <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token comment">// any</span>
<span class="token punctuation">}</span>

<span class="token comment">// Functions with unknown return type don&#39;t need return expressions</span>

<span class="token keyword">function</span> <span class="token function">f27</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">unknown</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>

<span class="token comment">// Rest type cannot be created from unknown</span>

<span class="token keyword">function</span> <span class="token function">f28</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> <span class="token punctuation">{</span> <span class="token operator">...</span>a <span class="token punctuation">}</span> <span class="token operator">=</span> x<span class="token punctuation">;</span>  <span class="token comment">// Error</span>
<span class="token punctuation">}</span>

<span class="token comment">// Class properties of type unknown don&#39;t need definite assignment</span>

<span class="token keyword">class</span> <span class="token class-name"><span class="token constant">C1</span></span> <span class="token punctuation">{</span>
    a<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>  <span class="token comment">// Error</span>
    b<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">;</span>
    c<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br></div></div><h2 id="\u5728jsx\u91CC\u652F\u6301defaultprops" tabindex="-1"><a class="header-anchor" href="#\u5728jsx\u91CC\u652F\u6301defaultprops" aria-hidden="true">#</a> \u5728JSX\u91CC\u652F\u6301<code>defaultProps</code></h2>`,33),q=s("TypeScript 2.9\u548C\u4E4B\u524D\u7684\u7248\u672C\u4E0D\u652F\u6301\u5728JSX\u7EC4\u4EF6\u91CC\u4F7F\u7528"),E={href:"https://reactjs.org/docs/typechecking-with-proptypes.html#default-prop-values",target:"_blank",rel:"noopener noreferrer"},S=s("React\u7684"),P=n("code",null,"defaultProps",-1),j=s("\u58F0\u660E\u3002 \u7528\u6237\u901A\u5E38\u4E0D\u5F97\u4E0D\u5C06\u5C5E\u6027\u58F0\u660E\u4E3A\u53EF\u9009\u7684\uFF0C\u7136\u540E\u5728"),N=n("code",null,"render",-1),C=s("\u91CC\u4F7F\u7528\u975E"),A=n("code",null,"null",-1),F=s("\u7684\u65AD\u8A00\uFF0C\u6216\u8005\u5728\u5BFC\u51FA\u4E4B\u524D\u5BF9\u7EC4\u4EF6\u7684\u7C7B\u578B\u4F7F\u7528\u7C7B\u578B\u65AD\u8A00\u3002"),R=e(`<p>TypeScript 3.0\u5728<code>JSX</code>\u547D\u540D\u7A7A\u95F4\u91CC\u652F\u6301\u4E00\u4E2A\u65B0\u7684\u7C7B\u578B\u522B\u540D<code>LibraryManagedAttributes</code>\u3002 \u8FD9\u4E2A\u52A9\u624B\u7C7B\u578B\u5B9A\u4E49\u4E86\u5728\u68C0\u67E5JSX\u8868\u8FBE\u5F0F\u4E4B\u524D\u5728\u7EC4\u4EF6<code>Props</code>\u4E0A\u7684\u4E00\u4E2A\u7C7B\u578B\u8F6C\u6362\uFF1B\u56E0\u6B64\u6211\u4EEC\u53EF\u4EE5\u8FDB\u884C\u5B9A\u5236\uFF1A\u5982\u4F55\u5904\u7406\u63D0\u4F9B\u7684<code>props</code>\u4E0E\u63A8\u65AD<code>props</code>\u4E4B\u95F4\u7684\u51B2\u7A81\uFF0C\u63A8\u65AD\u5982\u4F55\u6620\u5C04\uFF0C\u5982\u4F55\u5904\u7406\u53EF\u9009\u6027\u4EE5\u53CA\u4E0D\u540C\u4F4D\u7F6E\u7684\u63A8\u65AD\u5982\u4F55\u7ED3\u5408\u5728\u4E00\u8D77\u3002</p><p>\u6211\u4EEC\u53EF\u4EE5\u5229\u7528\u5B83\u6765\u5904\u7406React\u7684<code>defaultProps</code>\u4EE5\u53CA<code>propTypes</code>\u3002</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>export interface Props {
    name: string;
}

export class Greet extends React.Component&lt;Props&gt; {
    render() {
        const { name } = this.props;
        return &lt;div&gt;Hello {name.toUpperCase()}!&lt;/div&gt;;
    }
    static defaultProps = { name: &quot;world&quot;};
}

// Type-checks! No type assertions needed!
let el = &lt;Greet /&gt;
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="\u8BF4\u660E" tabindex="-1"><a class="header-anchor" href="#\u8BF4\u660E" aria-hidden="true">#</a> \u8BF4\u660E</h3><h4 id="defaultprops\u7684\u786E\u5207\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#defaultprops\u7684\u786E\u5207\u7C7B\u578B" aria-hidden="true">#</a> <code>defaultProps</code>\u7684\u786E\u5207\u7C7B\u578B</h4><p>\u9ED8\u8BA4\u7C7B\u578B\u662F\u4ECE<code>defaultProps</code>\u5C5E\u6027\u7684\u7C7B\u578B\u63A8\u65AD\u800C\u6765\u3002\u5982\u679C\u6DFB\u52A0\u4E86\u663E\u5F0F\u7684\u7C7B\u578B\u6CE8\u91CA\uFF0C\u6BD4\u5982<code>static defaultProps: Partial&lt;Props&gt;;</code>\uFF0C\u7F16\u8BD1\u5668\u65E0\u6CD5\u8BC6\u522B\u54EA\u4E2A\u5C5E\u6027\u5177\u6709\u9ED8\u8BA4\u503C\uFF08\u56E0\u4E3A<code>defaultProps</code>\u7C7B\u578B\u5305\u542B\u4E86<code>Props</code>\u7684\u6240\u6709\u5C5E\u6027\uFF09\u3002</p><p>\u4F7F\u7528<code>static defaultProps: Pick&lt;Props, &quot;name&quot;&gt;;</code>\u505A\u4E3A\u663E\u5F0F\u7684\u7C7B\u578B\u6CE8\u91CA\uFF0C\u6216\u8005\u4E0D\u6DFB\u52A0\u7C7B\u578B\u6CE8\u91CA\u3002</p><p>\u5BF9\u4E8E\u51FD\u6570\u7EC4\u4EF6\uFF08\u4E4B\u524D\u53EB\u505ASFC\uFF09\uFF0C\u4F7F\u7528ES2015\u9ED8\u8BA4\u7684\u521D\u59CB\u5316\u5668\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>function Greet({ name = &quot;world&quot; }: Props) {
    return &lt;div&gt;Hello {name.toUpperCase()}!&lt;/div&gt;;
}
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="types-react\u7684\u6539\u52A8" tabindex="-1"><a class="header-anchor" href="#types-react\u7684\u6539\u52A8" aria-hidden="true">#</a> <code>@types/React</code>\u7684\u6539\u52A8</h4><p>\u4ECD\u9700\u8981\u5728<code>@types/React</code>\u91CC<code>JSX</code>\u547D\u540D\u7A7A\u95F4\u4E0A\u6DFB\u52A0<code>LibraryManagedAttributes</code>\u5B9A\u4E49\u3002</p><h2 id="reference-lib-\u6307\u4EE4" tabindex="-1"><a class="header-anchor" href="#reference-lib-\u6307\u4EE4" aria-hidden="true">#</a> <code>/// &lt;reference lib=&quot;...&quot; /&gt;</code>\u6307\u4EE4</h2><p>TypeScript\u589E\u52A0\u4E86\u4E00\u4E2A\u65B0\u7684\u4E09\u659C\u7EBF\u6307\u4EE4\uFF08<code>/// &lt;reference lib=&quot;name&quot; /&gt;</code>\uFF09\uFF0C\u5141\u8BB8\u4E00\u4E2A\u6587\u4EF6\u663E\u5F0F\u5730\u5305\u542B\u4E00\u4E2A\u5DF2\u77E5\u7684\u5185\u7F6E_lib_\u6587\u4EF6\u3002</p><p>\u5185\u7F6E\u7684_lib_\u6587\u4EF6\u7684\u5F15\u7528\u548C_tsconfig.json_\u91CC\u7684\u7F16\u8BD1\u5668\u9009\u9879<code>&quot;lib&quot;</code>\u76F8\u540C\uFF08\u4F8B\u5982\uFF0C\u4F7F\u7528<code>lib=&quot;es2015&quot;</code>\u800C\u4E0D\u662F<code>lib=&quot;lib.es2015.d.ts&quot;</code>\u7B49\uFF09\u3002</p><p>\u5F53\u4F60\u5199\u7684\u58F0\u660E\u6587\u4EF6\u4F9D\u8D56\u4E8E\u5185\u7F6E\u7C7B\u578B\u65F6\uFF0C\u4F8B\u5982DOM APIs\u6216\u5185\u7F6E\u7684JS\u8FD0\u884C\u65F6\u6784\u9020\u51FD\u6570\u5982<code>Symbol</code>\u6216<code>Iterable</code>\uFF0C\u63A8\u8350\u4F7F\u7528\u4E09\u659C\u7EBF\u5F15\u7528\u6307\u4EE4\u3002\u4E4B\u524D\uFF0C\u8FD9\u4E2A<code>.d.ts</code>\u6587\u4EF6\u4E0D\u5F97\u4E0D\u6DFB\u52A0\u91CD\u8986\u7684\u7C7B\u578B\u58F0\u660E\u3002</p><h3 id="\u4F8B\u5B50-4" tabindex="-1"><a class="header-anchor" href="#\u4F8B\u5B50-4" aria-hidden="true">#</a> \u4F8B\u5B50</h3><p>\u5728\u67D0\u4E2A\u6587\u4EF6\u91CC\u4F7F\u7528 <code>/// &lt;reference lib=&quot;es2017.string&quot; /&gt;</code>\u7B49\u540C\u4E8E\u6307\u5B9A<code>--lib es2017.string</code>\u7F16\u8BD1\u9009\u9879\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">/// &lt;reference lib=&quot;es2017.string&quot; /&gt;</span>

<span class="token string">&quot;foo&quot;</span><span class="token punctuation">.</span><span class="token function">padStart</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>`,18);function V(L,U){const p=o("RouterLink"),c=o("ExternalLinkIcon");return l(),r(u,null,[b,n("p",null,[d,a(p,{to:"/project-config/project-references.html"},{default:t(()=>[m]),_:1}),y]),w,f,n("ul",null,[n("li",null,[a(p,{to:"/release-notes/typescript-3.0.html#rest-parameters-with-tuple-types"},{default:t(()=>[h]),_:1})]),n("li",null,[a(p,{to:"/release-notes/typescript-3.0.html#spread-expressions-with-tuple-types"},{default:t(()=>[g]),_:1})]),n("li",null,[a(p,{to:"/release-notes/typescript-3.0.html#generic-rest-parameters"},{default:t(()=>[x]),_:1})]),n("li",null,[a(p,{to:"/release-notes/typescript-3.0.html#optional-elements-in-tuple-types"},{default:t(()=>[T]),_:1})]),n("li",null,[a(p,{to:"/release-notes/typescript-3.0.html#rest-elements-in-tuple-types"},{default:t(()=>[_]),_:1})])]),v,n("p",null,[q,n("a",E,[S,P,a(c)]),j,N,C,A,F]),R],64)}var I=k(i,[["render",V]]);export{I as default};
